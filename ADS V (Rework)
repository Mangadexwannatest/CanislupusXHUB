repeat wait() until game:IsLoaded()
if not string.find(game:GetService "MarketplaceService" :GetProductInfo(game.PlaceId).Name,"Anime Dimension") or game:GetService "CoreGui":FindFirstChild("CrazyDay") then return end

do
    if not getgenv()["auto execute enable"] then
        game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(state)
            local QueueOnTeleport = queue_on_teleport or queueonteleport or (syn and syn.queue_on_teleport)
            if state == Enum.TeleportState.InProgress then
                getgenv()["Teleport InProgress"] = true
                QueueOnTeleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Mangadexwannatest/CanislupusXHUB/main/ADS%20V%20(Rework)'))()")
            end
        end)
        game:GetService "Players".LocalPlayer.Idled:connect(function()
            game:GetService("VirtualUser"):CaptureController()
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end)
        getgenv()["auto execute enable"] = true
    end
end

local G = getgenv()
local Playing_Mode = 0
local Tween_Info
local TimeStep
local Connect1, Connect2, Connect3
local igname, igspeed, baspeed =
    "Ignore",
    0.175,
    140
local Rarity = {}
local Players, LocalPlayer, CoreGui, Workspace, ReplicatedStorage, HttpService, RunService, PlayerGui, TweenService =
    game:GetService "Players",
    game:GetService "Players".LocalPlayer,
    game:GetService "CoreGui",
    game:GetService "Workspace",
    game:GetService "ReplicatedStorage",
    game:GetService "HttpService",
    game:GetService "RunService",
    game:GetService "Players".LocalPlayer.PlayerGui,
    game:GetService "TweenService"
local instance_I, instance_F, instance_U1, instance_U2, bv =
    Instance.new("ImageButton"),
    Instance.new("Frame"),
    Instance.new("UICorner"),
    Instance.new("UIStroke"),
    Instance.new("BodyVelocity")
local RemoteEvent, RemoteFunction =
    ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("MainRemoteEvent"),
    ReplicatedStorage:WaitForChild("RemoteFunctions"):WaitForChild("MainRemoteFunction")
local LocalID, Game, Update, BlackList_Characters, Currency_Name, Room, Raid =
    Players:GetUserIdFromNameAsync(LocalPlayer.Name),
    "Anime Dimensions Simulator (Rework)",
    " 1.0.2",
    {"Naruto","Sasuke"},
    {"Gold","TraitToken","RaidCurrency","BossRushCurrency","Gem"},
    {
        "Titan Dimension",
        "Demon Dimension",
        "Curse Dimension",
        "Villain Dimension",
        "Sword Dimension",
        "Ghoul Dimension",
        "Fate Dimension",
        "Slime Dimension",
        "Devil Dimension",
        "Pirate Dimension",
        "Alien Dimension",
        "Level Dimension"
    },
    {
        "Divine Guardian Raid",
        "Blue Devil Raid",
        "Psycho Student Raid",
        "Buff Boy Raid",
        "Warlord Raid",
        "King of Curses Raid",
        "Black Pasta Raid",
        "Cosmic Wolfman Raid",
        "Joto Raid",
        "Matsuri Raid",
        "Tonjuro Sun God Raid",
        "Vio Raid",
        "Demon Lord Raid",
        "Ichini Fullbring Raid",
        "Roku Ultra Instinct Raid",
        "Chainsaw Raid",
        "Nardo Beast Raid",
        "Cursed Sage Raid",
        "Red Emperor Raid",
        "Tengu Raid",
        "Yomichi Raid",
        "Christmas Raid",
        "Infinity Nojo Raid",
        "Combat Titan Raid",
        "Esper Raid",
        "Gear 5 Fluffy Raid",
        "Tengoku Raid",
        "Hirito Raid",
        "Titan Raid"
    }
local StatDisplay, Level, CrazyDayF, Item_Rewards, Currency_Number, Currency_Rewards =
    ReplicatedStorage:WaitForChild(LocalPlayer.Name.."StatDisplay"),
    LocalPlayer:WaitForChild("leaderstats").Level,
    "CrazyDay/"..Game.."/"..LocalID.."/",
    {"`None      `"},
    {"`None     `"},
    {"None"}
    if not isfolder("CrazyDay") then repeat makefolder("CrazyDay") task.wait() until isfolder("CrazyDay") makefolder("CrazyDay/"..Game)
    elseif isfolder("CrazyDay") and not isfolder("CrazyDay/"..Game) then makefolder("CrazyDay/"..Game) end
    if not LocalPlayer.Character then LocalPlayer.CharacterAdded:Wait() wait() end
    local function Gui_CrazyDay()
        if CoreGui:FindFirstChild("CrazyDay") then
            for i,v in ipairs(CoreGui.CrazyDay:GetChildren()) do
                if v.Name == "Frame" and i == 2 then
                    return v
                end
            end
        end
    end
    local function uiinfo(tabnum, sectionname)
        if Gui_CrazyDay() then
            G["uiinfo"] = nil
            for i,v in ipairs(Gui_CrazyDay().CanvasGroup:GetChildren()) do
                if v:IsA("ScrollingFrame") and i == tabnum then
                    for g,k in ipairs(v:GetChildren()) do
                        if k.Name == "Frame" and k:FindFirstChild("TextLabel") and k.TextLabel.Text == sectionname then
                            G["uiinfo"] = k:FindFirstChild("Frame")
                        end
                    end
                end
            end
        end
    end
    local function SetParagraphValue(tabnum, sectionname, addnum, main_or_value, values)
        if Gui_CrazyDay() then
            uiinfo(tabnum,sectionname)
            for i,v in ipairs(G["uiinfo"]:GetChildren()) do
                if v.Name == "TextButton" and i == addnum + 1 then
                    for k,g in ipairs(v.Frame:GetChildren()) do
                        if k == main_or_value and g:IsA("TextLabel") then
                            g.Text = values
                        end
                    end
                end
            end
        end
    end
    local function None_equip()
        local a = PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay
        if StatDisplay.CardsOwned.Value >= 3 then
            if (a.Slot1.ItemImage.Image == "" or a.Slot2.ItemImage.Image == "" or a.Slot3.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif StatDisplay.CardsOwned.Value == 2 then
            if (a.Slot1.ItemImage.Image == "" or a.Slot2.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif StatDisplay.CardsOwned.Value == 1 then
            if (a.Slot1.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif StatDisplay.CardsOwned.Value == 0 then
            return "Zero"
        end
    end
    local function enemy(name)
        local dist, thing = math.huge, false
        for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
            if name == "AllMob" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    local mag = (LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            elseif name == "Boss" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v.EnemyHealthBarGui.Enabled == false then
                    local mag = (LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            elseif name == "Bring" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v.Head.Transparency ~= 10 then
                    local mag = (LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            end
        end
        return thing
    end
    local function misc_local(name, number)
        if name == "number" then
            local DigitsInNumber = math.max(math.ceil(math.log10(number+1)),1)
            local FormattedNumber
            local NotationToUse
            local TableOfLetters = {"", "K", "M", "B", "T"}
            local NumberOfDigitsToShow = 1.5*(DigitsInNumber%3)^2 - 3.5*(DigitsInNumber%3) + 5
            FormattedNumber = string.sub(tostring(number/10^(DigitsInNumber-1)),1,NumberOfDigitsToShow) 
            local FinalNumber = string.sub(FormattedNumber*(10^((DigitsInNumber-1)%3)),1,NumberOfDigitsToShow) 
            if DigitsInNumber == 3 then
                FinalNumber = tostring(math.ceil(tonumber(FinalNumber)))
            end
            NotationToUse = FinalNumber..TableOfLetters[math.ceil(DigitsInNumber/3)]
            return NotationToUse
        elseif name == "color" then
            local int = math.floor(number.r*255)*256^2+math.floor(number.g*255)*256+math.floor(number.b*255)
            local current = int
            local final = ""
            local hexChar = {"a", "b", "c", "d", "e", "f"}

            repeat local remainder = current % 16
                local char = tostring(remainder)
                if remainder >= 10 then
                    char = hexChar[1 + remainder - 10]
                end
                current = math.floor(current/16)
                final = final..char
            until current <= 0
            return "0x"..string.reverse(final)
        elseif name == "CharacterShadownActived" then
            local a = {}
            for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.SpeedRaidCharacterSelector.Shade.SpeedRaidCharacterInventoryScrollingFrame:GetChildren()) do
                if v:IsA("ImageButton") and v.CharacterImage.ImageTransparency == 0 then
                    table.insert(a,v.Name)
                end
            end
            return #a
        elseif name == "CharacterGet" then
            for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.SpeedRaidCharacterSelector.Shade.SpeedRaidCharacterInventoryScrollingFrame:GetChildren()) do
                if v:IsA("ImageButton") and v.CharacterImage.ImageTransparency == 0 then
                    return v.Name
                end
            end
        end
    end
    local function enemy_misc(name)
        if name == "Normal" then
            for i,v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    return v
                end
            end
        elseif name == "Count" then
            local a = {}
            for i,v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    table.insert(a,v.Name)
                end
            end
            return #a
        end
    end
    local function is_usingskill()
        local a = {}
        if LocalPlayer.Character.Humanoid.WalkSpeed == 0 or LocalPlayer.Character.HumanoidRootPart.Anchored == true then
            table.insert(a,"Animation")
        end
        for i,v in ipairs(LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
            if v.Name == "Animation" then
                table.insert(a,v.Name)
            end
        end
        return #a
    end
    local function tween_function(Part, CFrame, Speed)
        Tween_Info = TweenService:Create(LocalPlayer.Character.HumanoidRootPart,TweenInfo.new((Part.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude/Speed,Enum.EasingStyle.Linear),{CFrame = Part.CFrame * CFrame})
    end
    local function gui_misc(name)
        if name == "Bossbar" then
           return PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
        elseif name == "RaidResult" then
            for i,v in ipairs(PlayerGui.UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame:GetDescendants()) do
                if v.Name == "RaidRewardGridFrame" and v.Parent.Name == 'Shadow' then
                    return v
                end
            end
        end
    end
    local function local_misc(name, value)
        if name == "Stage" then
            return LocalPlayer.RespawnLocation.Name:split("SpawnLocation")[2]
        elseif name == "Dist" then
            return (LocalPlayer.Character.HumanoidRootPart.Position - value.Position).magnitude
        elseif name == "CanCollide" then
            for i,v in ipairs(LocalPlayer.Character:GetChildren()) do
                if v:IsA("BasePart") and v.CanCollide ~= value then
                    v.CanCollide = value
                end
            end
        end
    end
    local function Currency_values(name)
        if name == "Exp" then
            return PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text:split("%")[1].."/100%"
        elseif name == "BossRush" then
            return PlayerGui.MainGui.CenterUIFrame.BossRushShop.BossRushShopCurrencyCounter.BossRushShopCurrencyAmount.Text
        elseif name == "RaidToken" then
            return PlayerGui.MainGui.CenterUIFrame.Shop.Frame.ShopRaidTokenCounter.ShopRaidTokenAmount.Text
        elseif name == "TraitToken" then
            return PlayerGui.MainGui.CenterUIFrame.CharacterTraitFrame.Frame.TraitGearChangeTrait.Text
        elseif name == "ShadowCoin" then
            return PlayerGui.MainGui.CenterUIFrame.RaidShop.SpeedRaidShopUIHolder.SpeedRaidShopCurrencyCounter.SpeedRaidShopCurrencyAmount.Text
        elseif name == "Gold" then
            for i,v in ipairs(PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetDescendants()) do
                if v.Name == "Gold" and v:IsA("TextLabel") then
                    return v.Text
                end
            end
        elseif name == "Gem" then
            for i,v in ipairs(PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetDescendants()) do
                if v.Name == "Gem" and v:IsA("TextLabel") then
                    return v.Text
                end
            end
        end
    end
    local function Teleport_circle()
        local dist, thing = 175, false
        for i,v in ipairs(Workspace.GameMap:FindFirstChildOfClass("Model"):GetChildren()) do
            if string.find(v.Name,"Teleport") and not string.find(v.Name,"Destination") then
                local mag = (LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                if mag < dist and local_misc("Dist", enemy("AllMob").HumanoidRootPart) > 175 then
                    Playing_Mode = 0
                    dist = mag
                    thing = v
                end
            end
        end
        return thing
    end
    local function CFramePart(Object)
        local dist, thing = math.huge, false
        for i,v in ipairs(Object:GetChildren()) do
            if v:IsA("Part") or v:IsA("BasePart") or v:IsA("MeshPart") then
                local mag = (LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                if mag < dist then
                    dist = mag
                    thing = v.Name
                end
            end
        end
        return thing
    end
    local function Best_cards()
        local a = {}
        local b = {}
        for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") and v.LayoutOrder >= 1 then
                table.insert(a,{
                    ["name"] = v.Name,
                    ["lvl"] = v.LayoutOrder
                })
            end
        end
        table.sort(a,function (x,c)
            return x["lvl"] < c["lvl"]
        end)
        for i,v in pairs(a) do
            table.insert(b,v["name"])
        end
        return b
    end
    local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
    local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
    local O = Fluent.Options
    local Window = Fluent:CreateWindow({
        Title = Game..Update,
        SubTitle = " [YT : @crazyday3693]",
        TabWidth = 160, Size = UDim2.fromOffset(580, 460),
        Acrylic = false,
        Theme = "Amethyst",
        MinimizeKey = nil
    })
    local Tabs = {
        Join = Window:AddTab({ Title = "Join", Icon = "rbxassetid://17629903752"}),
        Game = Window:AddTab({ Title = "Game", Icon = "rbxassetid://17629899973"}),
        Skill = Window:AddTab({ Title = "Skill", Icon = "rbxassetid://17789519521"}),
        Webhook = Window:AddTab({ Title = "Webhook", Icon = "rbxassetid://17789550683"}),
        Settings = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://17630002584"})
    }
    for i,v in ipairs(CoreGui:GetChildren()) do
        if v.Name == "ScreenGui" or v.Name == "CrazyDay" then
            for k,g in ipairs(v:GetDescendants()) do
                if g.Name == "TextLabel" and (g.Text == Game..Update or string.find(g.Text,Game)) then
                    for _,imageidof in ipairs(g.Parent.Parent:GetChildren()) do
                        if imageidof.Name == "TextButton" and imageidof:FindFirstChild("Icon") and imageidof.Icon.Image == "rbxassetid://9886659276" then
                            imageidof.Visible = false
                        end
                    end
                end
            end
        end
    end
    while true do
        if CoreGui:FindFirstChild("CrazyDay") == nil then
            for i,v in ipairs(CoreGui:GetChildren()) do
                if v.Name == "ScreenGui" then
                    for k,g in ipairs(v:GetDescendants()) do
                        if g.Name == "TextLabel" and (g.Text == Game..Update or string.find(g.Text,Game)) then
                            g.Parent.Parent.Parent.Parent.Name = "CrazyDay"
                        end
                    end
                end
            end
        end
        if CoreGui:FindFirstChild("CrazyDay") then
            G["Loading (Gui)"] = true
            Fluent:Notify({Title = "Successfully loaded", Content = "Time: "..tostring(Workspace.DistributedGameTime), SubContent = nil, Duration = 10})
            break
        end
        task.wait()
    end
    local Interface_AddSection = Tabs.Settings:AddSection("Interfaces")
    local Settings_AddSection = Tabs.Settings:AddSection("Settings")
    Interface_AddSection:AddDropdown("Them", {
        Title = "Them",
        Description = "Changes the interface theme.",
        Values = {
            "Dark",
            "Darker",
            "Light",
            "Aqua",
            "Amethyst",
            "Rose"
        },
        Multi = false,
        Default = 5,
        Callback = function (v)
            Fluent:SetTheme(v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Interface_AddSection:AddToggle("Acrylic", {
        Title = "Acrylic",
        Description = "The blurred background requires graphic quallity 8 +.",
        Default = false,
        Callback = function (v)
            Fluent:ToggleAcrylic(v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Interface_AddSection:AddToggle("Transparency", {
        Title = "Transparency",
        Description = "Makes the interface transparent.",
        Default = false,
        Callback = function (v)
            Fluent:ToggleTransparency(v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Settings_AddSection:AddToggle("Auto Save", {
        Title = "Auto Save",
        Description = "Automatically saves all configuration settings.",
        Default = true,
        Callback = function (v)
            if G["Loading (Gui)"] == false then SaveManager:Save("Configs") end
        end
    })
    Settings_AddSection:AddToggle("Auto Hide Gui", {
        Title = "Auto Hide Gui",
        Description = "Automatically hide your gui after execute the script.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == true and Gui_CrazyDay() and not G["Successfully Hide"] then
                if CoreGui.CrazyDay:FindFirstChild("ToggleClose") then
                    Gui_CrazyDay().Visible = false
                    CoreGui.CrazyDay:FindFirstChild("ToggleClose").Image = "rbxassetid://17789926070"
                    G["Successfully Hide"] = true
                end
            end
        end
    })
    Settings_AddSection:AddToggle("Black Screen", {
        Title = "Black Screen",
        Description = "Disable 3DRendering for best performance.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if CoreGui:FindFirstChild("CrazyDay") and CoreGui.CrazyDay:FindFirstChild("Black Screen") then
                CoreGui.CrazyDay["Black Screen"].Visible = v
                RunService:Set3dRenderingEnabled(not v)
            end
        end
    })
    Settings_AddSection:AddButton({
        Title = "Reset all configs",
        Description = "Press the button to reset all configuration to default.",
        Callback = function()
            Window:Dialog({
                Title = "Notify",
                Content = "Do you want to reset all configuration?",
                Buttons = {
                    {
                        Title = "Yes",
                        Callback = function()
                            writefile(CrazyDayF.."settings/Configs.json",[[
                            {"objects":[{"idx":"Current Dimension","type":"Dropdown","mutli":false,"value":"Titan Dimension"},{"idx":"Auto Save","type":"Toggle","value":true},{"idx":"Current Time Type","type":"Dropdown","mutli":false,"value":"Minute"},{"idx":"Auto Claim (Quest)","type":"Toggle","value":false},{"idx":"Them","type":"Dropdown","mutli":false,"value":"Amethyst"},{"idx":"Auto Equip","type":"Toggle","value":false},{"idx":"Current Difficulty","type":"Dropdown","mutli":false,"value":"Easy"},{"idx":"Health to Safe","type":"Slider","value":"55"},{"idx":"Auto Join (Raid)","type":"Toggle","value":false},{"idx":"Current Distance","type":"Slider","value":"6.5"},{"idx":"Transparency","type":"Toggle","value":false},{"idx":"Skill Two","type":"Dropdown","mutli":false,"value":"2"},{"idx":"Auto Hide Gui","type":"Toggle","value":false},{"idx":"Current Assists","type":"Dropdown","mutli":true,"value":{"Assist2":true,"Fruit1":true,"Fruit2":true,"Assist1":true}},{"idx":"Hard core","type":"Toggle","value":false},{"idx":"Auto Join (Speed Raid)","type":"Toggle","value":false},{"idx":"Acrylic","type":"Toggle","value":false},{"idx":"Auto Join (Raid Challenge)","type":"Toggle","value":false},{"idx":"Auto Equip Character","type":"Toggle","value":false},{"idx":"Webhook URL","type":"Input","text":""},{"idx":"Skill Third","type":"Dropdown","mutli":false,"value":"3"},{"idx":"Auto Skill","type":"Toggle","value":true},{"idx":"Current Skill Distance","type":"Slider","value":"10"},{"idx":"Skill Fifth","type":"Dropdown","mutli":false,"value":"5"},{"idx":"Auto Join (Current Dimension)","type":"Toggle","value":false},{"idx":"Auto Set Distance","type":"Toggle","value":true},{"idx":"Auto Join (Infinite Mode)","type":"Toggle","value":false},{"idx":"Auto Back to Lobby","type":"Toggle","value":false},{"idx":"Send Webhook","type":"Toggle","value":false},{"idx":"Current Attack Method","type":"Dropdown","mutli":false,"value":"Remote"},{"idx":"Skill One","type":"Dropdown","mutli":false,"value":"1"},{"idx":"Dash no cooldown","type":"Toggle","value":false},{"idx":"Auto Retry","type":"Toggle","value":false},{"idx":"Auto Claim (Speed Raid)","type":"Toggle","value":false},{"idx":"Black Screen","type":"Toggle","value":false},{"idx":"Current Time","type":"Slider","value":"15"},{"idx":"Auto Join (Boss Rush)","type":"Toggle","value":false},{"idx":"Auto Upgrade","type":"Toggle","value":false},{"idx":"Auto Safe","type":"Toggle","value":false},{"idx":"Current Rarity","type":"Dropdown","mutli":true,"value":{"Common":true,"Uncommon":true}},{"idx":"Auto Sell","type":"Toggle","value":false},{"idx":"Auto Join (Highnest)","type":"Toggle","value":false},{"idx":"Current Farm Mode","type":"Dropdown","mutli":false,"value":"Bring Mode"},{"idx":"Webhook Color","type":"Colorpicker","transparency":0,"value":"7d7d7d"},{"idx":"Current Method","type":"Dropdown","mutli":false,"value":"Over"},{"idx":"Friends Only","type":"Toggle","value":false},{"idx":"Dodge Skill","type":"Toggle","value":true},{"idx":"Skill Fourth","type":"Dropdown","mutli":false,"value":"4"},{"idx":"Current Raid","type":"Dropdown","mutli":false,"value":"Titan Raid"}]}
                            ]])
                            task.wait(0.35)
                            do
                                SaveManager:Load("Configs")
                            end
                            Fluent:Notify({
                                Title = "Successfully reseted configs",
                                Content = "",
                                SubContent = nil,
                                Duration = 3.5
                            })
                        end
                    },
                    {
                        Title = "No",
                        Callback = function()
                           --// setclipboard(tostring(readfile(CrazyDayF.."settings/Configs.json")))
                        end
                    }
                }
            })
        end
    })
    local Dimension_AddSection = Tabs.Join:AddSection("Dimension")
    Dimension_AddSection:AddDropdown("Current Dimension", {
        Title = "Select Dimension",
        Description = nil,
        Values = Room,
        Multi = false,
        Default = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if G["Loading (Gui)"] == false then
                if (v == Room[5] or v == Room[6] or v == Room[7] or v == Room[8]) and O["Current Difficulty"].Value == "Hard" then
                    O["Current Difficulty"]:SetValue("Easy")
                elseif (v == Room[9] or v == Room[10] or v == Room[11] or v == Room[12]) and G["Current Difficulty"] ~= "Nightmare" then
                    O["Current Difficulty"]:SetValue("Nightmare")
                end
            end
        end
    })
    Dimension_AddSection:AddDropdown("Current Difficulty", {
        Title = "Select Difficulty",
        Description = nil,
        Values = {
            "Easy",
            "Hard",
            "Nightmare"
        },
        Multi = false,
        Default = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if G["Loading (Gui)"] == false then
                local Val = O["Current Dimension"].Value
                if (Val == Room[5] or Val == Room[6] or Val == Room[7] or Val == Room[8]) and v == "Hard" then
                    O["Current Difficulty"]:SetValue("Easy")
                elseif (Val == Room[9] or Val == Room[10] or Val == Room[11] or Val == Room[12]) and v ~= "Nightmare" then
                    O["Current Difficulty"]:SetValue("Nightmare")
                end
            end
        end
    })
    Dimension_AddSection:AddToggle("Hard core", {
        Title = "Hard core",
        Description = nil,
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Dimension_AddSection:AddToggle("Friends Only", {
        Title = "Friends Only",
        Description = nil,
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Dimension_AddSection:AddToggle("Auto Retry", {
        Title = "Auto Retry",
        Description = "Automatically replay the game if the game ends.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Dimension_AddSection:AddToggle("Auto Join (Current Dimension)", {
        Title = "Auto Join (Current Dimension)",
        Description = "Automatically creates and starts the selected dimension.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Dimension_AddSection:AddToggle("Auto Join (Highnest)", {
        Title = "Auto Join (Highnest)",
        Description = "Automatically create and start the highest dimension.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == true and (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then
                local Val1 = O["Current Difficulty"]
                local Val2 = O["Current Dimension"]
                if Level.Value > 0 and Level.Value < 6 then
                    Val1.Value = "Easy"
                    Val2.Value = "Titan Dimension"
                elseif Level.Value > 5 and Level.Value < 11 then
                    Val1.Value = "Hard"
                    Val2.Value = "Titan Dimension"
                elseif Level.Value > 10 and Level.Value < 16 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Titan Dimension"
                elseif Level.Value > 15 and Level.Value < 21 then
                    Val1.Value = "Easy"
                    Val2.Value = "Demon Dimension"
                elseif Level.Value > 20 and Level.Value < 26 then
                    Val1.Value = "Hard"
                    Val2.Value = "Demon Dimension"
                elseif Level.Value > 25 and Level.Value < 31 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Demon Dimension"
                elseif Level.Value > 30 and Level.Value < 36 then
                    Val1.Value = "Easy"
                    Val2.Value = "Curse Dimension"
                elseif Level.Value > 35 and Level.Value < 41 then
                    Val1.Value = "Hard"
                    Val2.Value = "Curse Dimension"
                elseif Level.Value > 40 and Level.Value < 46 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Curse Dimension"
                elseif Level.Value > 45 and Level.Value < 51 then
                    Val1.Value = "Easy"
                    Val2.Value = "Villain Dimension"
                elseif Level.Value > 50 and Level.Value < 56 then
                    Val1.Value = "Hard"
                    Val2.Value = "Villain Dimension"
                elseif Level.Value > 55 and Level.Value < 61 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Villain Dimension"
                elseif Level.Value > 60 and Level.Value < 68 then
                    Val1.Value = "Easy"
                    Val2.Value = "Sword Dimension"
                elseif Level.Value > 67 and Level.Value < 76 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Sword Dimension"
                elseif Level.Value > 75 and Level.Value < 83 then
                    Val1.Value = "Easy"
                    Val2.Value = "Ghoul Dimension"
                elseif Level.Value > 82 and Level.Value < 91 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Ghoul Dimension"
                elseif Level.Value > 90 and Level.Value < 98 then
                    Val1.Value = "Easy"
                    Val2.Value = "Fate Dimension"
                elseif Level.Value > 97 and Level.Value < 106 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Fate Dimension"
                elseif Level.Value > 105 and Level.Value < 113 then
                    Val1.Value = "Easy"
                    Val2.Value = "Slime Dimension"
                elseif Level.Value > 112 and Level.Value < 121 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Slime Dimension"
                elseif Level.Value > 120 and Level.Value < 131 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Devil Dimension"
                elseif Level.Value > 130 and Level.Value < 141 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Pirate Dimension"
                elseif Level.Value > 140 and Level.Value < 151 then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Alien Dimension"
                elseif Level.Value > 150  then
                    Val1.Value = "Nightmare"
                    Val2.Value = "Level Dimension"
                end
            end
        end
    })
    local Raid_AddSection = Tabs.Join:AddSection("Raid")
    Raid_AddSection:AddDropdown("Current Raid", {
        Title = "Select Raid",
        Description = nil,
        Values = Raid,
        Multi = false,
        Default = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == Raid[1] and Level.Value < 100 then
                O["Current Raid"]:SetValue(Raid[math.random(2,20)])
            end
        end
    })
    Raid_AddSection:AddToggle("Auto Join (Raid)", {
        Title = "Auto Join (Raid)",
        Description = "Automatically creates and starts the selected raid",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Raid_AddSection:AddToggle("Auto Join (Raid Challenge)", {
        Title = "Auto Join (Raid Challenge)",
        Description = "Automatically join the raid challenge if reward available.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Raid_AddSection:AddToggle("Auto Join (Speed Raid)", {
        Title = "Auto Join (Speed Raid)",
        Description = "Automatically join the speed raid if not cooldown.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    local Misc1_AddSection = Tabs.Join:AddSection("Misc")
    Misc1_AddSection:AddToggle("Auto Join (Boss Rush)", {
        Title = "Auto Join (Boss Rush)",
        Description = "Automatically join the boss rush if have free ticket.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Misc1_AddSection:AddToggle("Auto Join (Infinite Mode)", {
        Title = "Auto Join (Infinite Mode)",
        Description = "Automatically join the infinite mode if reward available.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Misc1_AddSection:AddButton({
        Title = "Return to Lobby",
        Description = "Press the button to return to the lobby.",
        Callback = function()
            Window:Dialog({
                Title = "Notify",
                Content = "Do you want to teleport to the lobby?",
                Buttons = {
                    {
                        Title = "Yes",
                        Callback = function()
                            game:GetService("TeleportService"):Teleport(6938803436)
                        end
                    },
                    {
                        Title = "No",
                        Callback = function()
                            print(igspeed)
                        end
                    }
                }
            })
        end
    })
    local Main_AddSection = Tabs.Game:AddSection("Main")
    Main_AddSection:AddDropdown("Current Farm Mode", {
        Title = "Select Mode",
        Description = nil,
        Values = {
            "Normal Mode",
            "Bring Mode"
        },
        Multi = false,
        Default = 2,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            G["Bringing"] = false
            Playing_Mode = 0
        end
    })
    Main_AddSection:AddDropdown("Current Method", {
        Title = "Select Method",
        Description = nil,
        Values = {
            "Behind",
            "Front",
            "Over",
            "Under"
        },
        Multi = false,
        Default = 3,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Main_AddSection:AddSlider("Current Distance",{
        Title = "Current Distance",
        Description = nil,
        Default = 6.55,
        Min = 0,
        Max = 10,
        Rounding = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Main_AddSection:AddSlider("Health to Safe",{
        Title = "Health",
        Description = "Choose the health \nif player below x % HP",
        Default = 50,
        Min = 10,
        Max = 100,
        Rounding = 0,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Main_AddSection:AddToggle("Auto Set Distance", {
        Title = "Auto Set Distance",
        Description = "Automatically set the distance calculated from the size of the enemy.",
        Default = true,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Main_AddSection:AddToggle("Dodge Skill", {
        Title = "Dodge Skill",
        Description = "Dodge all enemy skills.",
        Default = true,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Main_AddSection:AddToggle("Auto Safe", {
        Title = "Auto Safe",
        Description = "Stop all farm if player below x % HP.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    local Character_AddSection = Tabs.Game:AddSection("Character")
    Character_AddSection:AddParagraph({
        Title = "Current Character",
        Content = "nil\nnil\nnil"
    })
    if isfile(CrazyDayF.."Character Save.json") and string.find(readfile(CrazyDayF.."Character Save.json"),"Character") then
        local a = HttpService:JSONDecode(readfile(CrazyDayF.."Character Save.json"))
        SetParagraphValue(2,"Character",1,4,a["Character1"].."\n"..a["Character2"].."\n"..a["Character3"])
    end
    Character_AddSection:AddToggle("Auto Equip Character", {
        Title = "Auto Equip Character",
        Description = "Automatically equips characters.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Character_AddSection:AddButton({
        Title = "Save Character",
        Description = "Press the button to save your characters.",
        Callback = function()
            local a = {}
            a["Character1"] = StatDisplay.CharacterName.Value
            a["Character2"] = StatDisplay.AssistCharacterName1.Value
            a["Character3"] = StatDisplay.AssistCharacterName2.Value
            a["Character"] = PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.CharacterTriIcon.Image:split("rbxassetid://")[2]
            Fluent:Notify({
                Title = "Successfully saved",
                Content = a["Character1"].."\n"..a["Character2"].."\n"..a["Character3"],
                SubContent = nil,
                Duration = 5
            })
            writefile(CrazyDayF.."Character Save.json",HttpService:JSONEncode(a))
            SetParagraphValue(2,"Character",1,4,a["Character1"].."\n"..a["Character2"].."\n"..a["Character3"])
        end
    })
    local Card_AddSection = Tabs.Game:AddSection("Card")
    Card_AddSection:AddDropdown("Current Rarity", {
        Title = "Select Rarity",
        Description = nil,
        Values = {
            "Common",
            "Uncommon",
            "Rare",
            "Epic",
            "Legendary",
            "Mythic",
            "Divine"
        },
        Multi = true,
        Default = {
            "Common",
            "Uncommon"
        },
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            G["Rarity Insert"] = true
            Rarity = {}
            for Key,Value in pairs(v) do
                if Value == true then
                    table.insert(Rarity,Key)
                end
            end
        end
    })
    Card_AddSection:AddToggle("Auto Sell", {
        Title = "Auto Sell",
        Description = "Automatically sell all of the selected cards (rarity).",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Card_AddSection:AddToggle("Auto Equip", {
        Title = "Auto Equip",
        Description = "Automatically equip your best card.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == true then
                if None_equip() == "Zero" or (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then return end
                for Index,Val in ipairs(StatDisplay:GetChildren()) do
                    if string.find(Val.Name,"Slot") and Val.Value ~= "" then
                        RemoteFunction:InvokeServer("UnequipCard",Val.Value)
                    end
                end
            end
        end
    })
    Card_AddSection:AddToggle("Auto Upgrade", {
        Title = "Auto Upgrade",
        Description = "Automatically upgrade all your equipped cards.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    local Time_AddSection = Tabs.Game:AddSection("Time")
    Time_AddSection:AddParagraph({
        Title = "Time: 00:00:00",
        Content = nil
    })
    if isfile(CrazyDayF.."Timer.json") then
        local r = {
            string.find(readfile(CrazyDayF.."Timer.json"),"H"),
            string.find(readfile(CrazyDayF.."Timer.json"),"M"),
            string.find(readfile(CrazyDayF.."Timer.json"),"S")
        }
        if r[1] and r[2] and r[3] then
            local T = HttpService:JSONDecode(readfile(CrazyDayF.."Timer.json"))

            local h, m, s

            if string.len(T["S"]) == 1 then
                s = "0"..T["S"]
            else
                s = T["S"]
            end
            if string.len(T["M"]) == 1 then
                m = "0"..T["M"]
            else
                m = T["M"]
            end
            if string.len(T["H"]) == 1 then
                h = "0"..T["H"]
            else
                h = T["H"]
            end

            SetParagraphValue(2,"Time",1,3,"Time: "..h..":"..m..":"..s)
        end
    end
    Time_AddSection:AddDropdown("Current Time Type", {
        Title = "Select Type",
        Description = nil,
        Values = {
            "Second",
            "Minute",
            "Hour"
        },
        Multi = false,
        Default = 2,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == "Second" then TimeStep = "S" elseif v == "Minute" then TimeStep = "M" elseif v == "Hour" then TimeStep = "H" end
        end
    })
    Time_AddSection:AddSlider("Current Time",{
        Title = "Current Time",
        Description = nil,
        Default = 20,
        Min = 1,
        Max = 60,
        Rounding = 0,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Time_AddSection:AddToggle("Auto Back to Lobby", {
        Title = "Auto Back to Lobby",
        Description = "Automatically teleport to the lobby \nif the time reach x current time.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    local Misc2_AddSection = Tabs.Game:AddSection("Misc")
    Misc2_AddSection:AddToggle("Auto Claim (Quest)", {
        Title = "Auto Claim (Quest)",
        Description = "Automatically claim all of the daily // weekly quests.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Misc2_AddSection:AddToggle("Auto Claim (Speed Raid)", {
        Title = "Auto Claim (Speed Raid)",
        Description = "Automatically claim all of the speed raid reward.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Misc2_AddSection:AddToggle("Dash no cooldown", {
        Title = "Dash no cooldown",
        Description = "Makes your dash have no cooldown.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            StatDisplay.No_DashCooldown.Value = v
        end
    })
    Misc2_AddSection:AddButton({
        Title = "Redeem All Code",
        Description = "Press the button to redeem all code.",
        Callback = function()
            if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then return end
            local Code = {}
            table.insert(Code,"3YEARS")
            for i,v in pairs(Workspace.Leaderboards.MilestoneBoard.Center.Surface.ScrollingFrame:GetChildren()) do
                if v:IsA("Frame") and v.MilestoneCode.Text ~= "LOCKED" then
                    table.insert(Code,v.MilestoneCode.Text)
                end
            end
            for i,v in pairs(Code) do
                RemoteFunction:InvokeServer("RedeemPromoCode",v)
            end
            Fluent:Notify({
                Title = "Successfully redeem code",
                Content = table.concat(Code,"\n"),
                SubContent = nil,
                Duration = 3.5
            })
        end
    })
    local Skill_AddSection = Tabs.Skill:AddSection("Skill")
    Skill_AddSection:AddDropdown("Current Assists", {
        Title = "Select (Assists / Fruits)",
        Description = nil,
        Values = {
            "Assist1",
            "Assist2",
            "Fruit1",
            "Fruit2"
        },
        Multi = true,
        Default = {
            "Assist1",
            "Assist2",
            "Fruit1",
            "Fruit2"
        },
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            G["Assists Insert"] = true
        end
    })
    Skill_AddSection:AddDropdown("Current Attack Method", {
        Title = "Current Attack Method",
        Description = nil,
        Values = {
            "Remote",
            "Click"
        },
        Multi = false,
        Default = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddDropdown("Skill One", {
        Title = "Skill One",
        Values = {
            "1",
            "2",
            "3",
            "4",
            "5"
        },
        Multi = false,
        Default = 1,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddDropdown("Skill Two", {
        Title = "Skill Two",
        Values = {
            "1",
            "2",
            "3",
            "4",
            "5"
        },
        Multi = false,
        Default = 2,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddDropdown("Skill Third", {
        Title = "Skill Third",
        Values = {
            "1",
            "2",
            "3",
            "4",
            "5"
        },
        Multi = false,
        Default = 3,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddDropdown("Skill Fourth", {
        Title = "Skill Fourth",
        Values = {
            "1",
            "2",
            "3",
            "4",
            "5"
        },
        Multi = false,
        Default = 4,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddDropdown("Skill Fifth", {
        Title = "Skill Fifth",
        Values = {
            "1",
            "2",
            "3",
            "4",
            "5"
        },
        Multi = false,
        Default = 5,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddSlider("Current Skill Distance",{
        Title = "Current Skill Distance",
        Description = "Choose the distance to attack and skill the enemy.",
        Default = 10,
        Min = 5,
        Max = 150,
        Rounding = 0,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Skill_AddSection:AddToggle("Auto Skill", {
        Title = "Auto Skill",
        Description = "Automatically attacks and skills on enemies.",
        Default = true,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    local Webhook_AddSection = Tabs.Webhook:AddSection("Webhook")
    Webhook_AddSection:AddInput("Webhook URL", {
        Title = "Webhook URL.",
        Description = nil,
        Default = nil,
        Placeholder = "Url.",
        Numeric = false,
        Finished = false,
        Callback = function(v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Webhook_AddSection:AddColorpicker("Webhook Color", {
        Title = "Webhook Color",
        Description = "Choose the color of the webhook.",
        Default = Color3.fromRGB(125, 125, 125),
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
        end
    })
    Webhook_AddSection:AddToggle("Send Webhook", {
        Title = "Send Webhook",
        Description = "Send a notifaction to your Discord when the game ends,displaying information about that match and what rewards you've received.",
        Default = false,
        Callback = function (v)
            if G["Loading (Gui)"] == false and O["Auto Save"].Value == true then SaveManager:Save("Configs") end
            if v == true and not string.find(O["Webhook URL"].Value,"https://discord.com/api/webhooks") then
                O["Send Webhook"]:SetValue(false)
                Fluent:Notify({
                    Title = "Send Webhook (Error)",
                    Content = "URL does not match the database.",
                    SubContent = nil,
                    Duration = 2.5
                })
            end
        end
    })
    Webhook_AddSection:AddButton({
        Title = "Check Webhook",
        Description = "Press the button see if the webhook working.",
        Callback = function()
            if not string.find(O["Webhook URL"].Value,"https://discord.com/api/webhooks") then
            return
            Fluent:Notify({
                Title = "Send Webhook (Error)",
                Content = "URL does not match the database.",
                SubContent = nil,
                Duration = 2.5
            })
            end
            local Data = HttpService:JSONEncode({
                ["username"] = "Anime Dimensions Simulator : Notification",
                ["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                content = nil,
                embeds = {{
                  ["title"] = nil,
                  ["color"] = tonumber(misc_local("color", O["Webhook Color"].Value)) or 0x7d7d7d,
                  ["description"] = nil,
                  ["footer"] = {
                    ["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
                    ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
                  },
                  ["thumbnail"] = {
                    ["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                  },
                  ["fields"] = {
                    {
                        ["name"] = "__**Status**__",
                        ["value"] = "__**||Username : "..tostring(LocalPlayer.Name).."||**__\n`The webhook is working.`",
                        ["inline"] = false
                    }
                },
            }}
            })
            local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
            response({Url = O["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
        end
    })
    do
        SaveManager:SetLibrary(Fluent)
        SaveManager:SetFolder("CrazyDay/"..Game.."/"..LocalID)
        SaveManager:IgnoreThemeSettings()
        Window:SelectTab(1)
        if isfile(CrazyDayF.."settings/Configs.json") then SaveManager:Load("Configs") end
        G["Loading (Gui)"] = false
        if not G["Rarity Insert"] then
            O["Current Rarity"]:SetValue({
                ["Common"] = true,
                ["Uncommon"] = true
            })
        end
        if not G["Assists Insert"] then
            O["Current Assists"]:SetValue({
                ["Assist1"] = true,
                ["Assist2"] = true,
                ["Fruit1"] = true,
                ["Fruit2"] = true
            })
        end
    end
    repeat wait() until Gui_CrazyDay()

    local MainCenterUi, BattleCenterUi, GameMap =
        PlayerGui:WaitForChild("MainGui"):WaitForChild("CenterUIFrame"),
        PlayerGui:WaitForChild("BattleGui"):WaitForChild("CenterUIFrame"),
        Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name

    for i,v in ipairs(CoreGui:FindFirstChild("CrazyDay"):GetChildren()) do
        if v:IsA("Frame") then
            v.ZIndex = math.huge
        end
    end

    instance_F.Name = "Black Screen"
    instance_F.Parent = CoreGui:FindFirstChild("CrazyDay")
    instance_F.AnchorPoint = Vector2.new(1, 1)
    instance_F.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    instance_F.BorderSizePixel = 0
    instance_F.ZIndex = 1
    instance_F.Position = UDim2.new(1.00222063, 0, 1.01891279, 0)
    instance_F.Size = UDim2.new(10, 0, 10, 0)
    instance_F.Visible = O["Black Screen"].Value or false
    RunService:Set3dRenderingEnabled(not O["Black Screen"].Value or true)

    instance_I.Name = "ToggleClose"
    instance_I.Parent = CoreGui:FindFirstChild("CrazyDay")
    instance_I.AnchorPoint = Vector2.new(0.5, 0.5)
    instance_I.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    instance_I.BorderColor3 = Color3.fromRGB(0, 0, 0)
    instance_I.BorderSizePixel = 0
    instance_I.ZIndex = 9999
    instance_I.Position = UDim2.new(0.0420, 0, 0.920, 0)
    instance_I.Size = UDim2.new(0, 80, 0, 80)
    instance_I.Image = "rbxassetid://17789924997"

    instance_U1.Parent = instance_I
    instance_U1.CornerRadius = UDim.new(1, 1)

    instance_U2.Parent = instance_I
    instance_U2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    instance_U2.LineJoinMode = Enum.LineJoinMode.Round
    instance_U2.Thickness = 1
    instance_U2.Color = Color3.fromRGB(120, 120, 120)

    Connect1 = instance_I.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            Gui_CrazyDay().Visible = not Gui_CrazyDay().Visible
            if not Gui_CrazyDay().Visible then
                instance_I.Image = "rbxassetid://17789926070"
            else
                instance_I.Image = "rbxassetid://17789924997"
            end
        end
    end)

    if O["Auto Hide Gui"].Value == true and not G["Successfully Hide"] then
        Gui_CrazyDay().Visible = false
        instance_I.Image = "rbxassetid://17789926070"
        G["Successfully Hide"] = true
    end

    local function auto_farm()
        if (O["Auto Join (Current Dimension)"].Value == false and O["Auto Join (Highnest)"].Value == false and O["Auto Join (Raid)"].Value == false and O["Auto Join (Raid Challenge)"].Value == false and O["Auto Join (Speed Raid)"].Value == false and O["Auto Join (Boss Rush)"].Value == false and O["Auto Join (Infinite Mode)"].Value == false) then
            return false
        elseif (O["Auto Join (Current Dimension)"].Value == true or O["Auto Join (Highnest)"].Value == true or O["Auto Join (Raid)"].Value == true or O["Auto Join (Raid Challenge)"].Value == true or O["Auto Join (Speed Raid)"].Value == true or O["Auto Join (Boss Rush)"].Value == true or O["Auto Join (Infinite Mode)"].Value == true) then
            return true
        end
    end
    local function FlameTrailIgnore()
        local a = false
        if O["Dodge Skill"].Value == true then
            for i,v in ipairs(Workspace.Folders.Debris:GetChildren()) do
                if v.Name == "FlameTrailIgnore" then
                    a = true
                end
            end
        end
        return a
    end

    coroutine.resume(coroutine.create(function ()
        while true do
            if O["Auto Join (Raid)"].Value == true and Level.Value >= 15 then
                if tonumber(os.date("!*t").min) <= 8 then
                    G["Auto Join (Raid)"] = true
                elseif tonumber(os.date("!*t").min) > 8 then
                    G["Auto Join (Raid)"] = false
                end
            elseif O["Auto Join (Raid)"].Value == false and G["Auto Join (Raid)"] == true then
                G["Auto Join (Raid)"] = false
            end
            if Fluent.Unloaded then
                if bv then bv:Destroy() end
                G["Died"] = false
                G["Dodgeing"] = false
                G["Bringing"] = false
                G["Safe Mode"] = false
                G["Bringing Infinite"] = false
                G["Successfully Hide"] = false
                G["Equiping Character"] = false
                G["Auto Lobby (Actived)"] = false
                Playing_Mode = 0
                RunService:Set3dRenderingEnabled(true)
                if Connect1 then Connect1:Disconnect() end
                if Connect2 then Connect2:Disconnect() end
                if Connect3 then Connect3:Disconnect() end
                if Tween_Info then Tween_Info:Cancel() end
                if LocalPlayer.Character ~= nil then LocalPlayer.Character.Humanoid.PlatformStand = false end
                for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                    if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") then
                        v.Head.Transparency = 1
                    end
                end
                coroutine.yield()
            end
            task.wait()
        end
    end))

    if GameMap == "CharacterTest" then return
        Fluent:Notify({
            Title = "Failed to load function (Error)",
            Content = "This map is not supported.",
            SubContent = nil,
            Duration = 99999999
        })
    elseif GameMap == "Infinite Mode" then
        baspeed = 100
    end

    if not bv then repeat bv = Instance.new("BodyVelocity") task.wait() until bv end
    coroutine.resume(coroutine.create(function ()
        if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
        LocalPlayer:GetPropertyChangedSignal("RespawnLocation"):Connect(function ()
            if Fluent.Unloaded then coroutine.yield() end
            Playing_Mode = 0
            G["Spawning Enemy"] = true
            task.wait(0.75)
            G["Spawning Enemy"] = false
        end)
        local function ontounching_ignore()
            pcall(function()
                LocalPlayer.Character.HumanoidRootPart.Touched:Connect(function(part)
                    if Fluent.Unloaded then coroutine.yield() end
                    if not G["Dodgeing"] and (part.Name == "Ignore" or part.Name == "FlameTrailIgnore") then
                        G["Dodgeing"] = true
                        repeat task.wait() if Tween_Info then Tween_Info:Cancel() end until not part.Parent
                        G["Dodgeing"] = false
                    end
                end)
            end)
        end
        local function onCharacterAdded(char)
            local humanoid = char:WaitForChild("Humanoid", 5)
            if not humanoid then
                return
            end
            humanoid.Died:Connect(function()
                if Fluent.Unloaded then coroutine.yield() end
                Playing_Mode = 0
                G["Died"] = true
                G["Dodgeing"] = false
                G["Bringing"] = false
                G["Safe Mode"] = false
                G["Bringing Infinite"] = false
                Connect2 =  LocalPlayer.CharacterAdded:Connect(function()
                    task.wait(1)
                    Playing_Mode = 0
                    G["Died"] = false
                    G["Bringing"] = false
                    G["Bringing Infinite"] = false
                    ontounching_ignore()
                    if Connect2 then Connect2:Disconnect() Connect2 = nil end
                    for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                        if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") then
                            v.Head.Transparency = 1
                        end
                    end
                end)
            end)
        end
        LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
        do
            repeat wait() until tonumber(PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) > 0
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            if char then
                ontounching_ignore()
                onCharacterAdded(char)
            end
        end
        Workspace.Folders.Debris.ChildAdded:Connect(function (v)
            if Fluent.Unloaded then coroutine.yield() end
            if O["Dodge Skill"].Value == true and (v.Name == "FlameTrail" or table.find({"telegraph"},v.Name:lower())) and not v:IsA("Model") and not G["Bringing"] and not G["Safe Mode"] and not G["Bringing Infinite"] then
                igname = "Ignore"
                if v.Name == "FlameTrail" then
                    task.wait(0.0375)
                    if v:FindFirstChild("P1") == nil then return end
                    if v:FindFirstChild("P1") and v.P1.Texture ~= "rbxassetid://6169516856" then return end
                    igname = "FlameTrailIgnore"
                end
                if gui_misc("Bossbar") == true then
                    igspeed = 0.175
                else
                    igspeed = 0.275
                end
                local a = v:Clone()
                local side = math.clamp(3.35,0,10)
                local Sizeto = v.Size + Vector3.new(side,100,side)
                a.Size = Vector3.new(0,0,v.Size.Z)
                if v.ClassName == "MeshPart" then
                    a.Size = Vector3.new(0,0,100)
                    Sizeto = v.Size + Vector3.new(side,side,100)
                elseif v.Name == "FlameTrail" then
                    Sizeto = v.Size + Vector3.new(side,100,side + 5.5)
                end
                game:GetService("TweenService"):Create(a,TweenInfo.new(igspeed),{Size = Sizeto}):Play()
                a.CFrame = v.CFrame + Vector3.new(0,0,0)
                a.Anchored = true
                a.Transparency = 1
                a.CanCollide = true
                a.Name = igname
                a.Parent = v.Parent
                repeat task.wait() until not v.Parent or O["Dodge Skill"].Value == false or G["Bringing"] == true or G["Safe Mode"] == true or G["Bringing Infinite"] == true or enemy_misc("Count") == 0 or Fluent.Unloaded
                task.wait(0.0475)
                a:Destroy()
            end
        end)
        if GameMap == "Infinite Mode" then
            BattleCenterUi.WaveClearClearText:GetPropertyChangedSignal("Text"):Connect(function ()
                if Fluent.Unloaded then coroutine.yield() end
                local Val = BattleCenterUi.WaveClearClearText.Text
                if Val:len() == 2 and Val.find(Val,"0") == 2 then
                    G["Bringing Infinite"] = false
                elseif Val:len() == 3 and Val.find(Val,"0") == 3 or (Val.find(Val,"00")) then
                    G["Bringing Infinite"] = false
                else
                    G["Bringing Infinite"] = true
                    task.wait(3.75)
                    G["Bringing Infinite"] = false
                end
            end)
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
                local a = 50

                local is_blacklist = table.find(BlackList_Characters,StatDisplay.BattleCharacterName.Value)

                if auto_farm() == true and Teleport_circle() ~= false and not G["Died"] then
                    tween_function(Teleport_circle(), CFrame.new(0, 0, 0), 140)
                    Tween_Info:Play()
                    Tween_Info.Completed:Wait()
                end

                if gui_misc("Bossbar") == true then
                    for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                        if v:FindFirstChildOfClass("BillboardGui") and v.EnemyHealthBarGui.Enabled == true then
                            v:FindFirstChildOfClass("BillboardGui"):Destroy()
                        end
                    end
                end

                if not is_blacklist then
                    if O["Auto Set Distance"].Value == true then
                        if gui_misc("Bossbar") == true then
                            if enemy("Boss").HumanoidRootPart.Size.Y >= 25 then
                                G["B Y"] = 2.5
                                G["B -Y"] = - 2.5
                            elseif enemy("Boss").HumanoidRootPart.Size.Y < 25 then
                                G["B Y"] = enemy("Boss").Head.Size.Y + 5.75
                                G["B -Y"] = - (enemy("Boss").LowerTorso.Size.Y + enemy("Boss").HumanoidRootPart.Size.Y + 5.55)
                            end
                            if O["Current Method"].Value == "Over" then
                                G["Method"] = CFrame.new(0, G["B Y"], 0) * CFrame.Angles(math.rad(-90),0,0)
                            elseif O["Current Method"].Value == "Under" then
                                G["Method"] = CFrame.new(0, G["B -Y"], 0) * CFrame.Angles(math.rad(90),0,0)
                            elseif O["Current Method"].Value == "Front" then
                                G["Method"] = CFrame.new(0, 0, -(enemy("Boss").HumanoidRootPart.Size.Z + 3.5)) * CFrame.Angles(math.rad(0),1800,0)
                            elseif O["Current Method"].Value == "Behind" then
                                G["Method"] = CFrame.new(0, 0, enemy("Boss").HumanoidRootPart.Size.Z + 3.5)
                            end
                        elseif gui_misc("Bossbar") == false then
                            if O["Current Method"].Value == "Over" then
                                G["Method"] = CFrame.new(0, (enemy("AllMob").Head.Size.Y + 5.75), 0) * CFrame.Angles(math.rad(-90),0,0)
                            elseif O["Current Method"].Value == "Under" then
                                G["Method"] = CFrame.new(0, - (enemy("AllMob").LowerTorso.Size.Y + enemy("AllMob").HumanoidRootPart.Size.Y + 5.35), 0) * CFrame.Angles(math.rad(90),0,0)
                            elseif O["Current Method"].Value == "Front" then
                                G["Method"] = CFrame.new(0, 0, -(enemy("AllMob").HumanoidRootPart.Size.Z + 4)) * CFrame.Angles(math.rad(0),1800,0)
                            elseif O["Current Method"].Value == "Behind" then
                                G["Method"] = CFrame.new(0 ,0 ,enemy("AllMob").HumanoidRootPart.Size.Z + 4)
                            end
                        end
                    elseif O["Auto Set Distance"].Value == false then
                        if O["Current Method"].Value == "Over" then
                            G["Method"] = CFrame.new(0, O["Current Distance"].Value, 0) * CFrame.Angles(math.rad(-90),0,0)
                        elseif O["Current Method"].Value == "Under" then
                            G["Method"] = CFrame.new(0, -O["Current Distance"].Value, 0) * CFrame.Angles(math.rad(90),0,0)
                        elseif O["Current Method"].Value == "Front" then
                            G["Method"] = CFrame.new(0, 0, -O["Current Distance"].Value) * CFrame.Angles(math.rad(0),1800,0)
                        elseif O["Current Method"].Value == "Behind" then
                            G["Method"] = CFrame.new(0, 0, O["Current Distance"].Value)
                        end
                    end
                elseif is_blacklist then
                    if O["Current Method"].Value == "Over" then
                        G["Method"] = CFrame.new(0 ,1.5 ,0) * CFrame.Angles(math.rad(-90),0,0)
                    elseif O["Current Method"].Value == "Under" then
                        G["Method"] = CFrame.new(0 ,-1.5 ,0) * CFrame.Angles(math.rad(90),0,0)
                    elseif O["Current Method"].Value == "Front" then
                        G["Method"] = CFrame.new(0, 0, -1.5) * CFrame.Angles(math.rad(0),1800,0)
                    elseif O["Current Method"].Value == "Behind" then
                        G["Method"] = CFrame.new(0, 0, 1.5)
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if O["Auto Equip Character"].Value == true and isfile(CrazyDayF.."Character Save.json") and string.find(readfile(CrazyDayF.."Character Save.json"),"Character") and not G["Not Equip Character"] then
                    local a = HttpService:JSONDecode(readfile(CrazyDayF.."Character Save.json"))
                    if StatDisplay.CharacterName.Value ~= a["Character1"] or StatDisplay.AssistCharacterName1.Value ~= a["Character2"] or StatDisplay.AssistCharacterName2.Value ~= a["Character3"] then
                        repeat
                            G["Equiping Character"] = true
                            RemoteFunction:InvokeServer("EquipCharacter",a['Character1'])
                            RemoteFunction:InvokeServer("EquipCharacterAssist",a['Character2'],1)
                            RemoteFunction:InvokeServer("EquipCharacterAssist",a['Character3'],2)
                            task.wait()
                        until StatDisplay.CharacterName.Value == a["Character1"] and StatDisplay.AssistCharacterName1.Value == a["Character2"] and StatDisplay.AssistCharacterName2.Value == a["Character3"]
                        PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.CharacterTriIcon.Image = "rbxassetid://"..a["Character"]
                        Fluent:Notify({
                            Title = "Successfully Equip Characters",
                            Content = a["Character1"].."\n"..a["Character2"].."\n"..a["Character3"],
                            SubContent = nil,
                            Duration = 2.75
                        })
                        G["Equiping Character"] = false
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
                local a = PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI
                if O["Auto Retry"].Value == true and a.Visible == true and a.Frame.RetryDungeonButton.Visible == true and tonumber(local_misc("Stage")) > 1 then
                    firesignal(a.Frame.RetryDungeonButton.MouseButton1Down)
                elseif O["Auto Retry"].Value == false and a.Visible == true and a.Frame.LeaveDungeonButton.Visible == true then
                    firesignal(a.Frame.LeaveDungeonButton.MouseButton1Down)
                end


                if auto_farm() == true then
                    if not G["Dodgeing"] then
                        if LocalPlayer.Character ~= nil and LocalPlayer.Character.Humanoid.PlatformStand == false then LocalPlayer.Character.Humanoid.PlatformStand = true end
                        local_misc("CanCollide", false)
                    elseif G["Dodgeing"] then
                        if LocalPlayer.Character ~= nil and LocalPlayer.Character.Humanoid.PlatformStand == true then LocalPlayer.Character.Humanoid.PlatformStand = false end
                        local_misc("CanCollide", true)
                    end

                    if bv then
                        bv.Parent = LocalPlayer.Character.HumanoidRootPart
                        bv.MaxForce = Vector3.new(100000,100000,100000)
                        bv.Velocity = Vector3.new(0,0,0)
                    end

                    local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
                    for _, v in ipairs(LocalPlayer.Character:GetDescendants()) do
                        if v.IsA(v, "BasePart") then
                            v.Velocity, v.RotVelocity = V3, V3
                        end
                    end

                    if G["Bringing"] == true and enemy("Bring") ~= false and local_misc("Dist", enemy("Bring").HumanoidRootPart) <= 13.75 then
                        for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                            if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") and v.Head.Transparency ~= 10 then
                                if (LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude <= 27.35 then
                                    v.Head.Transparency = 10
                                end
                            end
                        end
                    end
                elseif auto_farm() == false then
                    Playing_Mode = 0
                    G["Bringing"] = false
                    G["Bringing Infinite"] = false
                    if bv then
                        bv.Parent = nil
                        bv.MaxForce = Vector3.new(100000,100000,100000)
                        bv.Velocity = Vector3.new(0,0,0)
                    end
                    if Tween_Info then Tween_Info:Cancel() end
                    if LocalPlayer.Character ~= nil and LocalPlayer.Character.Humanoid.PlatformStand == true then LocalPlayer.Character.Humanoid.PlatformStand = false end
                end

                if G["Auto Join (Raid)"] == true and not string.find(GameMap,"Raid") then
                    Fluent:Notify({
                        Title = "Auto Join (Raid)",
                        Content = "The raid has opened.",
                        SubContent = "Teleporting in 5 seconds.",
                        Duration = 5
                    })
                    task.wait(5)
                    game:GetService("TeleportService"):Teleport(7338881230)
                    coroutine.yield()
                end

            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if O["Auto Safe"].Value == true and auto_farm() == true and tonumber(PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) < tonumber(O["Health to Safe"].Value * (LocalPlayer.Character.Head.PlayerHealthBarGui.HealthText.Text:split("/")[2] / 100)) and not G["Died"] then
                    G["Safe Mode"] = true
                elseif O["Auto Safe"].Value == true and auto_farm() == true and tonumber(PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) >= tonumber(O["Health to Safe"].Value * (LocalPlayer.Character.Head.PlayerHealthBarGui.HealthText.Text:split("/")[2] / 100)) and not G["Died"] then
                    G["Safe Mode"] = false
                elseif O["Auto Safe"].Value == false and G["Safe Mode"] == true then
                    G["Safe Mode"] = false
                end
                if G["Safe Mode"] == true and not G["Died"] and not G["Bringing"] and not G["Bringing Infinite"] then
                    for i,v in pairs(Workspace.Folders.SpawnPoints:GetChildren()) do
                        if v.Name == LocalPlayer.RespawnLocation.Name then
                            tween_function(v, CFrame.new(0, 75, 0), baspeed)
                            Tween_Info:Play()
                        end
                    end
                end

                if auto_farm() == true and gui_misc("Bossbar") == true and Teleport_circle() == false and FlameTrailIgnore() == false and enemy("Boss") ~= false and not G["Safe Mode"] and not G["Dodgeing"] and not G["Died"] then
                    repeat
                        Playing_Mode = 0
                        G["Bringing"] = false
                        G["Bringing Infinite"] = false
                        tween_function(enemy("Boss").HumanoidRootPart, G["Method"], baspeed)
                        Tween_Info:Play()
                        task.wait(0)
                    until G["Safe Mode"] == true or G["Dodgeing"] == true or G["Died"] == true or FlameTrailIgnore() == true or enemy("Boss") == false or gui_misc("Bossbar") == false or auto_farm() == false or Teleport_circle() ~= false or Fluent.Unloaded
                    Tween_Info:Cancel()
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded or GameMap ~= "Infinite Mode" then coroutine.yield() end
                if auto_farm() == true and gui_misc("Bossbar") == false and not G["Dided"] then
                    if enemy_misc("Count") == 0 then
                        task.wait(1.35)
                        repeat
                            tween_function(Workspace.Folders.SpawnPoints.SpawnLocation1, CFrame.new(0, 30, 0),100)
                            Tween_Info:Play()
                            task.wait()
                        until (enemy_misc("Count") >= 1 and not G["Bringing Infinite"]) or auto_farm() == false or Fluent.Unloaded
                        Tween_Info:Cancel()
                    elseif enemy("AllMob") ~= false and not G["Bringing Infinite"] and not G["Safe Mode"] and not G["Dodgeing"] then
                        repeat
                            tween_function(enemy("AllMob").HumanoidRootPart, G["Method"], 100)
                            Tween_Info:Play()
                            task.wait(0.475)
                        until G["Safe Mode"] == true or G["Dodgeing"] == true or G["Died"] == true or gui_misc("Bossbar") == true or auto_farm() == false or enemy("AllMob") == false or enemy_misc("Count") == 0 or Fluent.Unloaded
                        Tween_Info:Cancel()
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded or GameMap == "Infinite Mode" then coroutine.yield() end
                if auto_farm() == true and gui_misc("Bossbar") == false and Teleport_circle() == false and not G["Died"] then
                    if O["Current Farm Mode"].Value == "Bring Mode" and not G["Spawning Enemy"] then
                        if Playing_Mode == 0 and enemy("Bring") ~= false then
                            repeat
                                G["Bringing"] = true
                                tween_function(enemy("Bring").HumanoidRootPart, CFrame.new(0,10,0), 140)
                                Tween_Info:Play()
                                task.wait(0.0875)
                            until Playing_Mode > 0 or enemy("Bring") == false or auto_farm() == false or G["Spawning Enemy"] == true or G["Died"] == true or gui_misc("Bossbar") == true or Teleport_circle() ~= false or Fluent.Unloaded
                            Playing_Mode = 1
                        elseif Playing_Mode == 1 and enemy("Bring") == false then
                            G["Bring"] = true
                            tween_function(enemy_misc("Normal").HumanoidRootPart, CFrame.new(0, 50, 0), 140)
                            Tween_Info:Play()
                            Tween_Info.Completed:Wait()
                            task.wait(2.675)
                            Playing_Mode = 2
                        elseif Playing_Mode == 2 and enemy("AllMob") ~= false and not G["Safe Mode"] and not G["Dodgeing"] then
                            repeat
                                G["Bringing"] = false
                                tween_function(enemy("AllMob").HumanoidRootPart, G["Method"], 140)
                                Tween_Info:Play()
                                task.wait(0)
                            until Playing_Mode < 2 or G["Safe Mode"] == true or G["Dodgeing"] == true or G["Died"] == true or gui_misc("Bossbar") == true or enemy("AllMob") == false or auto_farm() == false or Teleport_circle() ~= false or Fluent.Unloaded
                            Tween_Info:Cancel()
                        end
                    elseif O["Current Farm Mode"].Value == "Normal Mode" and enemy("AllMob") ~= false and not G["Safe Mode"] and not G["Dodgeing"] then
                        repeat
                            tween_function(enemy("AllMob").HumanoidRootPart, G["Method"], 140)
                            Tween_Info:Play()
                            task.wait(0)
                        until G["Safe Mode"] == true or G["Dodgeing"] == true or G["Died"] == true or gui_misc("Bossbar") == true or enemy("AllMob") == false or auto_farm() == false or Teleport_circle() ~= false or Fluent.Unloaded
                        Tween_Info:Cancel()
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if G["Safe Mode"] == true or G["Bringing"] == true or G["Bringing Infinite"] == true or G["Died"] == true then return end
                if is_usingskill() == 0 and O["Auto Skill"].Value == true and auto_farm() == true and local_misc("Dist", enemy("AllMob")[CFramePart(enemy("AllMob"))]) <= O["Current Skill Distance"].Value then
                    local a = PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder

                    if a["Skill"..O["Skill One"].Value].Visible and tonumber(a["Skill"..O["Skill One"].Value].SkillName.Text) == nil then
                        repeat
                            RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},tonumber(O["Skill One"].Value))
                            task.wait(0.25)
                        until is_usingskill() > 0 or tonumber(a["Skill"..O["Skill One"].Value].SkillName.Text) ~= nil or Fluent.Unloaded
                    end
                    if a["Skill"..O["Skill Two"].Value].Visible and tonumber(a["Skill"..O["Skill One"].Value].SkillName.Text) ~= nil and tonumber(a["Skill"..O["Skill Two"].Value].SkillName.Text) == nil then
                        repeat
                            RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},tonumber(O["Skill Two"].Value))
                            task.wait(0.25)
                        until is_usingskill() > 0 or tonumber(a["Skill"..O["Skill Two"].Value].SkillName.Text) ~= nil or Fluent.Unloaded
                    end
                    if a["Skill"..O["Skill Third"].Value].Visible and tonumber(a["Skill"..O["Skill Two"].Value].SkillName.Text) ~= nil and tonumber(a["Skill"..O["Skill Third"].Value].SkillName.Text) == nil then
                        repeat
                            RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},tonumber(O["Skill Third"].Value))
                            task.wait(0.25)
                        until is_usingskill() > 0 or tonumber(a["Skill"..O["Skill Third"].Value].SkillName.Text) ~= nil or Fluent.Unloaded
                    end
                    if a["Skill"..O["Skill Fourth"].Value].Visible and tonumber(a["Skill"..O["Skill Third"].Value].SkillName.Text) ~= nil and tonumber(a["Skill"..O["Skill Fourth"].Value].SkillName.Text) == nil then
                        repeat
                            RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},tonumber(O["Skill Fourth"].Value))
                            task.wait(0.25)
                        until is_usingskill() > 0 or tonumber(a["Skill"..O["Skill Fourth"].Value].SkillName.Text) ~= nil or Fluent.Unloaded
                    end
                    if a["Skill"..O["Skill Fifth"].Value].Visible and tonumber(a["Skill"..O["Skill Fourth"].Value].SkillName.Text) ~= nil and tonumber(a["Skill"..O["Skill Fifth"].Value].SkillName.Text) == nil then
                        repeat
                            RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},tonumber(O["Skill Fifth"].Value))
                            task.wait(0.25)
                        until is_usingskill() > 0  or tonumber(a["Skill"..O["Skill Fifth"].Value].SkillName.Text) ~= nil or Fluent.Unloaded
                    end

                    for i,v in pairs(O["Current Assists"].Value) do
                        if i and v == true then
                            if a["Skill"..i].Visible == true and a["Skill"..i].Image ~= "rbxassetid://6797200424" and a["Skill"..i].SkillName.Text ~= "None" then
                                if string.find(i,"1") then
                                    RemoteEvent:FireServer("Use"..i:split("1")[1].."Skill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},1)
                                elseif string.find(i,"2") then
                                    RemoteEvent:FireServer("Use"..i:split("2")[1].."Skill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position)},2)
                                end
                            end
                        end
                    end

                    if O["Current Attack Method"].Value == "Remote" and is_usingskill() == 0 then
                        RemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(enemy("AllMob").HumanoidRootPart.Position),["attackNumber"] = 4},"BasicAttack")
                    elseif O["Current Attack Method"].Value == "Click" and is_usingskill() == 0  then
                        game:GetService("VirtualUser"):CaptureController()
                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1200,672))
                    end

                end
            end)
            task.wait(0.125)
        end
    end))
    coroutine.resume(coroutine.create(function ()
        while true do
            pcall(function ()
                if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if O["Auto Equip"].Value == true and None_equip() == true then
                    for Index,Val in ipairs(StatDisplay:GetChildren()) do
                        if string.find(Val.Name,"Slot") and Val.Value ~= "" then
                            RemoteFunction:InvokeServer("UnequipCard",Val.Value)
                        end
                    end
                    repeat
                        if None_equip() == true then
                            RemoteFunction:InvokeServer("EquipCard",Best_cards()[1])
                            RemoteFunction:InvokeServer("EquipCard",Best_cards()[2])
                            RemoteFunction:InvokeServer("EquipCard",Best_cards()[3])
                        end
                        task.wait()
                    until None_equip() == false or O["Auto Equip"].Value == false or Fluent.Unloaded
                end
                if O["Auto Upgrade"].Value == true or O["Auto Sell"].Value == true then
                    if O["Auto Equip"].Value == true and None_equip() == true then return end
                    if O["Auto Sell"].Value == true and #Rarity > 0 then
                        for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
                            if v:IsA("ImageButton") and (v.Name ~= "CardInventorySlot" and v.Name ~= StatDisplay.Slot1.Value and v.Name ~= StatDisplay.Slot2.Value and v.Name ~= StatDisplay.Slot3.Value) and v.CardLock.Visible == false then
                                for k,r in ipairs(ReplicatedStorage.TextGradients:GetChildren()) do
                                    if table.find(Rarity,r.Name) and tostring(r.Color) == tostring(v.Epic.Color) then
                                        RemoteFunction:InvokeServer("SellCard",v.Name)
                                    end
                                end
                            end
                        end
                    end
                    if O["Auto Upgrade"].Value == true then
                        for i,v in ipairs(StatDisplay:GetChildren()) do
                            if string.find(v.Name,"Slot") and v.Value ~= "" then
                                RemoteFunction:InvokeServer("UpgradeCard",v.Value)
                            end
                        end
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function () --// Create And Start Room
        while true do
            pcall(function ()
                if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if O["Auto Equip"].Value == true and None_equip() == true then return end
                if auto_farm() == true and not G["Equiping Character"] then
                    if G["Auto Join (Raid)"] == true then
                        Fluent:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: "..O["Current Raid"].Value.."\nDifficulty: Easy".."\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: false",
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })
                        task.wait(5)
                        RemoteEvent:FireServer("RemovePlayerFromParty")
                        RemoteFunction:InvokeServer("CreateRoom",{
                            ["Difficulty"] = "Easy",
                            ["FriendsOnly"] = O["Friends Only"].Value,
                            ["MapName"] = O["Current Raid"].Value,
                            ["Hardcore"] = false
                        })
                        RemoteFunction:InvokeServer("TeleportPlayers")
                        coroutine.yield()
                    else
                        if O["Auto Join (Speed Raid)"].Value == true and Level.Value >= 25 and MainCenterUi.PlayButtonsFrame.Frame.SpeedRaidBanner.SpeedRaidBannerOpenText.Text == "Ready to enter" and misc_local("CharacterShadownActived") > 0 then
                            G["Not Equip Character"] = true
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: ShadowRaid".."\nCharacter: "..misc_local("CharacterGet"),
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteFunction:InvokeServer("TeleportToShadowRaid",misc_local("CharacterGet"))
                            coroutine.yield()
                        end
                        if O["Auto Join (Raid Challenge)"].Value == true and Level.Value >= 30 and MainCenterUi.DailyRaidChallengeFrame.RaidChallengeRewardAvailable.Text == "Reward Available" then
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: RaidChallenge".."\nAward Status: Reward Available",
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteFunction:InvokeServer("TeleportToRaidChallenge")
                            coroutine.yield()
                        end
                        if O["Auto Join (Boss Rush)"].Value == true and Level.Value >= 15 and StatDisplay.BossRushFreeEntry.Value ~= 0 then
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: BossRush".."\nFree Entry Left: "..MainCenterUi.BossRushFrame.BossRushFreeEntry.Text:split(" Free")[1],
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteFunction:InvokeServer("TeleportToBossRush")
                            coroutine.yield()
                        end
                        if O["Auto Join (Infinite Mode)"].Value == true and Level.Value >= 20 and StatDisplay.InfiniteModeReward.Value == false then
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: Infinite Mode".."\nDifficulty: Infinite\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: false",
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteEvent:FireServer("RemovePlayerFromParty")
                            RemoteFunction:InvokeServer("CreateRoom",{
                                ["Difficulty"] = "Infinite",
                                ["FriendsOnly"] = O["Friends Only"].Value,
                                ["MapName"] = "Infinite Mode",
                                ["Hardcore"] = false
                            })
                            RemoteFunction:InvokeServer("TeleportPlayers")
                            coroutine.yield()
                        end

                        if (O["Auto Join (Current Dimension)"].Value == true or O["Auto Join (Highnest)"].Value == true) then
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: "..O["Current Dimension"].Value.."\nDifficulty: "..O["Current Difficulty"].Value.."\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: "..tostring(O["Hard core"].Value),
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteEvent:FireServer("RemovePlayerFromParty")
                            RemoteFunction:InvokeServer("CreateRoom",{
                                ["Difficulty"] = O["Current Difficulty"].Value,
                                ["FriendsOnly"] = O["Friends Only"].Value,
                                ["MapName"] = O["Current Dimension"].Value,
                                ["Hardcore"] = O["Hard core"].Value
                            })
                            RemoteFunction:InvokeServer("TeleportPlayers")
                            coroutine.yield()
                        end
                    end
                end
            end)
            task.wait(0)
        end
    end))
    Connect3 = PlayerGui.MainGui.ErrorFrame.ChildAdded:Connect(function (x)
        if x:IsA("TextLabel") and string.find(x.Text, "teleport") then
            while true do
                if auto_farm() == true then
                    if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then
                        Fluent:Notify({
                            Title = "Teleport (Error)",
                            Content = "Creating room again.",
                            SubContent = nil,
                            Duration = 5
                        })
                        if G["Auto Join (Raid)"] == true then
                            Fluent:Notify({
                                Title = "Successfully room created",
                                Content = "MapName: "..O["Current Raid"].Value.."\nDifficulty: Easy".."\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: false",
                                SubContent = "Starting in 5 seconds.",
                                Duration = 5
                            })
                            task.wait(5)
                            RemoteEvent:FireServer("RemovePlayerFromParty")
                            RemoteFunction:InvokeServer("CreateRoom",{
                                ["Difficulty"] = "Easy",
                                ["FriendsOnly"] = O["Friends Only"].Value,
                                ["MapName"] = O["Current Raid"].Value,
                                ["Hardcore"] = false
                            })
                            RemoteFunction:InvokeServer("TeleportPlayers")
                            break
                        else
                            if O["Auto Join (Speed Raid)"].Value == true and Level.Value >= 25 and MainCenterUi.PlayButtonsFrame.Frame.SpeedRaidBanner.SpeedRaidBannerOpenText.Text == "Ready to enter" and misc_local("CharacterShadownActived") > 0 then
                                G["Not Equip Character"] = true
                                Fluent:Notify({
                                    Title = "Successfully room created",
                                    Content = "MapName: ShadowRaid".."\nCharacter: "..misc_local("CharacterGet"),
                                    SubContent = "Starting in 5 seconds.",
                                    Duration = 5
                                })
                                task.wait(5)
                                RemoteFunction:InvokeServer("TeleportToShadowRaid",misc_local("CharacterGet"))
                                break
                            end
                            if O["Auto Join (Raid Challenge)"].Value == true and Level.Value >= 30 and MainCenterUi.DailyRaidChallengeFrame.RaidChallengeRewardAvailable.Text == "Reward Available" then
                                Fluent:Notify({
                                    Title = "Successfully room created",
                                    Content = "MapName: RaidChallenge".."\nAward Status: Reward Available",
                                    SubContent = "Starting in 5 seconds.",
                                    Duration = 5
                                })
                                task.wait(5)
                                RemoteFunction:InvokeServer("TeleportToRaidChallenge")
                                break
                            end
                            if O["Auto Join (Boss Rush)"].Value == true and Level.Value >= 15 and StatDisplay.BossRushFreeEntry.Value ~= 0 then
                                Fluent:Notify({
                                    Title = "Successfully room created",
                                    Content = "MapName: BossRush".."\nFree Entry Left: "..MainCenterUi.BossRushFrame.BossRushFreeEntry.Text:split(" Free")[1],
                                    SubContent = "Starting in 5 seconds.",
                                    Duration = 5
                                })
                                task.wait(5)
                                RemoteFunction:InvokeServer("TeleportToBossRush")
                                break
                            end
                            if O["Auto Join (Infinite Mode)"].Value == true and Level.Value >= 20 and StatDisplay.InfiniteModeReward.Value == false then
                                Fluent:Notify({
                                    Title = "Successfully room created",
                                    Content = "MapName: Infinite Mode".."\nDifficulty: Infinite\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: false",
                                    SubContent = "Starting in 5 seconds.",
                                    Duration = 5
                                })
                                task.wait(5)
                                RemoteEvent:FireServer("RemovePlayerFromParty")
                                RemoteFunction:InvokeServer("CreateRoom",{
                                    ["Difficulty"] = "Infinite",
                                    ["FriendsOnly"] = O["Friends Only"].Value,
                                    ["MapName"] = "Infinite Mode",
                                    ["Hardcore"] = false
                                })
                                RemoteFunction:InvokeServer("TeleportPlayers")
                                break
                            end
                            if (O["Auto Join (Current Dimension)"].Value == true or O["Auto Join (Highnest)"].Value == true) then
                                Fluent:Notify({
                                    Title = "Successfully room created",
                                    Content = "MapName: "..O["Current Dimension"].Value.."\nDifficulty: "..O["Current Difficulty"].Value.."\nFriendsOnly: "..tostring(O["Friends Only"].Value).."\nHardcore: "..tostring(O["Hard core"].Value),
                                    SubContent = "Starting in 5 seconds.",
                                    Duration = 5
                                })
                                task.wait(5)
                                RemoteEvent:FireServer("RemovePlayerFromParty")
                                RemoteFunction:InvokeServer("CreateRoom",{
                                    ["Difficulty"] = O["Current Difficulty"].Value,
                                    ["FriendsOnly"] = O["Friends Only"].Value,
                                    ["MapName"] = O["Current Dimension"].Value,
                                    ["Hardcore"] = O["Hard core"].Value
                                })
                                RemoteFunction:InvokeServer("TeleportPlayers")
                                break
                            end
                        end
                    else
                        Fluent:Notify({
                            Title = "Teleport (Error)",
                            Content = "Returning to the lobby in 5 seconds.",
                            SubContent = nil,
                            Duration = 5
                        })
                        task.wait(5)
                        game:GetService("TeleportService"):Teleport(6938803436)
                        break
                    end
                end
                task.wait()
            end
        end
    end)
    coroutine.resume(coroutine.create(function()
        while true do
            pcall(function ()
                if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) or Fluent.Unloaded then coroutine.yield() end
                if O["Auto Claim (Speed Raid)"].Value == true then
                    for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.SpeedRaidFrame:GetChildren()) do
                        if v.Name == "Shade" and i == 11 then
                            SHADE_QUEST = v
                        end
                    end
                    for i,v in ipairs(SHADE_QUEST:FindFirstChild("SpeedRaidScrollingFrame"):GetChildren()) do
                        if v:IsA("ImageButton") then
                            if v.RaidsButton.Cost.Text == "CLAIM" then
                                local a_b = v.Name:split("SpeedRaidRewardTemplate")[2]
                                RemoteFunction:InvokeServer("ClaimWeeklySpeedRaidReward",tonumber(a_b))
                                v.RaidsButton.Cost.Text = "CLAIMED"
                            end
                        end
                    end
                end
                if O["Auto Claim (Quest)"].Value == true then
                    for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.QuestFrame.QuestFrames.DailyQuestFrame.DailyQuestScrollingFrame:GetChildren()) do
                        if v:IsA("ImageLabel") then
                            if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
                                RemoteFunction:InvokeServer("CompleteDailyQuest",v.Name)
                                v.Complete.Visible = true
                            end
                        end
                    end
                    for i,v in ipairs(PlayerGui.MainGui.CenterUIFrame.QuestFrame.QuestFrames.WeeklyQuestFrame.WeeklyQuestScrollingFrame:GetChildren()) do
                        if v:IsA("ImageLabel") then
                            if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
                                RemoteFunction:InvokeServer("CompleteDailyQuest",v.Name)
                                v.Complete.Visible = true
                            end
                        end
                    end
                end
            end)
            task.wait()
        end
    end))
    coroutine.resume(coroutine.create(function()
        if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or Fluent.Unloaded then coroutine.yield() end
        wait(2)

        local RaidTimeBest = {}
        local Result_Reward, Result_Visible
        local Clear1, Clear2, Clear3, Clear4 =
            StatDisplay:WaitForChild("StageClear").Value,
            StatDisplay:WaitForChild("BossRushClears").Value,
            StatDisplay:WaitForChild("WeeklyShadowRaidsCleared").Value,
            StatDisplay:WaitForChild("RaidClears").Value

        if BattleCenterUi.RaidDataFrame.Visible == true then
            Result_Reward, Result_Visible =
                gui_misc("RaidResult"),
                PlayerGui.UniversalGui.UniversalCenterUIFrame.RaidResultUI
        else
            Result_Reward, Result_Visible =
                PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.RewardFrame.RewardGridFrame,
                PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI
        end

        for i,v in ipairs(StatDisplay:GetChildren()) do
            if string.find(v.Name,"RaidBeat") then
                if not RaidTimeBest[v.Name] then
                    RaidTimeBest[v.Name] = {}
                end
                table.insert(RaidTimeBest[v.Name],v.Value)
            end
        end

        Result_Reward.ChildAdded:Connect(function(v)
            if Fluent.Unloaded then coroutine.yield() end
            if not table.find(Currency_Name, v.Name) then
                if table.find(Item_Rewards,"`None      `") then table.remove(Item_Rewards,table.find(Item_Rewards,"`None      `")) end
                if v.Name == "RewardTemplate" then
                    if v.RewardImage.Image == "rbxassetid://13406949044" then
                        table.insert(Item_Rewards,"`Character [Sakura]`")
                    elseif v.RewardImage.Image == "rbxassetid://12992685998" then
                        table.insert(Item_Rewards,"`Character [Natsu]`")
                    elseif v.RewardImage.Image == "rbxassetid://7037255754" then
                        table.insert(Item_Rewards,"`Character [Killua]`")

                    elseif v.RewardImage.Image == "rbxassetid://7053221313" then
                        table.insert(Item_Rewards,"`Character [Asta]`")
                    elseif v.RewardImage.Image == "rbxassetid://16629613718" then
                        table.insert(Item_Rewards,"`Character [Itadori]`")
                    elseif v.RewardImage.Image == "rbxassetid://12992687663" then
                        table.insert(Item_Rewards,"`Character [Akaza]`")

                    elseif v.RewardImage.Image == "rbxassetid://13621197278" then
                        table.insert(Item_Rewards,"`Character [Sasuke]`")
                    elseif v.RewardImage.Image == "rbxassetid://7057569994" then
                        table.insert(Item_Rewards,"`Character [Gray]`")
                    elseif v.RewardImage.Image == "rbxassetid://16629618004" then
                        table.insert(Item_Rewards,"`Character [Sukuna]`")

                    elseif v.RewardImage.Image == "rbxassetid://7132704621" then
                        table.insert(Item_Rewards,"`Character [Rukai]`")
                    elseif v.RewardImage.Image == "rbxassetid://13621200238" then
                        table.insert(Item_Rewards,"`Character [Shinra]`")
                    elseif v.RewardImage.Image == "rbxassetid://15699330111" then
                        table.insert(Item_Rewards,"`Character [All Might]`")

                    elseif v.RewardImage.Image == "rbxassetid://16834106549" then
                        table.insert(Item_Rewards,"`Character [Zoro]`")
                    elseif v.RewardImage.Image == "rbxassetid://13621194902" then
                        table.insert(Item_Rewards,"`Character [Asuna]`")

                    elseif v.RewardImage.Image == "rbxassetid://7542006362" then
                        table.insert(Item_Rewards,"`Character [Emiya Archer]`")
                    elseif v.RewardImage.Image == "rbxassetid://7785010433" then
                        table.insert(Item_Rewards,"`Character [Kaneki]`")

                    elseif v.RewardImage.Image == "rbxassetid://8270023417" then
                        table.insert(Item_Rewards,"`Character [Lancer]`")
                    elseif v.RewardImage.Image == "rbxassetid://9038000341" then
                        table.insert(Item_Rewards,"`Character [Saber Alter]`")

                    elseif v.RewardImage.Image == "rbxassetid://9672496119" then
                        table.insert(Item_Rewards,"`Character [Diablo]`")
                    elseif v.RewardImage.Image == "rbxassetid://13406949528" then
                        table.insert(Item_Rewards,"`Character [Rimuru]`")

                    elseif v.RewardImage.Image == "rbxassetid://16834116921" then
                        table.insert(Item_Rewards,"`Character [Power]`")
                    elseif v.RewardImage.Image == "rbxassetid://17096447919" then
                        table.insert(Item_Rewards,"`Character [Yamato]`")
                    elseif v.RewardImage.Image == "rbxassetid://16620398317" then
                        table.insert(Item_Rewards,"`Character [Sonic]`")
                    elseif v.RewardImage.Image == "rbxassetid://16745228465" then
                        table.insert(Item_Rewards,"`Character [Rank ??? Hunter]`")

                    elseif v.RewardImage.Image == "rbxassetid://16832873774" then
                        table.insert(Item_Rewards,"`Character [Broly]`")
                    elseif v.RewardImage.Image == "rbxassetid://7401067364" then
                        table.insert(Item_Rewards,"`Character [Alice]`")
                    elseif v.RewardImage.Image == "rbxassetid://7386538151" then
                        table.insert(Item_Rewards,"`Character [Gilgamesh]`")
                    elseif v.RewardImage.Image == "rbxassetid://7384650558" then
                        table.insert(Item_Rewards,"`Character [Kokushibo]`")

                    elseif v.RewardImage.Image == "rbxassetid://17524638400" then
                        table.insert(Item_Rewards,"`Character [RinOkumura]`")
                    elseif v.RewardImage.Image == "rbxassetid://17257820522" then
                        table.insert(Item_Rewards,"`Character [Mob]`")
                    elseif v.RewardImage.Image == "rbxassetid://16913579571" then
                        table.insert(Item_Rewards,"`Character [Mash]`")
                    elseif v.RewardImage.Image == "rbxassetid://16833352600" then
                        table.insert(Item_Rewards,"`Character [Mihawk]`")
                    elseif v.RewardImage.Image == "rbxassetid://16629617713" then
                        table.insert(Item_Rewards,"`Character [SukunaShibuya]`")
                    elseif v.RewardImage.Image == "rbxassetid://14785556998" then
                        table.insert(Item_Rewards,"`Character [Asta (Black Asta)]`")
                    elseif v.RewardImage.Image == "rbxassetid://13736210016" then
                        table.insert(Item_Rewards,"`Character [Cosmic Garou]`")
                    elseif v.RewardImage.Image == "rbxassetid://14295913088" then
                        table.insert(Item_Rewards,"`Character [Jotaro]`")
                    elseif v.RewardImage.Image == "rbxassetid://13294872244" then
                        table.insert(Item_Rewards,"`Character [Mitsuri]`")
                    elseif v.RewardImage.Image == "rbxassetid://12548891547" then
                        table.insert(Item_Rewards,"`Character [Tanjiro (Sun God)]`")
                    elseif v.RewardImage.Image == "rbxassetid://12275838772" then
                        table.insert(Item_Rewards,"`Character [Dio]`")
                    elseif v.RewardImage.Image == "rbxassetid://8827725106" then
                        table.insert(Item_Rewards,"`Character [RimuruDemonLord]`")
                    elseif v.RewardImage.Image == "rbxassetid://12087483204" then
                        table.insert(Item_Rewards,"`Character [Ichigo (Fullbring Bankai)]`")
                    elseif v.RewardImage.Image == "rbxassetid://16833324796" then
                        table.insert(Item_Rewards,"`Character [Goku UI]`")
                    elseif v.RewardImage.Image == "rbxassetid://16832872564" then
                        table.insert(Item_Rewards,"`Character [Denji]`")
                    elseif v.RewardImage.Image == "rbxassetid://10835672920" then
                        table.insert(Item_Rewards,"`Character [Naruto (Kurama Mode)]`")
                    elseif v.RewardImage.Image == "rbxassetid://10688580603" then
                        table.insert(Item_Rewards,"`Character [Obito]`")
                    elseif v.RewardImage.Image == "rbxassetid://16834112408" then
                        table.insert(Item_Rewards,"`Character [Shanks]`")
                    elseif v.RewardImage.Image == "rbxassetid://10182602891" then
                        table.insert(Item_Rewards,"`Character [Uzui]`")
                    elseif v.RewardImage.Image == "rbxassetid://8466801602" then
                        table.insert(Item_Rewards,"`Character [Yoriichi]`")
                    elseif v.RewardImage.Image == "rbxassetid://16802362266" then
                        table.insert(Item_Rewards,"`Character [Ice Queen Esdeath]`")
                    elseif v.RewardImage.Image == "rbxassetid://16629613889" then
                        table.insert(Item_Rewards,"`Character [Infinity Gojo]`")
                    elseif v.RewardImage.Image == "rbxassetid://16832874929" then
                        table.insert(Item_Rewards,"`Character [Attack Titan]`")
                    elseif v.RewardImage.Image == "rbxassetid://9432939692" then
                        table.insert(Item_Rewards,"`Character [Accelerator]`")
                    elseif v.RewardImage.Image == "rbxassetid://17076062883" then
                        table.insert(Item_Rewards,"`Character [Gear 5 Luffy]`")
                    elseif v.RewardImage.Image == "rbxassetid://7210567835" then
                        table.insert(Item_Rewards,"`Character [Rengoku]`")
                    elseif v.RewardImage.Image == "rbxassetid://13621198974" then
                        table.insert(Item_Rewards,"`Character [Kirito]`")
                    elseif v.RewardImage.Image == "rbxassetid://16833356947" then
                        table.insert(Item_Rewards,"`Character [Levi]`")
                    else
                        table.insert(Item_Rewards,"`Character [Unknow]`")
                    end
                else
                    if not v:FindFirstChild("Gradient") then
                        table.insert(Item_Rewards,"`"..v.Name.." [Common]`")
                    elseif v:FindFirstChild("Gradient") then
                        if tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Uncommon]`")
                        elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Rare]`")
                        elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Epic]`")
                        elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Legendary]`")
                        elseif tostring(v.Gradient.Color) == "0 0.407843 0.0941176 0.0980392 0 0.510815 1 0 0.0156863 0 1 0.439216 0.0705882 0.0784314 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Mythic]`")
                        elseif tostring(v.Gradient.Color) == "0 1 0.976471 0.258824 0 0.541523 1 0.494118 0.976471 0 1 0.333333 1 0.945098 0 " then
                            table.insert(Item_Rewards,"`"..v.Name.." [Divine]`")
                        end
                    end
                end
            else
                if table.find(Currency_Rewards,"None") then table.remove(Currency_Rewards,table.find(Currency_Rewards,"None")) end
                if tonumber(v.LevelReq.Text) then
                    if not Currency_Rewards[v.Name] then
                        Currency_Rewards[v.Name] = {}
                    end
                    table.insert(Currency_Rewards[v.Name] , tonumber(v.LevelReq.Text))
                end
            end
        end)
        Result_Visible:GetPropertyChangedSignal("Visible"):Connect(function ()
            if Fluent.Unloaded then coroutine.yield() end
            if O["Send Webhook"].Value == false then return end

            wait(3.5)

            if not table.find(Currency_Rewards,"None") then
                if table.find(Currency_Number,"`None     `") then table.remove(Currency_Number,table.find(Currency_Number,"`None     `")) end
                for i,v in pairs(Currency_Rewards) do
                    local name_count
                    local sum = 0
                    for x = 1,#v do
                        sum = sum + v[x]
                        name_count = "`"..i.." ["..sum.."]`"
                    end
                    table.insert(Currency_Number,name_count)
                end
            end

            local TimeEnd = "Time: 00:00"
            local DamageDeal = "Damage: "..misc_local("number" ,LocalPlayer.leaderstats.Damage.Value)
            local Rank = "Unknown: F"
            local ClearTime = "Unknown: 0"
            local GameName = "Unknown: nil"
            local GameStatus = " [End!]"

            if Result_Visible == PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI then

                local Rank_Image = Result_Visible.Frame.ResultDiamond.ResultRank
                TimeEnd = Result_Visible.Frame.TimeText.Text

                if Rank_Image.Image == "rbxassetid://7443889715" then
                    Rank = "Rank: S+"
                elseif Rank_Image.Image == "rbxassetid://6715353612" then
                    Rank = "Rank: S"
                elseif Rank_Image.Image == "rbxassetid://6891959728" then
                    Rank = "Rank: A"
                elseif Rank_Image.Image == "rbxassetid://6891959611" then
                    Rank = "Rank: B"
                elseif Rank_Image.Image == "rbxassetid://6891959460" then
                    Rank = "Rank: C"
                elseif Rank_Image.Image == "rbxassetid://6782568839" then
                    Rank = "Rank: F"
                else
                    Rank = "Rank: D"
                end

                if table.find(Currency_Rewards,"None") and table.find(Item_Rewards,"`None      `") and Rank == "Rank: F" then
                    GameStatus = " [Defeat!]"
                    GameName = "Dimension: "..GameMap:split("Dimension")[1].."\nStage Clear: "..local_misc("Stage")
                    ClearTime = "Dimension Clears: "..StatDisplay.StageClear.Value
                else
                    GameStatus = " [Victory!]"
                    if GameMap == "Virtual Garden" then
                        TimeEnd = "Time: 08:00"
                        GameName = "GameMap: "..GameMap.."\nScore: "..BattleCenterUi.EnemiesDefeatedBack.EnemyDefeatedNumber.Text.."\nScore (Highest): "..StatDisplay.TimeChallengeHighScore.Value
                        ClearTime = "Unknown: 0"
                    elseif GameMap == "Infinite Mode" then
                        GameName = "GameMap: "..GameMap.."\nWave: "..BattleCenterUi.WaveClearClearText.Text.."\nWave (Highest): "..StatDisplay.InfiniteRecord.Value
                        ClearTime = "Dimension Clears: "..StatDisplay.StageClear.Value
                    elseif StatDisplay.StageClear.Value ~= Clear1 then
                        GameName = "Dimension: "..GameMap:split("Dimension")[1].."\nStage Clear: "..local_misc("Stage")
                        ClearTime = "Dimension Clears: "..StatDisplay.StageClear.Value
                    elseif StatDisplay.BossRushClears.Value ~= Clear2 then
                        TimeEnd = Result_Visible.Frame.TimeText.Text.."\nBest Record: "..StatDisplay.BossRushRecordString.Value
                        GameName = "GameMap: "..GameMap.."\nStage Clear: 3"
                        ClearTime = "BossRush Clears: "..StatDisplay.BossRushClears.Value
                    elseif StatDisplay.WeeklyShadowRaidsCleared.Value ~= Clear3 then
                        GameName = "SpeedRaid: "..GameMap:split("Raid")[1].."\nStage Clear: "..local_misc("Stage")
                        ClearTime = "SpeedRaid Clears: "..StatDisplay.WeeklyShadowRaidsCleared.Value
                    end
                end

            else
                TimeEnd = "Time: 08:00"
                Rank = "Rank:"..PlayerGui.UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame.RankText.Text:split(":")[2]
                GameName = "Raid: "..GameMap:split("Raid")[1].."\nStage Clear: 0"
                ClearTime = "Raid Clears: Unknown"

                if StatDisplay.RaidClears.Value ~= Clear4 then
                    for i,v in pairs(RaidTimeBest) do
                        if StatDisplay:FindFirstChild(i).Value ~= v[1] then
                            GameName = "Raid: "..GameMap:split("Raid")[1].."\nStage Clear: 0"
                            ClearTime = "Raid Clears: "..StatDisplay.RaidClears.Value.."\n"..i..": "..(v[1] + 1)
                        end
                    end
                end
            end

            local Data = HttpService:JSONEncode({
                ["username"] = "Anime Dimensions Simulator : Notification",
                ["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                content = nil,
                embeds = {{
                  ["title"] = nil,
                  ["color"] = tonumber(misc_local("color", O["Webhook Color"].Value)) or 0x7d7d7d,
                  ["description"] = nil,
                  ["footer"] = {
                    ["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
                    ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
                  },
                  ["thumbnail"] = {
                    ["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                  },
                  ["fields"] = {
                    {
                        ["name"] = "**Item Rewards**",
                        ["value"] = "\n`[+]` "..table.concat(Item_Rewards,"\n`[+]` "),
                        ["inline"] = true
                    },
                    {
                        ["name"] = "**Currency Rewards**",
                        ["value"] = "\n`[+]` "..table.concat(Currency_Number,"\n`[+]` "),
                        ["inline"] = true
                    },
                    {
                        ["name"] = "**Match Information"..GameStatus.."**",
                        ["value"] = "```\n"..GameName.."\n"..Rank.."\n"..DamageDeal.."\n"..TimeEnd.."```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "**Player Information**".." __**|| ["..LocalPlayer.Name.."] ||**__",
                        ["value"] = "```\nLevel: "..Level.Value.." ["..Currency_values("Exp").."]\nCardsOwned: "..StatDisplay.CardsOwned.Value.."/"..StatDisplay.MaxCardsOwned.Value
                        .."\n"..ClearTime.."\nCurrency:\n ∘ Gold: "..Currency_values("Gold").."\n ∘ Gem: "..Currency_values("Gem").."\n ∘ TraitToken: "..Currency_values("TraitToken")
                        .."\n ∘ RaidToken: "..Currency_values("RaidToken").."\n ∘ SpeedRaidToken: "..Currency_values("ShadowCoin").."\n ∘ BossRushToken: "..Currency_values("BossRush").."```",
                        ["inline"] = false
                    }
                },
            }}
            })
            local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
            response({Url = O["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})

        end)
    end))
    coroutine.resume(coroutine.create(function()
        while true do
            if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or GameMap == "Infinite Mode" or string.find(GameMap,"Raid") or Fluent.Unloaded then coroutine.yield() end
            if G["Auto Lobby (Actived)"] then return end
            if O["Auto Back to Lobby"].Value == true then
                if not isfile(CrazyDayF.."Timer.json") then
                    T = {
                        ["H"] = 0,
                        ["M"] = 0,
                        ["S"] = 0
                    }
                    writefile(CrazyDayF.."Timer.json",HttpService:JSONEncode(T))
                else
                    if not string.find(readfile(CrazyDayF.."Timer.json"),"H") or not string.find(readfile(CrazyDayF.."Timer.json"),"M") or not string.find(readfile(CrazyDayF.."Timer.json"),"S") then
                        T = {
                            ["H"] = 0,
                            ["M"] = 0,
                            ["S"] = 0
                        }
                        writefile(CrazyDayF.."Timer.json",HttpService:JSONEncode(T))
                    else
                        T = HttpService:JSONDecode(readfile(CrazyDayF.."Timer.json"))
                    end
                end

                T["S"] = T["S"] + 1
                if T["S"] >= 60 then
                    T["S"] = 0
                    T["M"] = T["M"] + 1
                elseif T["M"] >= 60 then
                    T["M"] = 0
                    T["H"] = T["H"] + 1
                end

                writefile(CrazyDayF.."Timer.json",game:GetService("HttpService"):JSONEncode(T))

                local h, m, s

                if string.len(T["S"]) == 1 then
                    s = "0"..T["S"]
                else
                    s = T["S"]
                end
                if string.len(T["M"]) == 1 then
                    m = "0"..T["M"]
                else
                    m = T["M"]
                end
                if string.len(T["H"]) == 1 then
                    h = "0"..T["H"]
                else
                    h = T["H"]
                end
                SetParagraphValue(2,"Time",1,3,"Time: "..h..":"..m..":"..s)
            end
            task.wait(1)
        end
    end))
    coroutine.resume(coroutine.create(function()
        while true do
            if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or GameMap == "Infinite Mode" or string.find(GameMap,"Raid") or Fluent.Unloaded then coroutine.yield() end
            if not isfile(CrazyDayF.."Timer.json") then return end
            if O["Auto Back to Lobby"].Value == true then
                local a = HttpService:JSONDecode(readfile(CrazyDayF.."Timer.json"))
                if a[TimeStep] >= O["Current Time"].Value then
                    G["Auto Lobby (Actived)"] = true
                    writefile(CrazyDayF.."Timer.json",game:GetService("HttpService"):JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                    Fluent:Notify({
                        Title = "Auto Lobby (Time)",
                        Content = "Time reached "..O["Current Time"].Value..O["Current Time Type"].Value:lower().."s.",
                        SubContent = "Teleporting in 5 seconds",
                        Duration = 5
                    })
                    repeat
                        game:GetService("TeleportService"):Teleport(6938803436)
                        task.wait(1)
                    until O["Auto Back to Lobby"].Value == false or G["Teleport InProgress"] == true or Fluent.Unloaded
                    coroutine.yield()
                end
            end
            task.wait()
        end
    end))
