repeat wait() until game:IsLoaded()

local p, c, t, w, r, m, h, g, vt, pid =
    game:GetService "Players",
    game:GetService "CoreGui",
    game:GetService "TweenService",
    game:GetService "Workspace",
    game:GetService "ReplicatedStorage",
    game:GetService "MarketplaceService",
    game:GetService "HttpService",
    getgenv(),
    game:GetService "VirtualUser",
    game.PlaceId

    do
        if not g["exc"] then
            p.LocalPlayer.OnTeleport:Connect(function (state)
                local qw = queue_on_teleport or queueonteleport or (syn and syn.queue_on_teleport)
                if state == Enum.TeleportState.InProgress then
                    g["teleporting"] = true
                    qw("loadstring(game:HttpGet('https://raw.githubusercontent.com/Mangadexwannatest/CanislupusXHUB/main/ADS%20V%20(Rework)'))()")
                end
            end)
            p.LocalPlayer.Idled:connect(function()
                game:GetService("VirtualUser"):CaptureController()
                game:GetService("VirtualUser"):ClickButton2(Vector2.new())
            end)
            g["exc"] = true
        end
    end

    g["response"] = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
    --// if not string.find(m:GetProductInfo(pid).Name,"Anime Dimension") or c:FindFirstChild("CrazyDay") or g["Loading (Gui)"] then return end
    if c:FindFirstChild("CrazyDay") or g["Loading (Gui)"] then return end
    g["Loading (Gui)"] = true
    local lp, lpg, lpid, gname, ver, blc, curname, roomD, roomR, sTd, lvl ,re, rf =
        p.LocalPlayer,
        p.LocalPlayer.PlayerGui,
        p:GetUserIdFromNameAsync(p.LocalPlayer.Name),
        "Anime Dimensions Simulator (Rework)",
        " 1.0.5",
        {"Naruto","Sasuke"},
        {"Gold","TraitToken","RaidCurrency","BossRushCurrency","Gem"},
        {
            "Titan Dimension",
            "Demon Dimension",
            "Curse Dimension",
            "Villain Dimension",
            "Sword Dimension",
            "Ghoul Dimension",
            "Fate Dimension",
            "Slime Dimension",
            "Devil Dimension",
            "Pirate Dimension",
            "Alien Dimension",
            "Level Dimension"
        },
        {
            "Divine Guardian Raid",
            "Blue Devil Raid",
            "Psycho Student Raid",
            "Buff Boy Raid",
            "Warlord Raid",
            "King of Curses Raid",
            "Black Pasta Raid",
            "Cosmic Wolfman Raid",
            "Joto Raid",
            "Matsuri Raid",
            "Tonjuro Sun God Raid",
            "Vio Raid",
            "Demon Lord Raid",
            "Ichini Fullbring Raid",
            "Roku Ultra Instinct Raid",
            "Chainsaw Raid",
            "Nardo Beast Raid",
            "Cursed Sage Raid",
            "Red Emperor Raid",
            "Tengu Raid",
            "Yomichi Raid",
            "Christmas Raid",
            "Infinity Nojo Raid",
            "Combat Titan Raid",
            "Esper Raid",
            "Gear 5 Fluffy Raid",
            "Tengoku Raid",
            "Hirito Raid",
            "Titan Raid"
        },
        r[p.LocalPlayer.Name.."StatDisplay"],
        p.LocalPlayer.leaderstats.Level,
        r.RemoteEvents.MainRemoteEvent,
        r.RemoteFunctions.MainRemoteFunction

    local File = "CrazyDay/"..gname.."/"..lpid
    do if not isfolder("CrazyDay") then makefolder("CrazyDay") makefolder("CrazyDay/"..gname) else if not isfolder("CrazyDay/"..gname) then makefolder("CrazyDay/"..gname) end end end local C = {} local tween
    local misc = {
        tweenspeed = 0.125,
        speed = 150,
        name = "Ignore",
        current = 0,
        rarity = {},
        check = false,
        debounce = false,
        step = 0,
        tpstep = 0
    }

    function C:Empety()
        local a = lpg.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay
        if sTd.CardsOwned.Value >= 3 then
            if (a.Slot1.ItemImage.Image == "" or a.Slot2.ItemImage.Image == "" or a.Slot3.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif sTd.CardsOwned.Value == 2 then
            if (a.Slot1.ItemImage.Image == "" or a.Slot2.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif sTd.CardsOwned.Value == 1 then
            if (a.Slot1.ItemImage.Image == "") then
                return true
            else
                return false
            end
        elseif sTd.CardsOwned.Value == 0 then
            return "Zero"
        end
    end

    function C:Hex(name, number)
        if name == "number" then
            local DigitsInNumber = math.max(math.ceil(math.log10(number+1)),1)
            local FormattedNumber
            local NotationToUse
            local TableOfLetters = {"", "K", "M", "B", "T"}
            local NumberOfDigitsToShow = 1.5*(DigitsInNumber%3)^2 - 3.5*(DigitsInNumber%3) + 5
            FormattedNumber = string.sub(tostring(number/10^(DigitsInNumber-1)),1,NumberOfDigitsToShow) 
            local FinalNumber = string.sub(FormattedNumber*(10^((DigitsInNumber-1)%3)),1,NumberOfDigitsToShow) 
            if DigitsInNumber == 3 then
                FinalNumber = tostring(math.ceil(tonumber(FinalNumber)))
            end
            NotationToUse = FinalNumber..TableOfLetters[math.ceil(DigitsInNumber/3)]
            return NotationToUse
        elseif name == "color" then
            local int = math.floor(number.r*255)*256^2+math.floor(number.g*255)*256+math.floor(number.b*255)
            local current = int
            local final = ""
            local hexChar = {"a", "b", "c", "d", "e", "f"}

            repeat local remainder = current % 16
                local char = tostring(remainder)
                if remainder >= 10 then
                    char = hexChar[1 + remainder - 10]
                end
                current = math.floor(current/16)
                final = final..char
            until current <= 0
            return "0x"..string.reverse(final)
        elseif name == "character" then
            local a = {}
            for i,v in ipairs(lpg.MainGui.CenterUIFrame.SpeedRaidCharacterSelector.Shade.SpeedRaidCharacterInventoryScrollingFrame:GetChildren()) do
                if v:IsA("ImageButton") and v.CharacterImage.ImageTransparency == 0 then
                    table.insert(a, v.Name)
                end
            end
            return a
        end
    end

    function C:Unequip()
        for k, v in ipairs(sTd:GetChildren()) do
            if v.Name.find(v.Name,"Slot") and v.Value ~= "" then
                rf:InvokeServer("UnequipCard", v.Value)
            end
        end
    end

    function C:Bestcard()
        local main = {}
        for i, v in ipairs(game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") and v.LayoutOrder >= 1 then
                table.insert(main, {
                    ["name"] = v.Name,
                    ["lvl"] = v.LayoutOrder
                })
            end
        end
        table.sort(main ,function (a, b)
            return a["lvl"] < b["lvl"]
        end)
        return main
    end

    function C:Head()
        for i, v in ipairs(w.Folders.Monsters:GetChildren()) do
            if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") and v.Head.Transparency ~= 1 then
                v.Head.Transparency = 1
            end
        end
    end

    function C:Tween(pos, cf)
        pcall(function ()
            tween = t:Create(lp.Character.HumanoidRootPart, TweenInfo.new((pos.Position - lp.Character.HumanoidRootPart.Position).Magnitude/misc.speed, Enum.EasingStyle.Linear), {CFrame = pos.CFrame * cf})
        end)
    end

    g.Tabs = {
        [4] = "Character 1 (Combo)",
        [5] = "Character 2 (Combo)",
        [6] = "Character 3 (Combo)"
    }
    local Gui = loadstring(game:HttpGet("https://github.com/4DailRyz/Gui/releases/download/Main/Gui.Main.lua"))()
    local Save = loadstring(game:HttpGet("https://raw.githubusercontent.com/4DailRyz/Gui/main/Save.lua"))()
    local InT = loadstring(game:HttpGet("https://raw.githubusercontent.com/4DailRyz/Gui/main/interfaces.lua"))()
    local V = Gui.Options
    local Window = Gui:CreateWindow({
        Title = gname..ver,
        SubTitle = " [YT: @crazyday3693]",
        TabWidth = 155,
        Size = UDim2.fromOffset(520, 400),
        Acrylic = true,
        Theme = "Amethyst",
        MinimizeKey = Enum.KeyCode.LeftControl
    })

    local Ta = {
        a = Window:AddTab({ Title = "Join", Icon = "rbxassetid://17629903752"}),
        b = Window:AddTab({ Title = "Game", Icon = "rbxassetid://17629899973"}),
        c = Window:AddTab({ Title = "Skill", Icon = "rbxassetid://17789519521"}),
        d = Window:AddTab({ Title = "      ●  Character 1 (Combo)", Icon = "" }),
        e = Window:AddTab({ Title = "      ●  Character 2 (Combo)", Icon = "" }),
        f = Window:AddTab({ Title = "      ●  Character 3 (Combo)", Icon = "" }),
        g = Window:AddTab({ Title = "Webhook", Icon = "rbxassetid://17789550683"}),
        t = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://17630002584"})
    }

    local xT = {
        [1] = {
            [1] = Ta.a:AddSection("Dimension"),
            [2] = Ta.a:AddSection("Raid"),
            [3] = Ta.a:AddSection("Misc")
        },
        [2] = {
            [1] = Ta.b:AddSection("Main"),
            [2] = Ta.b:AddSection("Character"),
            ["B"] = Ta.b:AddSection("Boss Rush Misc"),
            [3] = Ta.b:AddSection("Card"),
            [4] = Ta.b:AddSection("Time"),
            [5] = Ta.b:AddSection("Misc")
        },
        [3] = {
            [1] = Ta.c:AddSection("Skill settings"),
            [2] = Ta.d:AddSection("Main Character"),
            [3] = Ta.e:AddSection("Assist Character (1)"),
            [4] = Ta.f:AddSection("Assist Character (3)"),
        },
        [4] = {
            [1] = Ta.g:AddSection("Webhook settings"),
            [2] = Ta.g:AddSection("Webhook Ping")
        },
    }


    local crazy = {
        f = Instance.new("Frame"),
        us = Instance.new("UIStroke"),
        uc = Instance.new("UICorner"),
        imb = Instance.new("ImageButton"),
    }

    crazy.f.Name = "Black Screen"
    crazy.f.Parent = c.CrazyDay
    crazy.f.AnchorPoint = Vector2.new(1, 1)
    crazy.f.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    crazy.f.BorderSizePixel = 0
    crazy.f.ZIndex = 1
    crazy.f.Position = UDim2.new(1.00222063, 0, 1.01891279, 0)
    crazy.f.Size = UDim2.new(10, 0, 10, 0)
    crazy.f.Visible = false

    crazy.imb.Name = "ImageButton"
    crazy.imb.Parent = c.CrazyDay
    crazy.imb.AnchorPoint = Vector2.new(0.5, 0.5)
    crazy.imb.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    crazy.imb.BorderColor3 = Color3.fromRGB(0, 0, 0)
    crazy.imb.BorderSizePixel = 0
    crazy.imb.ZIndex = 999
    crazy.imb.Position = UDim2.new(0.0420, 0, 0.920, 0)
    crazy.imb.Size = UDim2.new(0, 80, 0, 80)
    crazy.imb.Image = g["Image"] or "rbxassetid://17789924997"

    crazy.uc.Parent = crazy.imb
    crazy.uc.CornerRadius = UDim.new(1, 1)

    crazy.us.Parent = crazy.imb
    crazy.us.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    crazy.us.LineJoinMode = Enum.LineJoinMode.Round
    crazy.us.Thickness = 1
    crazy.us.Color = Color3.fromRGB(120, 120, 120)


    xT[1][1]:AddDropdown("Current Dimension", {
        Title = "Select Dimension",
        Description = nil,
        Values = roomD,
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddDropdown("Current Difficulty", {
        Title = "Select Difficulty",
        Description = nil,
        Values = {"Easy", "Hard", "Nightmare"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddToggle("Hard core", {
        Title = "Hard core",
        Description = nil,
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddToggle("Friends Only", {
        Title = "Friends Only",
        Description = nil,
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddToggle("Auto Retry", {
        Title = "Auto Retry",
        Description = "Automatically replay the game if the game ends.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddToggle("Auto Join (Current Dimension)", {
        Title = "Auto Join (Current Dimension)",
        Description = "Automatically creates and starts the selected dimension.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][1]:AddToggle("Auto Join (Highnest)", {
        Title = "Auto Join (Highnest)",
        Description = "Automatically create and start the highest dimension.",
        Default = false,
        Callback = function (vv)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
            if vv and (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) then
                local i = V["Current Difficulty"]
                local v = V["Current Dimension"]
                if lvl.Value > 0 and lvl.Value < 6 then
                    i.Value = "Easy"
                    v.Value = "Titan Dimension"
                elseif lvl.Value > 5 and lvl.Value < 11 then
                    i.Value = "Hard"
                    v.Value = "Titan Dimension"
                elseif lvl.Value > 10 and lvl.Value < 16 then
                    i.Value = "Nightmare"
                    v.Value = "Titan Dimension"
                elseif lvl.Value > 15 and lvl.Value < 21 then
                    i.Value = "Easy"
                    v.Value = "Demon Dimension"
                elseif lvl.Value > 20 and lvl.Value < 26 then
                    i.Value = "Hard"
                    v.Value = "Demon Dimension"
                elseif lvl.Value > 25 and lvl.Value < 31 then
                    i.Value = "Nightmare"
                    v.Value = "Demon Dimension"
                elseif lvl.Value > 30 and lvl.Value < 36 then
                    i.Value = "Easy"
                    v.Value = "Curse Dimension"
                elseif lvl.Value > 35 and lvl.Value < 41 then
                    i.Value = "Hard"
                    v.Value = "Curse Dimension"
                elseif lvl.Value > 40 and lvl.Value < 46 then
                    i.Value = "Nightmare"
                    v.Value = "Curse Dimension"
                elseif lvl.Value > 45 and lvl.Value < 51 then
                    i.Value = "Easy"
                    v.Value = "Villain Dimension"
                elseif lvl.Value > 50 and lvl.Value < 56 then
                    i.Value = "Hard"
                    v.Value = "Villain Dimension"
                elseif lvl.Value > 55 and lvl.Value < 61 then
                    i.Value = "Nightmare"
                    v.Value = "Villain Dimension"
                elseif lvl.Value > 60 and lvl.Value < 68 then
                    i.Value = "Easy"
                    v.Value = "Sword Dimension"
                elseif lvl.Value > 67 and lvl.Value < 76 then
                    i.Value = "Nightmare"
                    v.Value = "Sword Dimension"
                elseif lvl.Value > 75 and lvl.Value < 83 then
                    i.Value = "Easy"
                    v.Value = "Ghoul Dimension"
                elseif lvl.Value > 82 and lvl.Value < 91 then
                    i.Value = "Nightmare"
                    v.Value = "Ghoul Dimension"
                elseif lvl.Value > 90 and lvl.Value < 98 then
                    i.Value = "Easy"
                    v.Value = "Fate Dimension"
                elseif lvl.Value > 97 and lvl.Value < 106 then
                    i.Value = "Nightmare"
                    v.Value = "Fate Dimension"
                elseif lvl.Value > 105 and lvl.Value < 113 then
                    i.Value = "Easy"
                    v.Value = "Slime Dimension"
                elseif lvl.Value > 112 and lvl.Value < 121 then
                    i.Value = "Nightmare"
                    v.Value = "Slime Dimension"
                elseif lvl.Value > 120 and lvl.Value < 131 then
                    i.Value = "Nightmare"
                    v.Value = "Devil Dimension"
                elseif lvl.Value > 130 and lvl.Value < 141 then
                    i.Value = "Nightmare"
                    v.Value = "Pirate Dimension"
                elseif lvl.Value > 140 and lvl.Value < 151 then
                    i.Value = "Nightmare"
                    v.Value = "Alien Dimension"
                elseif lvl.Value > 150  then
                    i.Value = "Nightmare"
                    v.Value = "Level Dimension"
                end
            end
        end
    })

    xT[1][2]:AddDropdown("Current Raid", {
        Title = "Select Raid",
        Description = nil,
        Values = roomR,
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
            if v == roomR[1] and lvl.Value < 100 then
                V["Current Raid"]:SetValue(roomR[math.random(2,20)])
            end
        end
    })

    xT[1][2]:AddToggle("Auto Join (Raid)", {
        Title = "Auto Join (Raid)",
        Description = "Automatically creates and starts the selected raid",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][2]:AddToggle("Auto Join (Raid Challenge)", {
        Title = "Auto Join (Raid Challenge)",
        Description = "Automatically join the raid challenge if reward available.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][2]:AddToggle("Auto Join (Speed Raid)", {
        Title = "Auto Join (Speed Raid)",
        Description = "Automatically join the speed raid if not cooldown.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][3]:AddToggle("Auto Join (Boss Rush)", {
        Title = "Auto Join (Boss Rush)",
        Description = "Automatically join the boss rush mode.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][3]:AddToggle("Auto Join (Infinite Mode)", {
        Title = "Auto Join (Infinite Mode)",
        Description = "Automatically join the infinite mode if reward available.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[1][3]:AddButton({
        Title = "Return to Lobby",
        Description = "Press the button to return to the lobby.",
        Callback = function()
            Window:Dialog({
                Title = "Notify",
                Content = "Do you want to teleport to the lobby?",
                Buttons = {
                    {
                        Title = "Yes",
                        Callback = function()
                            game:GetService("TeleportService"):Teleport(6938803436)
                        end
                    },
                    {
                        Title = "No",
                        Callback = function()
                            print(g["stop"])
                        end
                    }
                }
            })
        end
    })

    xT[2][1]:AddDropdown("Current Farm Mode", {
        Title = "Select Mode",
        Description = nil,
        Values = {"Normal Mode", "Bring Mode"},
        Multi = false,
        Default = 2,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
            g["bring 1"] = false misc.current = 0
        end
    })

    xT[2][1]:AddDropdown("Current Method", {
        Title = "Select Method",
        Description = nil,
        Values = {"Behind", "Front", "Over", "Under"},
        Multi = false,
        Default = 3,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][1]:AddSlider("Current Distance",{
        Title = "Current Distance",
        Description = nil,
        Default = 6.55,
        Min = 0,
        Max = 10,
        Rounding = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][1]:AddSlider("Health to Safe",{
        Title = "Health",
        Description = "Choose the health \nif player below x % HP",
        Default = 50,
        Min = 10,
        Max = 100,
        Rounding = 0,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][1]:AddToggle("Auto Set Distance", {
        Title = "Auto Set Distance",
        Description = "Automatically set the distance calculated from the size of the enemy.",
        Default = true,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][1]:AddToggle("Dodge Skill", {
        Title = "Dodge Skill",
        Description = "Dodge all enemy skills.",
        Default = true,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][1]:AddToggle("Auto Safe", {
        Title = "Auto Safe",
        Description = "Stop all farm if player below x % HP.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    C[1] = xT[2][2]:AddParagraph({
        Title = "Current Character",
        Content = "nil\nnil\nnil"
    })

    if isfile(File.."/Character Save.json") and string.find(readfile(File.."/Character Save.json"),"Character") then
        pcall(function ()
            local ch = h:JSONDecode(readfile(File.."/Character Save.json"))
            C[1]:SetDesc(ch["Character1"].."\n"..ch["Character2"].."\n"..ch["Character3"])
        end)
    end

    xT[2][2]:AddToggle("Auto Equip Character", {
        Title = "Auto Equip Character",
        Description = "Automatically equips characters.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][2]:AddButton({
        Title = "Save Character",
        Description = "Press the button to save your characters.",
        Callback = function()
            local ch = {}
            ch["Character1"] = sTd.CharacterName.Value
            ch["Character2"] = sTd.AssistCharacterName1.Value
            ch["Character3"] = sTd.AssistCharacterName2.Value
            ch["Character"] = lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame.CharacterTriIcon.Image:split("rbxassetid://")[2]

            Gui:Notify({
                Title = "Successfully saved",
                Content = ch["Character1"].."\n"..ch["Character2"].."\n"..ch["Character3"],
                SubContent = nil,
                Duration = 5
            })

            writefile(File.."/Character Save.json",h:JSONEncode(ch))
            C[1]:SetDesc(ch["Character1"].."\n"..ch["Character2"].."\n"..ch["Character3"])
        end
    })

    xT[2]["B"]:AddDropdown("Boss Rush Type", {
        Title = "Select Type",
        Description = "Select the option you want to use for boss rush.",
        Values = {"Free", "Ticket", "Gem", "Raid"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2]["B"]:AddSlider("Limit Ticket",{
        Title = "Limit Ticket",
        Description = "Select the limit amount of boss rush ticket you wish to buy.",
        Default = 10,
        Min = 1,
        Max = 150,
        Rounding = 0,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2]["B"]:AddToggle("Auto Buy", {
        Title = "Auto Buy",
        Description = "Automatically buy the boss rush ticket.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
            if v and V["Boss Rush Type"].Value ~= "Gem" and V["Boss Rush Type"].Value ~= "Raid" then
                V["Auto Buy"]:SetValue(false)
                Gui:Notify({
                    Title = "Auto Buy (Error)",
                    Content = "Make sure the option you select is Gem , Raid",
                    SubContent = nil,
                    Duration = 2.5
                })
            end
        end
    })

    xT[2][3]:AddDropdown("Current Rarity", {
        Title = "Select Rarity",
        Description = nil,
        Values = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic", "Divine"},
        Multi = true,
        Default = {"Common", "Uncommon"},
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end g["Rarity"] = true misc.rarity = {}
            for inx, val in pairs(v) do
                if val == true then
                    table.insert(misc.rarity, inx)
                end
            end
        end
    })

    xT[2][3]:AddToggle("Auto Sell", {
        Title = "Auto Sell",
        Description = "Automatically sell all of the selected cards (rarity) not sell card equiping , lock.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][3]:AddToggle("Auto Equip", {
        Title = "Auto Equip",
        Description = "Automatically equip your best card.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
            if v and C:Empety() ~= "Zero" and (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) then C:Unequip() end
        end
    })

    xT[2][3]:AddToggle("Auto Upgrade", {
        Title = "Auto Upgrade",
        Description = "Automatically upgrade all your equipped cards.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })


    C[2] = xT[2][4]:AddParagraph({
        Title = "Time: 00:00:00",
        Content = nil
    })

    if isfile(File.."/Timer.json") then
        local RE = {
            string.find(readfile(File.."/Timer.json"),"H"),
            string.find(readfile(File.."/Timer.json"),"M"),
            string.find(readfile(File.."/Timer.json"),"S")
        }
        if RE[1] and RE[2] and RE[3] then
            local T = h:JSONDecode(readfile(File.."/Timer.json"))

            local H, M, S

            if string.len(T["S"]) == 1 then
                S = "0"..T["S"]
            else
                S = T["S"]
            end
            if string.len(T["M"]) == 1 then
                M = "0"..T["M"]
            else
                M = T["M"]
            end
            if string.len(T["H"]) == 1 then
                H = "0"..T["H"]
            else
                H = T["H"]
            end

            C[2]:SetTitle("Time: "..H..":"..M..":"..S)
        end
    end

    xT[2][4]:AddDropdown("Current Time Type", {
        Title = "Time type",
        Description = nil,
        Values = {"Second", "Minute", "Hour"},
        Multi = false,
        Default = 2,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][4]:AddSlider("Current Time",{
        Title = "Current Time",
        Description = nil,
        Default = 20,
        Min = 1,
        Max = 60,
        Rounding = 0,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][4]:AddToggle("Auto Back to Lobby", {
        Title = "Auto Back to Lobby",
        Description = "Automatically teleport to the lobby \nif the time reach x current time.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][5]:AddToggle("Auto Claim (Quest)", {
        Title = "Auto Claim (Quest)",
        Description = "Automatically claim all of the daily // weekly quests.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][5]:AddToggle("Auto Claim (Speed Raid)", {
        Title = "Auto Claim (Speed Raid)",
        Description = "Automatically claim all of the speed raid reward.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[2][5]:AddToggle("Dash no cooldown", {
        Title = "Dash no cooldown",
        Description = "Makes your dash have no cooldown.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end sTd.No_DashCooldown.Value = v
        end
    })

    xT[2][5]:AddButton({
        Title = "Redeem All Code",
        Description = "Press the button to redeem all code.",
        Callback = function()
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025) then return end
            local Code = {"3YEARS"}

            for i, v in pairs(w.Leaderboards.MilestoneBoard.Center.Surface.ScrollingFrame:GetChildren()) do
                if v:IsA("Frame") and v.MilestoneCode.Text ~= "LOCKED" then
                    table.insert(Code, v.MilestoneCode.Text)
                end
            end

            for i, v in pairs(Code) do
                rf:InvokeServer("RedeemPromoCode", v)
            end

            Gui:Notify({
                Title = "Successfully code redeemed",
                Content = table.concat(Code, "\n"),
                SubContent = nil,
                Duration = 3.5
            })
        end
    })

    xT[3][1]:AddDropdown("Current Assists", {
        Title = "Select Assist",
        Description = nil,
        Values = {"Assist1", "Assist2", "Fruit1", "Fruit2"},
        Multi = true,
        Default = {"Assist1", "Assist2", "Fruit1", "Fruit2"},
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end g["Assists"] = true
        end
    })

    xT[3][1]:AddDropdown("Current Attack Method", {
        Title = "Attack type",
        Description = nil,
        Values = {"Remote", "Click"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][1]:AddToggle("Auto Skill", {
        Title = "Auto Skill",
        Description = "Automatically attacks and skills on enemies.",
        Default = true,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddDropdown("C1 Skill One", {
        Title = "Skill One",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddDropdown("C1 Skill Two", {
        Title = "Skill Two",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 2,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddDropdown("C1 Skill Third", {
        Title = "Skill Third",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 3,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddDropdown("C1 Skill Fourth", {
        Title = "Skill Fourth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 4,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddDropdown("C1 Skill Fifth", {
        Title = "Skill Fifth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 5,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][2]:AddSlider("C1 Skill Distance",{
        Title = "Current Skill Distance",
        Description = "Choose the distance you want the (character 1) to attack and skill to the enemy.",
        Default = 25,
        Min = 5,
        Max = 150,
        Rounding = 0,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddDropdown("C2 Skill One", {
        Title = "Skill One",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddDropdown("C2 Skill Two", {
        Title = "Skill Two",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 2,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddDropdown("C2 Skill Third", {
        Title = "Skill Third",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 3,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddDropdown("C2 Skill Fourth", {
        Title = "Skill Fourth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 4,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddDropdown("C2 Skill Fifth", {
        Title = "Skill Fifth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 5,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][3]:AddSlider("C2 Skill Distance",{
          Title = "Current Skill Distance",
          Description = "Choose the distance you want the (character 2) to attack and skill to the enemy.",
          Default = 25,
          Min = 5,
          Max = 150,
          Rounding = 0,
          Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddDropdown("C3 Skill One", {
        Title = "Skill One",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 1,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddDropdown("C3 Skill Two", {
        Title = "Skill Two",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 2,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddDropdown("C3 Skill Third", {
        Title = "Skill Third",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 3,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddDropdown("C3 Skill Fourth", {
        Title = "Skill Fourth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 4,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddDropdown("C3 Skill Fifth", {
        Title = "Skill Fifth",
        Values = {"1", "2", "3", "4", "5"},
        Multi = false,
        Default = 5,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[3][4]:AddSlider("C3 Skill Distance",{
          Title = "Current Skill Distance",
          Description = "Choose the distance you want the (character 2) to attack and skill to the enemy.",
          Default = 25,
          Min = 5,
          Max = 150,
          Rounding = 0,
          Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][1]:AddInput("Webhook URL", {
        Title = "Webhook URL.",
        Description = nil,
        Default = nil,
        Placeholder = "Url.",
        Numeric = false,
        Finished = false,
        Callback = function(v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][1]:AddColorpicker("Webhook Color", {
        Title = "Webhook Color",
        Description = "Choose the color of the webhook.",
        Default = Color3.fromRGB(125, 125, 125),
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][1]:AddToggle("Send Webhook", {
        Title = "Send Webhook",
        Description = "Send a notifaction to your discord when the game ends.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][1]:AddButton({
        Title = "Check Webhook",
        Description = "Press the button see if the webhook working.",
        Callback = function()
            if not string.find(V["Webhook URL"].Value,"https://discord.com/api/webhooks") then
            return
            Gui:Notify({
                Title = "Send Webhook (Error)",
                Content = "URL does not match the database.",
                SubContent = nil,
                Duration = 2.5
            })
            end

            local content = nil
            if V["Webhook Ping (Activate)"].Value then content = "<@"..tostring(V["Webhook Ping (Id)"].Value)..">".."\n`You received:` ".."`None`" end
            local Data = h:JSONEncode({
                ["username"] = "Anime Dimensions Simulator : Notification",
                ["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                content = content,
                embeds = {{
                    ["title"] = nil,
                    ["color"] = tonumber(C:Hex("color", V["Webhook Color"].Value)),
                    ["description"] = nil,
                    ["footer"] = {
                        ["text"] = "Time: "..os.date("%X").." ["..os.date("%x").."]".."\nCredit: YT » @crazyday3693",
                        ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
                    },
                    ["thumbnail"] = {
                        ["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                    },
                    ["fields"] = {
                        {
                            ["name"] = "```Status: The webhook is working.\nTime: "..tostring(w.DistributedGameTime)..".```",
                            ["value"] = "",
                            ["inline"] = false
                        }
                    },
                }}
            })
            g["response"]({Url = V["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
        end
    })

    xT[4][2]:AddInput("Webhook Ping (Id)", {
        Title = "Webhook ID.",
        Description = nil,
        Default = nil,
        Placeholder = "Id.",
        Numeric = true,
        Finished = false,
        Callback = function(v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][2]:AddDropdown("Webhook Ping (Type)", {
        Title = "Ping type",
        Description = "Select the options you want to ping.",
        Values = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic", "Divine", "Character"},
        Multi = true,
        Default = {"Mythic", "Divine", "Character"},
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end g["Action"] = true
        end
    })

    xT[4][2]:AddToggle("Webhook Ping (Activate)", {
        Title = "Webhook Ping",
        Description = "Will ping if the selected action is received.",
        Default = false,
        Callback = function (v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[4][2]:AddButton({
        Title = "How to get an Id",
        Description = "Press the button to copy the link.",
        Callback = function()
            setclipboard(tostring("https://streamable.com/hzzd5f"))
            Gui:Notify({
                Title = "Successfully link copied",
                Content = "https://streamable.com/hzzd5f.",
                SubContent = nil,
                Duration = 4.5
            })
        end
    })

    InT:SetLibrary(Gui)
    InT:SetFolder(File)
    InT:BuildInterfaceSection(Ta.t)
    xT[5] = {[1] = Ta.t:AddSection("Settings")}

    xT[5][1]:AddToggle("Auto Save", {
        Title = "Auto Save",
        Description = "Automatically saves all configuration settings.",
        Default = true,
        Callback = function (v)
            if not g["Loading (Gui)"] then Save:Save("Configs") end
        end
    })

    xT[5][1]:AddToggle("Auto Hide Gui", {
        Title = "Auto Hide Gui",
        Description = "Automatically hide your gui after execute the script.",
        Default = false,
        Callback = function (v)
            if v and not g["hide+"] then g["hide+"] = true Window:Minimize() end
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[5][1]:AddToggle("Black Screen", {
        Title = "Black Screen",
        Description = "Disable 3DRendering for best performance.",
        Default = false,
        Callback = function (v)
            c.CrazyDay["Black Screen"].Visible = v game:GetService "RunService":Set3dRenderingEnabled(not v)
            if not g["Loading (Gui)"] and V["Auto Save"].Value then Save:Save("Configs") end
        end
    })

    xT[5][1]:AddButton({
        Title = "Reset all configs",
        Description = "Press the button to reset all configuration to default.",
        Callback = function()
            Window:Dialog({
                Title = "Notify",
                Content = "Do you want to reset all configuration?",
                Buttons = {
                    {
                        Title = "Yes",
                        Callback = function()
                            writefile(File.."/settings/Configs.json",[[
                            {"objects":[{"idx":"C3 Skill One","type":"Dropdown","mutli":false,"value":"1"},{"idx":"C2 Skill Distance","type":"Slider","value":"25"},{"idx":"Auto Claim (Speed Raid)","type":"Toggle","value":false},{"idx":"Health to Safe","type":"Slider","value":"55"},{"idx":"Auto Join (Raid)","type":"Toggle","value":false},{"idx":"Current Distance","type":"Slider","value":"6.5"},{"idx":"Current Time","type":"Slider","value":"15"},{"idx":"Hard core","type":"Toggle","value":false},{"idx":"C1 Skill Fourth","type":"Dropdown","mutli":false,"value":"4"},{"idx":"Auto Equip Character","type":"Toggle","value":false},{"idx":"C1 Skill Distance","type":"Slider","value":"25"},{"idx":"Auto Join (Current Dimension)","type":"Toggle","value":false},{"idx":"C1 Skill Two","type":"Dropdown","mutli":false,"value":"2"},{"idx":"Send Webhook","type":"Toggle","value":false},{"idx":"Current Attack Method","type":"Dropdown","mutli":false,"value":"Remote"},{"idx":"Black Screen","type":"Toggle","value":false},{"idx":"Auto Sell","type":"Toggle","value":false},{"idx":"Auto Safe","type":"Toggle","value":false},{"idx":"Current Method","type":"Dropdown","mutli":false,"value":"Over"},{"idx":"Auto Join (Raid Challenge)","type":"Toggle","value":false},{"idx":"C2 Skill Fourth","type":"Dropdown","mutli":false,"value":"4"},{"idx":"C1 Skill One","type":"Dropdown","mutli":false,"value":"1"},{"idx":"Current Farm Mode","type":"Dropdown","mutli":false,"value":"Bring Mode"},{"idx":"Current Assists","type":"Dropdown","mutli":true,"value":{"Assist2":true,"Fruit1":true,"Fruit2":true,"Assist1":true}},{"idx":"C2 Skill Two","type":"Dropdown","mutli":false,"value":"2"},{"idx":"Auto Claim (Quest)","type":"Toggle","value":false},{"idx":"Webhook Ping (Id)","type":"Input","text":""},{"idx":"Auto Equip","type":"Toggle","value":false},{"idx":"Dash no cooldown","type":"Toggle","value":false},{"idx":"C3 Skill Third","type":"Dropdown","mutli":false,"value":"3"},{"idx":"C3 Skill Fourth","type":"Dropdown","mutli":false,"value":"4"},{"idx":"Auto Set Distance","type":"Toggle","value":true},{"idx":"Webhook Ping (Activate)","type":"Toggle","value":false},{"idx":"Auto Join (Speed Raid)","type":"Toggle","value":false},{"idx":"Dodge Skill","type":"Toggle","value":true},{"idx":"Auto Hide Gui","type":"Toggle","value":false},{"idx":"Auto Save","type":"Toggle","value":true},{"idx":"Current Dimension","type":"Dropdown","mutli":false,"value":"Titan Dimension"},{"idx":"C3 Skill Distance","type":"Slider","value":"25"},{"idx":"Current Time Type","type":"Dropdown","mutli":false,"value":"Minute"},{"idx":"Webhook Ping (Type)","type":"Dropdown","mutli":true,"value":{"Mythic":true,"Character":true,"Divine":true}},{"idx":"Auto Join (Infinite Mode)","type":"Toggle","value":false},{"idx":"Auto Back to Lobby","type":"Toggle","value":false},{"idx":"C3 Skill Two","type":"Dropdown","mutli":false,"value":"2"},{"idx":"C1 Skill Fifth","type":"Dropdown","mutli":false,"value":"5"},{"idx":"Auto Upgrade","type":"Toggle","value":false},{"idx":"Webhook URL","type":"Input","text":""},{"idx":"Auto Retry","type":"Toggle","value":false},{"idx":"Current Difficulty","type":"Dropdown","mutli":false,"value":"Easy"},{"idx":"C3 Skill Fifth","type":"Dropdown","mutli":false,"value":"5"},{"idx":"C2 Skill Third","type":"Dropdown","mutli":false,"value":"3"},{"idx":"Current Raid","type":"Dropdown","mutli":false,"value":"Titan Raid"},{"idx":"C1 Skill Third","type":"Dropdown","mutli":false,"value":"3"},{"idx":"Limit Ticket","type":"Slider","value":"10"},{"idx":"Current Rarity","type":"Dropdown","mutli":true,"value":{"Uncommon":true,"Common":true}},{"idx":"C2 Skill Fifth","type":"Dropdown","mutli":false,"value":"5"},{"idx":"Auto Join (Highnest)","type":"Toggle","value":false},{"idx":"Auto Join (Boss Rush)","type":"Toggle","value":false},{"idx":"Webhook Color","type":"Colorpicker","transparency":0,"value":"7d7d7d"},{"idx":"C2 Skill One","type":"Dropdown","mutli":false,"value":"1"},{"idx":"Friends Only","type":"Toggle","value":false},{"idx":"Auto Buy","type":"Toggle","value":false},{"idx":"Auto Skill","type":"Toggle","value":true},{"idx":"Boss Rush Type","type":"Dropdown","mutli":false,"value":"Free"}]}
                            ]])
                            task.wait(0.35)

                            do
                                Save:Load("Configs")
                            end

                            Gui:Notify({
                                Title = "Successfully reseted configs",
                                Content = "",
                                SubContent = nil,
                                Duration = 3.5
                            })
                        end
                    },
                    {
                        Title = "No",
                        Callback = function()
                           -- setclipboard(tostring(readfile(File.."/settings/Configs.json")))
                        end
                    }
                }
            })
        end
    })

    do
        Save:SetLibrary(Gui)
        Save:SetFolder(File)
        Save:IgnoreThemeSettings()
        Window:SelectTab(1)
        if isfile(File.."/settings/Configs.json") then Save:Load("Configs") end

        if not g["Rarity"] then
            V["Current Rarity"]:SetValue({
                ["Common"] = true,
                ["Uncommon"] = true
            })
        end

        if not g["Assists"] then
            V["Current Assists"]:SetValue({
                ["Assist1"] = true,
                ["Assist2"] = true,
                ["Fruit1"] = true,
                ["Fruit2"] = true
            })
        end

        if not g["Action"] then
            V["Webhook Ping (Type)"]:SetValue({
                ["Mythic"] = true,
                ["Divine"] = true,
                ["Character"] = true
            })
        end

        g["Loading (Gui)"] = false
    end
    repeat task.wait() until not g["Loading (Gui)"]
    Gui:Notify({Title = "Successfully loaded", Content = "Time: "..tostring(w.DistributedGameTime), SubContent = nil, Duration = 5}) local GameMap = w.GameMap:FindFirstChildOfClass("Model").Name
    local c1, c2, c3, c4, c5, c6, c7, c8, c9, c10

    c1 = crazy.imb.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            Window:Minimize()
        end
    end)

    task.spawn(function ()
        while true do
            if Gui.Unloaded then
                pcall(function ()
                    if lp.Character ~= nil then lp.Character.Humanoid.PlatformStand = false local bv = lp.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity") if bv then bv:Destroy() end end
                    game:GetService "RunService":Set3dRenderingEnabled(true)
                    g["bring 1"] = false g["bring 2"] = false g["safe"] = false g["dead"] = false g["dodge"] = false g["hide+"] = false g["back lobby"] = false g["raid"] = false misc.current = 0
                    if c1 then c1:Disconnect() end
                    if c2 then c2:Disconnect() end
                    if c3 then c3:Disconnect() end
                    if c4 then c4:Disconnect() end
                    if c5 then c5:Disconnect() end
                    if c6 then c6:Disconnect() end
                    if c7 then c7:Disconnect() end
                    if c8 then c8:Disconnect() end
                    if c9 then c9:Disconnect() end
                    if c10 then c10:Disconnect() end
                    if tween then tween:Cancel() end
                    C:Head()
                end)
                break
            end
            if g["Image"] and crazy.imb.Image ~= g["Image"] then
                crazy.imb.Image = g["Image"]
            end
            task.wait()
        end
    end)

    for i,v in ipairs(c.CrazyDay:GetChildren()) do
        if v.Name ~= "Black Screen" then
            v.ZIndex = 999
        end
    end

    if GameMap == "CharacterTest" then return Gui:Notify({Title = "Failed to load function (Error)", Content = "This map is not supported.", SubContent = nil, Duration = 99999999})
    elseif GameMap == "Infinite Mode" then misc.speed = 80
    end
    task.wait(1)

    function C:AutoFarm()
        if (not V["Auto Join (Current Dimension)"].Value and not V["Auto Join (Highnest)"].Value and not V["Auto Join (Raid)"].Value and not V["Auto Join (Raid Challenge)"].Value and not V["Auto Join (Speed Raid)"].Value and not V["Auto Join (Boss Rush)"].Value and not V["Auto Join (Infinite Mode)"].Value and not Gui.Unloaded) then
            return false
        else
            return true
        end
    end

    function C:Bar(name)
        if name == "boss" then
            return lpg.BattleGui.CenterUIFrame.BossHealthFrame.Visible
         elseif name == "res" then
             for i,v in ipairs(lpg.UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame:GetDescendants()) do
                 if v.Name == "RaidRewardGridFrame" and v.Parent.Name == 'Shadow' then
                     return v
                 end
             end
         end
    end

    function C:CUR(name)
        if name == "Exp" then
            return lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text:split("%")[1].."/100%"
        elseif name == "BossRush" then
            return lpg.MainGui.CenterUIFrame.BossRushShop.BossRushShopCurrencyCounter.BossRushShopCurrencyAmount.Text
        elseif name == "RaidToken" then
            return lpg.MainGui.CenterUIFrame.Shop.Frame.ShopRaidTokenCounter.ShopRaidTokenAmount.Text
        elseif name == "TraitToken" then
            return lpg.MainGui.CenterUIFrame.CharacterTraitFrame.Frame.TraitGearChangeTrait.Text
        elseif name == "ShadowCoin" then
            return lpg.MainGui.CenterUIFrame.RaidShop.SpeedRaidShopUIHolder.SpeedRaidShopCurrencyCounter.SpeedRaidShopCurrencyAmount.Text
        elseif name == "Gold" then
            for i,v in ipairs(lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetDescendants()) do
                if v.Name == "Gold" and v:IsA("TextLabel") then
                    return v.Text
                end
            end
        elseif name == "Gem" then
            for i,v in ipairs(lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetDescendants()) do
                if v.Name == "Gem" and v:IsA("TextLabel") then
                    return v.Text
                end
            end
        end
    end

    function C:Flame()
        if V["Dodge Skill"].Value then
            for i,v in ipairs(w.Folders.Debris:GetChildren()) do
                if v.Name == "FlameTrailIgnore" then
                    return true
                end
            end
        end
    end

    function C:GS(text)
        if string.find(text, ",") then
            local gsu = text:gsub(",", "")
            return gsu
        end
    end

    function C:N1(name, value)
        if name == "stage" then
            return lp.RespawnLocation.Name:split("SpawnLocation")[2]
        elseif name == "dist" then
            return (lp.Character.HumanoidRootPart.Position - value.Position).magnitude
        elseif name == "noclip" then
            for i, v in ipairs(lp.Character:GetChildren()) do
                if v:IsA("BasePart") and v.CanCollide ~= value then
                    v.CanCollide = value
                end
            end
        end
    end

    function C:N2(name)
        local dist, thing = math.huge, false
        for i, v in ipairs(w.Folders.Monsters:GetChildren()) do
            if name == "all" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    local mag = (lp.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            elseif name == "boss" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v.EnemyHealthBarGui.Enabled == false then
                    local mag = (lp.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            elseif name == "bring" then
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v.Head.Transparency ~= 10 then
                    local mag = (lp.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            end
        end
        return thing
    end

    function C:N3()
        local dist, thing = 175, false
        for i,v in ipairs(w.GameMap:FindFirstChildOfClass("Model"):GetChildren()) do
            if string.find(v.Name,"Teleport") and not string.find(v.Name,"Destination") then
                local mag = (lp.Character.HumanoidRootPart.Position - v.Position).magnitude
                if mag < dist and C:N1("dist", C:N2("all").HumanoidRootPart) > dist then
                    misc.current = 0
                    dist = mag
                    thing = v
                end
            end
        end
        return thing
    end

    function C:N4(name)
        if name == "enemy" then
            for i,v in ipairs(w.Folders.Monsters:GetChildren()) do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    return v
                end
            end
        elseif name == "count" then
            local enemy = {}
            for i,v in ipairs(w.Folders.Monsters:GetChildren()) do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    table.insert(enemy, v.Name)
                end
            end
            return #enemy
        end
    end

    function C:N5()
        local Table = {}

        if lp.Character.Humanoid.WalkSpeed <= 0 or lp.Character.HumanoidRootPart.Anchored then
            table.insert(Table, "Animation")
        else
            for i, v in ipairs(lp.Character.Humanoid:GetPlayingAnimationTracks()) do
                if v.Name == "Animation" then
                    table.insert(Table, v.Name)
                end
            end
        end
        return #Table
    end

    function C:N6(Object)
        local dist, thing = math.huge, false
        for i, v in ipairs(Object:GetChildren()) do
            if v:IsA("Part") or v:IsA("MeshPart") then
                local mag = (lp.Character.HumanoidRootPart.Position - v.Position).magnitude
                if mag < dist then
                    dist = mag
                    thing = v
                end
            end
        end
        return thing
    end

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if C:AutoFarm() then
                    if not g["dodge"] then
                        if lp.Character.Humanoid.PlatformStand == false then lp.Character.Humanoid.PlatformStand = true end
                        C:N1("noclip", false)
                    else
                        if lp.Character.Humanoid.PlatformStand == true then lp.Character.Humanoid.PlatformStand = false end
                        C:N1("noclip", true)
                    end

                    if lp.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity") == nil then
                        local bv = Instance.new("BodyVelocity")
                        bv.Parent =  lp.Character.HumanoidRootPart
                        bv.MaxForce = Vector3.new(10000, 10000, 10000)
                        bv.Velocity = Vector3.new(0, 0, 0)
                    end

                    local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
                    for _, v in ipairs(lp.Character:GetDescendants()) do
                        if v.IsA(v, "BasePart") then
                            v.Velocity, v.RotVelocity = V3, V3
                        end
                    end

                    if g["bring 1"] and C:N2("bring") and C:N1("dist", C:N2("bring").HumanoidRootPart) <= 13.75 then
                        for i,v in ipairs(w.Folders.Monsters:GetChildren()) do
                            if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") and v.Head.Transparency ~= 10 then
                                if (lp.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude <= 29.25 then
                                    v.Head.Transparency = 10
                                end
                            end
                        end
                    end
                else
                    if lp.Character.Humanoid.PlatformStand == true then lp.Character.Humanoid.PlatformStand = false end
                    local bv = lp.Character.HumanoidRootPart:FindFirstChildOfClass("BodyVelocity") if bv then bv:Destroy() end
                    g["bring 1"] = false g["bring 2"] = false misc.current = 0
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                local CR = lpg.UniversalGui.UniversalCenterUIFrame.ResultUI

                if V["Auto Retry"].Value and CR.Visible then
                    if CR.Frame.RetryDungeonButton.Visible then
                        if GameMap == "Boss Rush" and V["Auto Join (Boss Rush)"].Value then
                            if V["Boss Rush Type"].Value == "Free" and sTd.BossRushFreeEntry.Value >= 1 then
                                firesignal(CR.Frame.RetryDungeonButton.MouseButton1Down)
                            elseif V["Boss Rush Type"].Value ~= "Free" and lpg.MainGui.CenterUIFrame.BossRushFrame.BossRushEntryPassCount.Text >= "1" then
                                firesignal(CR.Frame.RetryDungeonButton.MouseButton1Down)
                            else
                                firesignal(CR.Frame.LeaveDungeonButton.MouseButton1Down)
                            end
                        else
                            if tonumber(C:N1("stage")) > 1 then
                                firesignal(CR.Frame.RetryDungeonButton.MouseButton1Down)
                            else
                                firesignal(CR.Frame.LeaveDungeonButton.MouseButton1Down)
                            end
                        end
                    elseif not CR.Frame.RetryDungeonButton.Visible then
                        firesignal(CR.Frame.LeaveDungeonButton.MouseButton1Down)
                    end
                elseif not V["Auto Retry"].Value and CR.Visible then
                    firesignal(CR.Frame.LeaveDungeonButton.MouseButton1Down)
                end

                if C:AutoFarm() and C:N3() and not g["dead"] then
                    C:Tween(C:N3(), CFrame.new(0, 0, 0))
                    tween:Play()
                    tween.Completed:Wait()
                end

                if C:Bar("boss") then
                    for i, v in ipairs(w.Folders.Monsters:GetChildren()) do
                        if v:FindFirstChildOfClass("BillboardGui") and v.EnemyHealthBarGui.Enabled then
                            v:FindFirstChildOfClass("BillboardGui"):Destroy()
                        end
                    end
                end

                if sTd.BattleCharacterName.Value == sTd.CharacterName.Value then
                    g["cNum"] = "C1 "
                elseif sTd.BattleCharacterName.Value == sTd.AssistCharacterName1.Value then
                    g["cNum"] = "C2 "
                elseif sTd.BattleCharacterName.Value == sTd.AssistCharacterName2.Value then
                    g["cNum"] = "C3 "
                end

                local bl = table.find(blc, sTd.BattleCharacterName.Value)
                if not bl then
                    if V["Auto Set Distance"].Value then
                        if C:Bar("boss") then
                            if C:N2("boss").HumanoidRootPart.Size.Y >= 25 then
                                g["b +y"] = 2.5
                                g["b -y"] = - 2.5
                            else
                                g["b +y"] = C:N2("boss").Head.Size.Y + 5.75
                                g["b -y"] = - (C:N2("boss").LowerTorso.Size.Y + C:N2("boss").HumanoidRootPart.Size.Y + 5.55)
                            end

                            if V["Current Method"].Value == "Over" then
                                g["method"] = CFrame.new(0, g["b +y"], 0) * CFrame.Angles(math.rad(-90),0,0)
                            elseif V["Current Method"].Value == "Under" then
                                g["method"] = CFrame.new(0, g["b -y"], 0) * CFrame.Angles(math.rad(90),0,0)
                            elseif V["Current Method"].Value == "Front" then
                                g["method"] = CFrame.new(0, 0, - (C:N2("boss").HumanoidRootPart.Size.Z + 4.5)) * CFrame.Angles(math.rad(0),1800,0)
                            elseif V["Current Method"].Value == "Behind" then
                                g["method"] = CFrame.new(0, 0, C:N2("boss").HumanoidRootPart.Size.Z + 4.5)
                            end

                        elseif not C:Bar("boss") then
                            if V["Current Method"].Value == "Over" then
                                g["method"] = CFrame.new(0, C:N2("all").Head.Size.Y + 5.85, 0) * CFrame.Angles(math.rad(-90),0,0)
                            elseif V["Current Method"].Value == "Under" then
                                g["method"] = CFrame.new(0, - (C:N2("all").LowerTorso.Size.Y + C:N2("all").HumanoidRootPart.Size.Y + 5.35), 0) * CFrame.Angles(math.rad(90),0,0)
                            elseif V["Current Method"].Value == "Front" then
                                g["method"] = CFrame.new(0, 0, - (C:N2("all").HumanoidRootPart.Size.Z + 4.5)) * CFrame.Angles(math.rad(0),1800,0)
                            elseif V["Current Method"].Value == "Behind" then
                                g["method"] = CFrame.new(0, 0, C:N2("all").HumanoidRootPart.Size.Z + 4.5)
                            end
                        end

                    elseif not V["Auto Set Distance"].Value then
                        if V["Current Method"].Value == "Over" then
                            g["method"] = CFrame.new(0, V["Current Distance"].Value, 0) * CFrame.Angles(math.rad(-90),0,0)
                        elseif V["Current Method"].Value == "Under" then
                            g["method"] = CFrame.new(0, -V["Current Distance"].Value, 0) * CFrame.Angles(math.rad(90),0,0)
                        elseif V["Current Method"].Value == "Front" then
                            g["method"] = CFrame.new(0, 0, -V["Current Distance"].Value) * CFrame.Angles(math.rad(0),1800,0)
                        elseif V["Current Method"].Value == "Behind" then
                            g["method"] = CFrame.new(0, 0, V["Current Distance"].Value)
                        end
                    end

                elseif bl then
                    if V["Current Method"].Value == "Over" then
                        g["method"] = CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(-90),0,0)
                    elseif V["Current Method"].Value == "Under" then
                        g["method"] = CFrame.new(0, - 1.5, 0) * CFrame.Angles(math.rad(90),0,0)
                    elseif V["Current Method"].Value == "Front" then
                        g["method"] = CFrame.new(0, 0, - 1.5) * CFrame.Angles(math.rad(0),1800,0)
                    elseif V["Current Method"].Value == "Behind" then
                        g["method"] = CFrame.new(0, 0, 1.5)
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if Gui.Unloaded then break end
            if g["raid"] and not GameMap.find(GameMap, "Raid") and GameMap ~= "Infinite Mode" and (pid ~= 7338881230 and pid ~= 7274690025 and pid ~= 6938803436) then
                Gui:Notify({
                    Title = "Auto Join (Raid)",
                    Content = "The raid has opened.",
                    SubContent = "Teleporting in 5 seconds.",
                    Duration = 5
                })
                wait(5)
                game:GetService("TeleportService"):Teleport(7338881230)
                break
            end
            pcall(function ()
                if V["Auto Join (Raid)"].Value and lvl.Value >= 15 then
                    if tonumber(os.date("!*t").min) <= 8 then
                        g["raid"] = true
                    else
                        g["raid"] = false
                    end
                else
                    g["raid"] = false
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 7274690025 and pid ~= 6938803436) or g["speedraid"] or Gui.Unloaded then break end
            pcall(function ()
                if V["Auto Equip Character"].Value and isfile(File.."/Character Save.json") then
                    if not string.find(readfile(File.."/Character Save.json"), "Character") or g["speedraid"] then return end
                    local cha = h:JSONDecode(readfile(File.."/Character Save.json"))
                    if sTd.CharacterName.Value ~= cha["Character1"] or sTd.AssistCharacterName1.Value ~= cha["Character2"] or sTd.AssistCharacterName2.Value ~= cha["Character3"] then
                        repeat
                            g["equiping"] = true
                            rf:InvokeServer("EquipCharacter", cha["Character1"])
                            rf:InvokeServer("EquipCharacterAssist", cha['Character2'], 1)
                            rf:InvokeServer("EquipCharacterAssist", cha['Character3'], 2)
                            task.wait()
                        until sTd.CharacterName.Value == cha["Character1"] and sTd.AssistCharacterName1.Value == cha["Character2"] and sTd.AssistCharacterName2.Value == cha["Character3"]
                        g["equiping"] = false
                        lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame.CharacterTriIcon.Image = "rbxassetid://"..cha["Character"]
                        Gui:Notify({
                            Title = "Successfully character equipped",
                            Content = cha["Character1"].."\n"..cha["Character2"].."\n"..cha["Character3"],
                            SubContent = nil,
                            Duration = 2.75
                        })
                    end
                end
            end)
            task.wait()
        end
    end)


    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                local health = lpg.UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text
                local maxhealth = lp.Character.Head.PlayerHealthBarGui.HealthText.Text:split("/")[2]
                if V["Auto Safe"].Value and C:AutoFarm() and not g["dead"] then
                    if tonumber(health) <= tonumber(V["Health to Safe"].Value * (maxhealth / 100)) then
                        misc.current = 0
                        g["bring 1"] = false
                        g["bring 2"] = false
                        C:Head()
                        g["safe"] = true
                    else
                        g["safe"] = false
                    end
                elseif not V["Auto Safe"].Value and g["safe"] then
                    misc.current = 0
                    g["bring 1"] = false
                    g["bring 2"] = false
                    C:Head()
                    g["safe"] = false
                end

                if g["safe"] and not g["dead"] and not g["stop"] then
                    C:Tween(w.Folders.SpawnPoints[lp.RespawnLocation.Name], CFrame.new(0, 70, 0))
                    tween:Play()
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if C:AutoFarm() and C:Bar("boss") and not C:Flame() and not C:N3() and not g["safe"] and not g["dead"] and not g["dodge"] and not g["stop"] and not lp.Character.HumanoidRootPart.Anchored then
                    repeat
                        misc.current = 0
                        g["bring 1"] = false
                        g["bring 2"] = false
                        C:Tween(C:N2("boss").HumanoidRootPart, g["method"])
                        tween:Play()
                        task.wait()
                    until C:N3() or not C:Bar("boss") or not C:AutoFarm() or C:Flame() or g["safe"] or g["dead"] or g["dodge"] or g["stop"] or lp.Character.HumanoidRootPart.Anchored or Gui.Unloaded
                    tween:Cancel()
                end
            end)
            task.wait()
        end
    end)


    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded or GameMap == "Infinite Mode" then break end
            pcall(function ()
                if C:AutoFarm() and not C:Bar("boss") and not C:N3() and not g["safe"] and not g["dead"] then
                    if V["Current Farm Mode"].Value == "Bring Mode" and not g["spawning"] then
                        if misc.current == 0 and C:N2("bring") then
                            repeat
                                g["bring 1"] = true
                                C:Tween(C:N2("bring").HumanoidRootPart, CFrame.new(0,10,0))
                                tween:Play()
                                task.wait(0.0875)
                            until misc.current > 0 or C:N3() or C:Bar("boss") or not C:N2("bring") or not C:AutoFarm() or g["safe"] or g["spawning"] or g["dead"] or Gui.Unloaded
                            misc.current = 1
                        elseif misc.current == 1 and not C:N2("bring") then
                            g["bring 1"] = true
                            C:Tween(C:N4("enemy").HumanoidRootPart, CFrame.new(0, 50, 0))
                            tween:Play()
                            tween.Completed:Wait()
                            task.wait(2.675)
                            misc.current = 2
                        elseif misc.current == 2 and not g["dodge"] and not lp.Character.HumanoidRootPart.Anchored then
                            repeat
                                g["bring 1"] = false
                                C:Tween(C:N2("all").HumanoidRootPart, g["method"])
                                tween:Play()
                                task.wait()
                            until misc.current ~= 2 or C:N3() or C:Bar("boss") or not C:AutoFarm() or g["safe"] or g["dead"] or g["dodge"] or g["spawning"] or lp.Character.HumanoidRootPart.Anchored or Gui.Unloaded
                            tween:Cancel()
                        end
                    elseif V["Current Farm Mode"].Value == "Normal Mode" and not g["dodge"] and not lp.Character.HumanoidRootPart.Anchored then
                        repeat
                            C:Tween(C:N2("all").HumanoidRootPart, g["method"])
                            tween:Play()
                            task.wait()
                        until C:N3() or C:Bar("boss") or not C:AutoFarm() or g["safe"] or g["dead"] or g["dodge"] or g["spawning"] or lp.Character.HumanoidRootPart.Anchored or Gui.Unloaded
                        tween:Cancel()
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded or GameMap ~= "Infinite Mode" then break end
            pcall(function ()
                if C:AutoFarm() and not C:Bar("boss") and not g["dead"] and not g["safe"] and not g["stop"] then
                    if C:N4("count") == 0 then
                        task.wait(1.375)
                        repeat
                            C:Tween(w.Folders.SpawnPoints.SpawnLocation1, CFrame.new(0, 31, 0))
                            tween:Play()
                            task.wait()
                        until (C:N4("count") >= 1 and not g["bring 2"]) or g["stop"] or g["safe"] or not C:AutoFarm() or C:Bar("boss") or Gui.Unloaded
                        tween:Cancel()
                    elseif not g["bring 2"] and not g["dodge"] and not lp.Character.HumanoidRootPart.Anchored then
                        repeat
                            C:Tween(C:N2("all").HumanoidRootPart, g["method"])
                            tween:Play()
                            task.wait(0.475)
                        until g["safe"] or g["dodge"] or g["dead"] or not C:AutoFarm() or g["stop"] or C:Bar("boss") or C:N4("count") == 0 or lp.Character.HumanoidRootPart.Anchored or Gui.Unloaded
                        tween:Cancel()
                    end
                end
            end)
            task.wait()
        end
    end)


    task.spawn(function ()
        if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then return end
        c2 = lp:GetPropertyChangedSignal("RespawnLocation"):Connect(function ()
            misc.current = 0
            g["spawning"] = true
            task.wait(0.475)
            misc.current = 0
            g["spawning"] = false
        end)
        c3 = w.Folders.Debris.ChildAdded:Connect(function (v)
            pcall(function ()
                if V["Dodge Skill"].Value and (v.Name == "FlameTrail" or table.find({"telegraph"},v.Name:lower())) and not v:IsA("Model") and not g["bring 1"] and not g["bring 2"] and not g["safe"] then
                    misc.name = "Ignore"
                    if v.Name == "FlameTrail" then
                        task.wait(0.0375)
                        if v:FindFirstChild("P1") == nil then return end
                        if v:FindFirstChild("P1") and v.P1.Texture ~= "rbxassetid://6169516856" then return end
                        misc.name = "FlameTrailIgnore"
                    end
                    if C:Bar("boss") then
                        misc.tweenspeed = 0.1425
                    else
                        if GameMap == "Infinite Mode" then
                            misc.tweenspeed = 0.325
                        else
                            misc.tweenspeed = 0.275
                        end
                    end
                    local a = v:Clone()
                    local side = math.clamp(3.45,0,10)
                    local Sizeto = v.Size + Vector3.new(side,100,side + 3.25)
                    a.Size = Vector3.new(0,0,v.Size.Z)
                    if v.ClassName == "MeshPart" then
                        a.Size = Vector3.new(0,0,100)
                        Sizeto = v.Size + Vector3.new(side,side,100)
                    end
                    t:Create(a, TweenInfo.new(misc.tweenspeed), {Size = Sizeto}):Play()
                    a.CFrame = v.CFrame + Vector3.new(0,0,0)
                    a.Anchored = true
                    a.Transparency = 1
                    a.CanCollide = true
                    a.Name = misc.name
                    a.Parent = v.Parent
                    repeat task.wait() until not v.Parent or not V["Dodge Skill"].Value or g["bring 1"] or g["bring 2"] or g["safe"] or C:N4("count") == 0 or Gui.Unloaded
                    a:Destroy()
                end
            end)
        end)

        function C.Touch()
            pcall(function ()
                c4 = lp.Character.HumanoidRootPart.Touched:Connect(function (Part)
                    if Part.Name == "Ignore" or Part.Name == "FlameTrailIgnore" then
                       g["dodge"] = true
                       repeat task.wait() if tween then tween:Cancel() end g["dodge"] = true until not Part.Parent
                       g["dodge"] = false
                    end
                end)
            end)
        end

        function C.CharacterAdded(cha)
            local humanoid = cha:WaitForChild("Humanoid", 5)
            if not humanoid then
                return
            end

            humanoid.Died:Connect(function()
                misc.current = 0
                g["bring 1"] = false
                g["bring 2"] = false
                g["dodge"] = false
                g["safe"] = false
                g["stop"] = false
                g["dead"] = true
                if c4 then c4:Disconnect() c4 = nil end

                c5 = lp.CharacterAdded:Connect(function ()
                    task.wait(1)
                    misc.current = 0
                    g["stop"] = false
                    g["dead"] = false
                    C.Touch()
                    C:Head()
                    if c5 then c5:Disconnect() c5 = nil end
                end)
            end)
        end

        lp.CharacterAdded:Connect(C.CharacterAdded)
        do
            local cha = lp.Character or lp.CharacterAdded:Wait()
            if cha then
                C.Touch()
                C.CharacterAdded(cha)
            end
        end

        if GameMap == "Infinite Mode" then
            c6 = lpg.BattleGui.CenterUIFrame.WaveClearClearText:GetPropertyChangedSignal("Text"):Connect(function ()
                local Wave = lpg.BattleGui.CenterUIFrame.WaveClearClearText.Text
                if Wave:len() == 2 and Wave.find(Wave,"0") == 2 then
                    g["bring 2"] = false
                elseif Wave:len() == 3 and Wave.find(Wave,"0") == 3 or (Wave.find(Wave,"00")) then
                    g["bring 2"] = false
                else
                    g["bring 2"] = true
                    task.wait(3.75)
                    g["bring 2"] = false
                end
            end)

            c7 = game:GetService "RunService".Heartbeat:Connect(function()
                pcall(function ()
                    if g["dead"] then return end
                    if misc.check == false and misc.debounce == false then
                        misc.debounce = true
                        LastPos = lp.Character.HumanoidRootPart.Position
                        task.wait(.1)
                        misc.check = true
                        misc.debounce = false
                    else
                        if misc.debounce == false then
                            local NewPos = lp.Character.HumanoidRootPart.Position
                            if (LastPos - NewPos).Magnitude > 25 then
                                g["stop"] = true
                                tween:Cancel()
                                task.wait(2.35)
                                g["stop"] = false
                                tween:Cancel()
                            end
                            misc.check = false
                        end
                    end
                end)
            end)
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if g["bring 1"] or g["bring 2"] or g["dead"] or g["safe"] or g["stop"] then return end
                if V["Auto Skill"].Value and C:N5() == 0 and C:AutoFarm() and  C:N1("dist", C:N6(C:N2("all"))) <= V[g["cNum"].."Skill Distance"].Value then
                    local gui = lpg.UniversalGui.UniversalCenterUIFrame.SlotsHolder
                    local iId = "rbxassetid://6797200424"

                    if gui["Skill"..V[g["cNum"].."Skill One"].Value].Visible and gui["Skill"..V[g["cNum"].."Skill One"].Value].Image ~= iId then
                        repeat
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},tonumber(V[g["cNum"].."Skill One"].Value))
                            task.wait(0.125)
                        until C:N5() >= 1 or gui["Skill"..V[g["cNum"].."Skill One"].Value].Image == iId or g["stop"] or Gui.Unloaded
                    end
                    repeat task.wait() until C:N5() == 0 or Gui.Unloaded
                    if gui["Skill"..V[g["cNum"].."Skill Two"].Value].Visible and gui["Skill"..V[g["cNum"].."Skill One"].Value].Image == iId and gui["Skill"..V[g["cNum"].."Skill Two"].Value].Image ~= iId then
                        repeat
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},tonumber(V[g["cNum"].."Skill Two"].Value))
                            task.wait(0.125)
                        until C:N5() >= 1 or gui["Skill"..V[g["cNum"].."Skill Two"].Value].Image == iId or g["stop"] or Gui.Unloaded
                    end
                    repeat task.wait() until C:N5() == 0 or Gui.Unloaded
                    if gui["Skill"..V[g["cNum"].."Skill Third"].Value].Visible and gui["Skill"..V[g["cNum"].."Skill Two"].Value].Image == iId and gui["Skill"..V[g["cNum"].."Skill Third"].Value].Image ~= iId then
                        repeat
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},tonumber(V[g["cNum"].."Skill Third"].Value))
                            task.wait(0.125)
                        until C:N5() >= 1 or gui["Skill"..V[g["cNum"].."Skill Third"].Value].Image == iId or g["stop"] or Gui.Unloaded
                    end
                    repeat task.wait() until C:N5() == 0 or Gui.Unloaded
                    if gui["Skill"..V[g["cNum"].."Skill Fourth"].Value].Visible and gui["Skill"..V[g["cNum"].."Skill Third"].Value].Image == iId and gui["Skill"..V[g["cNum"].."Skill Fourth"].Value].Image ~= iId then
                        repeat
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},tonumber(V[g["cNum"].."Skill Fourth"].Value))
                            task.wait(0.125)
                        until C:N5() >= 1 or gui["Skill"..V[g["cNum"].."Skill Fourth"].Value].Image == iId or g["stop"] or Gui.Unloaded
                    end
                    repeat task.wait() until C:N5() == 0 or Gui.Unloaded
                    if gui["Skill"..V[g["cNum"].."Skill Fifth"].Value].Visible and gui["Skill"..V[g["cNum"].."Skill Fourth"].Value].Image == iId and not gui["Skill"..V[g["cNum"].."Skill Fifth"].Value].Image ~= iId then
                        repeat
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},tonumber(V[g["cNum"].."Skill Fifth"].Value))
                            task.wait(0.125)
                        until C:N5() >= 1 or gui["Skill"..V[g["cNum"].."Skill Fifth"].Value].Image == iId or g["stop"] or Gui.Unloaded
                    end

                    for i,v in pairs(V["Current Assists"].Value) do
                        if i and v == true then
                            if gui["Skill"..i].Visible and gui["Skill"..i].Image ~= iId and gui["Skill"..i].SkillName.Text ~= "None" then
                                if string.find(i,"1") then
                                    re:FireServer("Use"..i:split("1")[1].."Skill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},1)
                                elseif string.find(i,"2") then
                                    re:FireServer("Use"..i:split("2")[1].."Skill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position)},2)
                                end
                            end
                        end
                    end
                end
            end)
            task.wait(0.135)
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if g["bring 1"] or g["bring 2"] or g["dead"] or g["safe"] or g["stop"] then return end
                if V["Auto Skill"].Value and C:N5() == 0 and C:AutoFarm() and C:N1("dist", C:N6(C:N2("all"))) <= 11.5 then
                    if V["Current Attack Method"].Value == "Remote" then
                        if lp.Character:FindFirstChild("Bow") or (lp.Character:FindFirstChild("Gun1") and lp.Character:FindFirstChild("Gun2")) or (lp.Character:FindFirstChild("Staff") and lp.Character.Staff:FindFirstChild("EssentialWeld") and lp.Character.Staff.EssentialWeld.C1.X <= -0.038) then
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position),["combo"] = 3},"BasicAttack")
                        else
                            re:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(C:N2("all").HumanoidRootPart.Position),["attackNumber"] = 4},"BasicAttack")
                        end
                    elseif V["Current Attack Method"].Value == "Click" then
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
                        game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
                    end
                end

            end)
            task.wait(0.335)
        end
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025)  or Gui.Unloaded then break end
            pcall(function ()
                if V["Auto Equip"].Value and C:Empety() == true then
                    C:Unequip()
                    repeat
                        if C:Empety() == true then
                            rf:InvokeServer("EquipCard", C:Bestcard()[1]["name"])
                            rf:InvokeServer("EquipCard", C:Bestcard()[2]["name"])
                            rf:InvokeServer("EquipCard", C:Bestcard()[3]["name"])
                        end
                        task.wait()
                    until C:Empety() == false or not V["Auto Equip"].Value or Gui.Unloaded
                end
                if V["Auto Equip"].Value and C:Empety() == true then return end
                if V["Auto Upgrade"].Value then
                    for i, v in ipairs(sTd:GetChildren()) do
                        if v.Name.find(v.Name, "Slot") and v.Value ~= "" then
                            rf:InvokeServer("UpgradeCard", v.Value)
                        end
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025)  or Gui.Unloaded then break end
            pcall(function ()
                if V["Auto Equip"].Value and C:Empety() == true then return end
                if V["Auto Sell"].Value and #misc.rarity >= 1 then
                    local unsell = {
                        sTd.Slot1.Value,
                        sTd.Slot2.Value,
                        sTd.Slot3.Value,
                        "CardInventorySlot"
                    }
                    for i, v in ipairs(lpg.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
                        if v:IsA("ImageButton") and not table.find(unsell, v.Name) and v.CardLock.Visible == false then
                            for l, k in ipairs(r.TextGradients:GetChildren()) do
                                if table.find(misc.rarity, k.Name) and tostring(k.Color) == tostring(v.Epic.Color) then
                                    rf:InvokeServer("SellCard", v.Name)
                                end
                            end
                        end
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded or GameMap.find(GameMap, "Raid") or GameMap == "Infinite Mode" or g["back lobby"] then break end
            pcall(function ()
                if V["Auto Back to Lobby"].Value then
                    if not isfile(File.."/Timer.json") then
                        writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                    elseif isfile(File.."/Timer.json") then
                        local read = readfile(File.."/Timer.json")
                        if not string.find(read, "H") or not string.find(read, "M") or not string.find(read, "S") then
                            writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                        else
                            local T = h:JSONDecode(read)

                            if not tonumber(T["H"]) or not tonumber(T["M"]) or not tonumber(T["S"]) then
                                writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                            end

                            T["S"] = T["S"] + 1

                            if T["S"] >= 60 then
                                T["S"] = 0
                                T["M"] = T["M"] + 1
                            elseif T["M"] >= 60 then
                                T["M"] = 0
                                T["H"] = T["H"] + 1
                            elseif T["H"] > 60 then
                                writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                            end

                            writefile(File.."/Timer.json", h:JSONEncode(T))

                            local H, M, S

                            if string.len(T["S"]) == 1 then
                                S = "0"..T["S"]
                            else
                                S = T["S"]
                            end
                            if string.len(T["M"]) == 1 then
                                M = "0"..T["M"]
                            else
                                M = T["M"]
                            end
                            if string.len(T["H"]) == 1 then
                                H = "0"..T["H"]
                            else
                                H = T["H"]
                            end

                            C[2]:SetTitle("Time: "..H..":"..M..":"..S)

                        end
                    end
                end
            end)
            task.wait(1)
        end
    end)

    task.spawn(function ()
        while true do
            if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded or GameMap.find(GameMap, "Raid") or GameMap == "Infinite Mode" or g["back lobby"] then break end
            pcall(function ()
                if V["Auto Back to Lobby"].Value and isfile(File.."/Timer.json") then
                    local v = V["Current Time Type"]
                    local T = h:JSONDecode(readfile(File.."/Timer.json"))

                    local H, M, S

                    if string.len(T["S"]) == 1 then
                        S = "0"..T["S"]
                    else
                        S = T["S"]
                    end
                    if string.len(T["M"]) == 1 then
                        M = "0"..T["M"]
                    else
                        M = T["M"]
                    end
                    if string.len(T["H"]) == 1 then
                        H = "0"..T["H"]
                    else
                        H = T["H"]
                    end

                    if v.Value == "Second" then
                        if T["M"] >= 1 or T["H"] >= 1 or T["S"] >= V["Current Time"].Value then
                            Gui:Notify({
                                Title = "Auto Lobby (Time)",
                                Content = "Time spent "..H..":"..M..":"..S,
                                SubContent = "Teleporting in 5 seconds.",
                                Duration = 5
                            })

                            task.wait(5)
                            repeat
                                g["back lobby"] = true
                                writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                                C[2]:SetTitle("Time: 00:00:00")
                                game:GetService("TeleportService"):Teleport(6938803436)
                                task.wait(3)
                            until not V["Auto Back to Lobby"].Value or g["teleporting"] or Gui.Unloaded
                        end
                    elseif v.Value == "Minute" then
                        if T["H"] >= 1 or T["M"] >= V["Current Time"].Value then
                            Gui:Notify({
                                Title = "Auto Lobby (Time)",
                                Content = "Time spent "..H..":"..M..":"..S,
                                SubContent = "Teleporting in 5 seconds.",
                                Duration = 5
                            })

                            task.wait(5)
                            repeat
                                g["back lobby"] = true
                                writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                                C[2]:SetTitle("Time: 00:00:00")
                                game:GetService("TeleportService"):Teleport(6938803436)
                                task.wait(3)
                            until not V["Auto Back to Lobby"].Value or g["teleporting"] or Gui.Unloaded
                        end
                    elseif v.Value == "Hour" then
                        if T["H"] >= V["Current Time"].Value then
                            Gui:Notify({
                                Title = "Auto Lobby (Time)",
                                Content = "Time spent "..H..":"..M..":"..S,
                                SubContent = "Teleporting in 5 seconds.",
                                Duration = 5
                            })

                            task.wait(5)
                            repeat
                                g["back lobby"] = true
                                writefile(File.."/Timer.json",h:JSONEncode({["H"] = 0, ["M"] = 0, ["S"] = 0}))
                                C[2]:SetTitle("Time: 00:00:00")
                                game:GetService("TeleportService"):Teleport(6938803436)
                                task.wait(3)
                            until not V["Auto Back to Lobby"].Value or g["teleporting"] or Gui.Unloaded
                        end
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if V["Auto Claim (Speed Raid)"].Value then
                    for i,v in ipairs(lpg.MainGui.CenterUIFrame.SpeedRaidFrame:GetChildren()) do
                        if v.Name == "Shade" and i == 11 then
                            SHADE_QUEST = v
                        end
                    end
                    for i,v in ipairs(SHADE_QUEST.SpeedRaidScrollingFrame:GetChildren()) do
                        if v:IsA("ImageButton") then
                            if v.RaidsButton.Cost.Text == "CLAIM" then
                                local a_b = v.Name:split("SpeedRaidRewardTemplate")[2]
                                rf:InvokeServer("ClaimWeeklySpeedRaidReward",tonumber(a_b))
                                v.RaidsButton.Cost.Text = "CLAIMED"
                            end
                        end
                    end
                end
                if V["Auto Claim (Quest)"].Value then
                    for i,v in ipairs(lpg.MainGui.CenterUIFrame.QuestFrame.QuestFrames.DailyQuestFrame.DailyQuestScrollingFrame:GetChildren()) do
                        if v:IsA("ImageLabel") then
                            if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
                                rf:InvokeServer("CompleteDailyQuest",v.Name)
                                v.Complete.Visible = true
                            end
                        end
                    end
                    for i,v in ipairs(lpg.MainGui.CenterUIFrame.QuestFrame.QuestFrames.WeeklyQuestFrame.WeeklyQuestScrollingFrame:GetChildren()) do
                        if v:IsA("ImageLabel") then
                            if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
                                rf:InvokeServer("CompleteDailyQuest",v.Name)
                                v.Complete.Visible = true
                            end
                        end
                    end
                end
            end)
            task.wait()
        end
    end)

    task.spawn(function ()
        if (pid == 7338881230 or pid == 6938803436 or pid == 7274690025) or Gui.Unloaded then return end
        task.wait(2)
        local Q, R, E, CO = {}, {}, {}, {}

        local R1, R2
        local Table = {}
        local C1, C2, C3, C4 =
            sTd.StageClear.Value,
            sTd.BossRushClears.Value,
            sTd.WeeklyShadowRaidsCleared.Value,
            sTd.RaidClears.Value

            if lpg.BattleGui.CenterUIFrame.RaidDataFrame.Visible then
                R1, R2 =
                    C:Bar("res"),
                    lpg.UniversalGui.UniversalCenterUIFrame.RaidResultUI
            else
                R1, R2 =
                lpg.UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.RewardFrame.RewardGridFrame,
                lpg.UniversalGui.UniversalCenterUIFrame.ResultUI
            end

            for i,v in ipairs(sTd:GetChildren()) do
                if v.Name.find(v.Name, "RaidBeat") then
                    if not Table[v.Name] then
                        Table[v.Name] = {}
                    end
                    table.insert(Table[v.Name], v.Value)
                end
            end


            c8 = R1.ChildAdded:Connect(function(v)
                if not table.find(curname, v.Name) then
                    if v.Name == "RewardTemplate" then
                        if v.RewardImage.Image == "rbxassetid://13406949044" then
                            table.insert(Q, "`Character [Sakura]`")
                        elseif v.RewardImage.Image == "rbxassetid://12992685998" then
                            table.insert(Q, "`Character [Natsu]`")
                        elseif v.RewardImage.Image == "rbxassetid://7037255754" then
                            table.insert(Q, "`Character [Killua]`")

                        elseif v.RewardImage.Image == "rbxassetid://7053221313" then
                            table.insert(Q, "`Character [Asta]`")
                        elseif v.RewardImage.Image == "rbxassetid://16629613718" then
                            table.insert(Q, "`Character [Itadori]`")
                        elseif v.RewardImage.Image == "rbxassetid://12992687663" then
                            table.insert(Q, "`Character [Akaza]`")

                        elseif v.RewardImage.Image == "rbxassetid://13621197278" then
                            table.insert(Q, "`Character [Sasuke]`")
                        elseif v.RewardImage.Image == "rbxassetid://7057569994" then
                            table.insert(Q, "`Character [Gray]`")
                        elseif v.RewardImage.Image == "rbxassetid://16629618004" then
                            table.insert(Q, "`Character [Sukuna]`")

                        elseif v.RewardImage.Image == "rbxassetid://7132704621" then
                            table.insert(Q, "`Character [Rukai]`")
                        elseif v.RewardImage.Image == "rbxassetid://13621200238" then
                            table.insert(Q, "`Character [Shinra]`")
                        elseif v.RewardImage.Image == "rbxassetid://15699330111" then
                            table.insert(Q, "`Character [All Might]`")

                        elseif v.RewardImage.Image == "rbxassetid://16834106549" then
                            table.insert(Q, "`Character [Zoro]`")
                        elseif v.RewardImage.Image == "rbxassetid://13621194902" then
                            table.insert(Q, "`Character [Asuna]`")

                        elseif v.RewardImage.Image == "rbxassetid://7542006362" then
                            table.insert(Q, "`Character [Emiya Archer]`")
                        elseif v.RewardImage.Image == "rbxassetid://7785010433" then
                            table.insert(Q, "`Character [Kaneki]`")

                        elseif v.RewardImage.Image == "rbxassetid://8270023417" then
                            table.insert(Q, "`Character [Lancer]`")
                        elseif v.RewardImage.Image == "rbxassetid://9038000341" then
                            table.insert(Q, "`Character [Saber Alter]`")

                        elseif v.RewardImage.Image == "rbxassetid://9672496119" then
                            table.insert(Q, "`Character [Diablo]`")
                        elseif v.RewardImage.Image == "rbxassetid://13406949528" then
                            table.insert(Q, "`Character [Rimuru]`")

                        elseif v.RewardImage.Image == "rbxassetid://16834116921" then
                            table.insert(Q, "`Character [Power]`")
                        elseif v.RewardImage.Image == "rbxassetid://17096447919" then
                            table.insert(Q, "`Character [Yamato]`")
                        elseif v.RewardImage.Image == "rbxassetid://16620398317" then
                            table.insert(Q, "`Character [Sonic]`")
                        elseif v.RewardImage.Image == "rbxassetid://16745228465" then
                            table.insert(Q, "`Character [Rank ??? Hunter]`")

                        elseif v.RewardImage.Image == "rbxassetid://16832873774" then
                            table.insert(Q, "`Character [Broly]`")
                        elseif v.RewardImage.Image == "rbxassetid://7401067364" then
                            table.insert(Q, "`Character [Alice]`")
                        elseif v.RewardImage.Image == "rbxassetid://7386538151" then
                            table.insert(Q, "`Character [Gilgamesh]`")
                        elseif v.RewardImage.Image == "rbxassetid://7384650558" then
                            table.insert(Q, "`Character [Kokushibo]`")

                        elseif v.RewardImage.Image == "rbxassetid://17524638400" then
                            table.insert(Q, "`Character [RinOkumura]`")
                        elseif v.RewardImage.Image == "rbxassetid://17257820522" then
                            table.insert(Q, "`Character [Mob]`")
                        elseif v.RewardImage.Image == "rbxassetid://16913579571" then
                            table.insert(Q, "`Character [Mash]`")
                        elseif v.RewardImage.Image == "rbxassetid://16833352600" then
                            table.insert(Q, "`Character [Mihawk]`")
                        elseif v.RewardImage.Image == "rbxassetid://16629617713" then
                            table.insert(Q, "`Character [SukunaShibuya]`")
                        elseif v.RewardImage.Image == "rbxassetid://14785556998" then
                            table.insert(Q, "`Character [Asta (Black Asta)]`")
                        elseif v.RewardImage.Image == "rbxassetid://13736210016" then
                            table.insert(Q, "`Character [Cosmic Garou]`")
                        elseif v.RewardImage.Image == "rbxassetid://14295913088" then
                            table.insert(Q, "`Character [Jotaro]`")
                        elseif v.RewardImage.Image == "rbxassetid://13294872244" then
                            table.insert(Q, "`Character [Mitsuri]`")
                        elseif v.RewardImage.Image == "rbxassetid://12548891547" then
                            table.insert(Q, "`Character [Tanjiro (Sun God)]`")
                        elseif v.RewardImage.Image == "rbxassetid://12275838772" then
                            table.insert(Q, "`Character [Dio]`")
                        elseif v.RewardImage.Image == "rbxassetid://8827725106" then
                            table.insert(Q, "`Character [RimuruDemonLord]`")
                        elseif v.RewardImage.Image == "rbxassetid://12087483204" then
                            table.insert(Q, "`Character [Ichigo (Fullbring Bankai)]`")
                        elseif v.RewardImage.Image == "rbxassetid://16833324796" then
                            table.insert(Q, "`Character [Goku UI]`")
                        elseif v.RewardImage.Image == "rbxassetid://16832872564" then
                            table.insert(Q, "`Character [Denji]`")
                        elseif v.RewardImage.Image == "rbxassetid://10835672920" then
                            table.insert(Q, "`Character [Naruto (Kurama Mode)]`")
                        elseif v.RewardImage.Image == "rbxassetid://10688580603" then
                            table.insert(Q, "`Character [Obito]`")
                        elseif v.RewardImage.Image == "rbxassetid://16834112408" then
                            table.insert(Q, "`Character [Shanks]`")
                        elseif v.RewardImage.Image == "rbxassetid://10182602891" then
                            table.insert(Q, "`Character [Uzui]`")
                        elseif v.RewardImage.Image == "rbxassetid://8466801602" then
                            table.insert(Q, "`Character [Yoriichi]`")
                        elseif v.RewardImage.Image == "rbxassetid://16802362266" then
                            table.insert(Q, "`Character [Ice Queen Esdeath]`")
                        elseif v.RewardImage.Image == "rbxassetid://16629613889" then
                            table.insert(Q, "`Character [Infinity Gojo]`")
                        elseif v.RewardImage.Image == "rbxassetid://16832874929" then
                            table.insert(Q, "`Character [Attack Titan]`")
                        elseif v.RewardImage.Image == "rbxassetid://9432939692" then
                            table.insert(Q, "`Character [Accelerator]`")
                        elseif v.RewardImage.Image == "rbxassetid://17076062883" then
                            table.insert(Q, "`Character [Gear 5 Luffy]`")
                        elseif v.RewardImage.Image == "rbxassetid://7210567835" then
                            table.insert(Q, "`Character [Rengoku]`")
                        elseif v.RewardImage.Image == "rbxassetid://13621198974" then
                            table.insert(Q, "`Character [Kirito]`")
                        elseif v.RewardImage.Image == "rbxassetid://16833356947" then
                            table.insert(Q, "`Character [Levi]`")
                        else
                            table.insert(Q, "`Character [Unknow]`")
                        end
                    else
                        if not v:FindFirstChild("Gradient") then
                            table.insert(Q, "`"..v.Name.." [Common]`")
                        elseif v:FindFirstChild("Gradient") then
                            if tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
                                table.insert(Q, "`"..v.Name.." [Uncommon]`")
                            elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
                                table.insert(Q, "`"..v.Name.." [Rare]`")
                            elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
                                table.insert(Q, "`"..v.Name.." [Epic]`")
                            elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
                                table.insert(Q, "`"..v.Name.." [Legendary]`")
                            elseif tostring(v.Gradient.Color) == "0 0.407843 0.0941176 0.0980392 0 0.510815 1 0 0.0156863 0 1 0.439216 0.0705882 0.0784314 0 " then
                                table.insert(Q, "`"..v.Name.." [Mythic]`")
                            elseif tostring(v.Gradient.Color) == "0 1 0.976471 0.258824 0 0.541523 1 0.494118 0.976471 0 1 0.333333 1 0.945098 0 " then
                                table.insert(Q, "`"..v.Name.." [Divine]`")
                            end
                        end
                    end
                else
                    if tonumber(v.LevelReq.Text) then
                        if not R[v.Name] then
                            R[v.Name] = {}
                        end
                        table.insert(R[v.Name], tonumber(v.LevelReq.Text))
                    end
                end
            end)

            c9 = R2:GetPropertyChangedSignal("Visible"):Connect(function ()
                pcall(function ()
                    task.wait(3.5)
                    if not V["Send Webhook"].Value or not string.find(V["Webhook URL"].Value,"https://discord.com/api/webhooks") then return end

                    for i,v in pairs(R) do
                        local name_count
                        local sum = 0
                        if #v >= 1 then
                            for x = 1, #v do
                                sum = sum + v[x]
                                name_count = "`"..i.." ["..sum.."]`"
                            end
                            table.insert(E, name_count)
                        else
                            table.insert(E, "`None     `")
                        end
                    end
                    if #Q == 0 then
                        table.insert(Q, "`None      `")
                    end

                    local TimeEnd = "Time: 00:00"
                    local DamageDeal = "Damage: "..C:Hex("number", lp.leaderstats.Damage.Value)
                    local Rank = "Unknown: F"
                    local ClearTime = "Unknown: 0"
                    local GameName = "Unknown: nil"
                    local GameStatus = " [End!]"

                    if R2 == lpg.UniversalGui.UniversalCenterUIFrame.ResultUI then
                        local RI = R2.Frame.ResultDiamond.ResultRank.Image
                        TimeEnd = R2.Frame.TimeText.Text

                        if RI == "rbxassetid://7443889715" then
                            Rank = "Rank: S+"
                        elseif RI == "rbxassetid://6715353612" then
                            Rank = "Rank: S"
                        elseif RI == "rbxassetid://6891959728" then
                            Rank = "Rank: A"
                        elseif RI == "rbxassetid://6891959611" then
                            Rank = "Rank: B"
                        elseif RI == "rbxassetid://6891959460" then
                            Rank = "Rank: C"
                        elseif RI == "rbxassetid://6782568839" then
                            Rank = "Rank: F"
                        else
                            Rank = "Rank: D"
                        end

                        if #R == 0 and #Q == 0 and Rank == "Rank: F" then
                            GameStatus = " [Defeat!]"
                            GameName = "Dimension: "..GameMap:split("Dimension")[1].."\nStage Clear: "..C:N1("stage")
                            ClearTime = "Dimension Clears: "..sTd.StageClear.Value
                        else
                            GameStatus = " [Victory!]"
                            local BT = lpg.BattleGui.CenterUIFrame

                            if GameMap == "Virtual Garden" then
                                TimeEnd = "Time: 08:00"
                                GameName = "GameMap: "..GameMap.."\nScore: "..BT.EnemiesDefeatedBack.EnemyDefeatedNumber.Text.."\nScore (Highest): "..sTd.TimeChallengeHighScore.Value
                                ClearTime = "Unknown: 0"
                            elseif GameMap == "Infinite Mode" then
                                GameName = "GameMap: "..GameMap.."\nWave Reach: "..BT.WaveClearClearText.Text.."\nWave Clear: "..tonumber(BT.WaveClearClearText.Text - 1).."\nWave Clear (Highest): "..sTd.InfiniteRecord.Value
                                ClearTime = "Dimension Clears: "..sTd.StageClear.Value
                            elseif sTd.StageClear.Value ~= C1 then
                                GameName = "Dimension: "..GameMap:split("Dimension")[1].."\nStage Clear: "..C:N1("stage")
                                ClearTime = "Dimension Clears: "..sTd.StageClear.Value
                            elseif sTd.BossRushClears.Value ~= C2 then
                                TimeEnd = R2.Frame.TimeText.Text.."\nBest Record: "..sTd.BossRushRecordString.Value
                                GameName = "GameMap: "..GameMap.."\nStage Clear: 3"
                                ClearTime = "BossRush Clears: "..sTd.BossRushClears.Value
                            elseif sTd.WeeklyShadowRaidsCleared.Value ~= C3 then
                                GameName = "SpeedRaid: "..GameMap:split("Raid")[1].."\nStage Clear: "..C:N1("stage")
                                ClearTime = "SpeedRaid Clears: "..sTd.WeeklyShadowRaidsCleared.Value
                            end
                        end
                    else
                        TimeEnd = "Time: 08:00"
                        Rank = "Rank:"..lpg.UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame.RankText.Text:split(":")[2]
                        GameName = "Raid: "..GameMap:split("Raid")[1].."\nStage Clear: 0"
                        ClearTime = "Raid Clears: Unknown"

                        if sTd.RaidClears.Value ~= C4 then
                            for i,v in pairs(Table) do
                                if sTd:FindFirstChild(i).Value ~= v[1] then
                                    GameName = "Raid: "..GameMap:split("Raid")[1].."\nStage Clear: 0"
                                    ClearTime = "Raid Clears: "..sTd.RaidClears.Value.."\n"..i..": "..(v[1] + 1)
                                end
                            end
                        end
                    end

                    local content = nil
                    if V["Webhook Ping (Activate)"].Value then
                        for i, v in pairs(V["Webhook Ping (Type)"].Value) do
                            if v == true then
                                for x = 1, #Q do
                                    if string.find(Q[x], i) then
                                        table.insert(CO, Q[x])
                                    end
                                end
                            end
                        end
                        if #CO > 0 then
                            content = "<@"..tostring(V["Webhook Ping (Id)"].Value)..">".."\n`You received:` "..table.concat(CO, "\n`You received:` ")
                        end
                    end
                    local Data = h:JSONEncode({
                        ["username"] = "Anime Dimensions Simulator : Notification",
                        ["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                        content = content,
                        embeds = {{
                          ["title"] = nil,
                          ["color"] = tonumber(C:Hex("color", V["Webhook Color"].Value)),
                          ["description"] = nil,
                          ["footer"] = {
                            ["text"] = "Time: "..os.date("%X").." ["..os.date("%x").."]".."\nCredit: YT » @crazyday3693",
                            ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
                          },
                          ["thumbnail"] = {
                            ["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
                          },
                          ["fields"] = {
                            {
                                ["name"] = "**Item Rewards**",
                                ["value"] = "\n`[+]` "..table.concat(Q, "\n`[+]` "),
                                ["inline"] = true
                            },
                            {
                                ["name"] = "**Currency Rewards**",
                                ["value"] = "\n`[+]` "..table.concat(E, "\n`[+]` "),
                                ["inline"] = true
                            },
                            {
                                ["name"] = "**Match Information"..GameStatus.."**",
                                ["value"] = "```\n"..GameName.."\n"..Rank.."\n"..DamageDeal.."\n"..TimeEnd.."```",
                                ["inline"] = false
                            },
                            {
                                ["name"] = "**Player Information**".." __**|| ["..lp.Name.."] ||**__",
                                ["value"] = "```\nLevel: "..lvl.Value.." ["..C:CUR("Exp").."]\nCardsOwned: "..sTd.CardsOwned.Value.."/"..sTd.MaxCardsOwned.Value
                                .."\n"..ClearTime.."\nCurrency:\n ∘ Gold: "..C:CUR("Gold").."\n ∘ Gem: "..C:CUR("Gem").."\n ∘ TraitToken: "..C:CUR("TraitToken")
                                .."\n ∘ RaidToken: "..C:CUR("RaidToken").."\n ∘ SpeedRaidToken: "..C:CUR("ShadowCoin").."\n ∘ BossRushToken: "..C:CUR("BossRush").."```",
                                ["inline"] = false
                            }
                        },
                    }}
                    })
                    g["response"]({Url = V["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
                end)
            end)
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025) or Gui.Unloaded then break end
            if V["Auto Equip"].Value and C:Empety() == true then return end
            if C:AutoFarm() and not g["equiping"] then
                if g["raid"] and lvl.Value >= 15 then
                    Gui:Notify({
                        Title = "Successfully room created",
                        Content = "MapName: "..V["Current Raid"].Value.."\nDifficulty: Easy".."\nFriendsOnly: "..tostring(V["Friends Only"].Value).."\nHardcore: false",
                        SubContent = "Starting in 5 seconds.",
                        Duration = 5
                    })
                    task.wait(5)
                    re:FireServer("RemovePlayerFromParty")
                    rf:InvokeServer("CreateRoom",{
                        ["Difficulty"] = "Easy",
                        ["FriendsOnly"] = V["Friends Only"].Value,
                        ["MapName"] = V["Current Raid"].Value,
                        ["Hardcore"] = false
                    })
                    rf:InvokeServer("TeleportPlayers")
                    break
                else
                    if V["Auto Join (Speed Raid)"].Value and lvl.Value >= 25 and #C:Hex("character") >= 1 and lpg.MainGui.CenterUIFrame.PlayButtonsFrame.Frame.SpeedRaidBanner.SpeedRaidBannerOpenText.Text == "Ready to enter" then
                        Gui:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: ShadowRaid".."\nCharacter: "..C:Hex("character")[1],
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })

                        g["speedraid"] = true
                        task.wait(5)
                        rf:InvokeServer("TeleportToShadowRaid", C:Hex("character")[1])
                        break
                    end
                    if V["Auto Join (Raid Challenge)"].Value and lvl.Value >= 30 and lpg.MainGui.CenterUIFrame.DailyRaidChallengeFrame.RaidChallengeRewardAvailable.Text == "Reward Available" then
                        Gui:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: RaidChallenge".."\nAward Status: Reward Available",
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })

                        task.wait(5)
                        rf:InvokeServer("TeleportToRaidChallenge")
                        break
                    end
                    if V["Auto Join (Infinite Mode)"].Value and lvl.Value >= 20 and not sTd.InfiniteModeReward.Value then
                        Gui:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: Infinite Mode".."\nDifficulty: Infinite\nFriendsOnly: "..tostring(V["Friends Only"].Value).."\nHardcore: false",
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })

                        task.wait(5)
                        re:FireServer("RemovePlayerFromParty")
                        rf:InvokeServer("CreateRoom",{
                            ["Difficulty"] = "Infinite",
                            ["FriendsOnly"] = V["Friends Only"].Value,
                            ["MapName"] = "Infinite Mode",
                            ["Hardcore"] = false
                        })
                        rf:InvokeServer("TeleportPlayers")
                        break
                    end
                    if V["Auto Join (Boss Rush)"].Value and lvl.Value >= 15 and ((V["Boss Rush Type"].Value == "Free" and sTd.BossRushFreeEntry.Value >= 1) or (V["Boss Rush Type"].Value ~= "Free" and lpg.MainGui.CenterUIFrame.BossRushFrame.BossRushEntryPassCount.Text >= "1")) then
                        local text
                        if V["Boss Rush Type"].Value == "Free" then
                            text = "Free Entry Left: "..tostring(sTd.BossRushFreeEntry.Value)
                        else
                            text = "Ticket Entry Left: "..lpg.MainGui.CenterUIFrame.BossRushFrame.BossRushEntryPassCount.Text
                        end
                        Gui:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: BossRush".."\n"..text,
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })

                        task.wait(5)
                        rf:InvokeServer("TeleportToBossRush")
                        break
                    end

                    if (V["Auto Join (Current Dimension)"].Value or V["Auto Join (Highnest)"].Value) then
                        Gui:Notify({
                            Title = "Successfully room created",
                            Content = "MapName: "..V["Current Dimension"].Value.."\nDifficulty: "..V["Current Difficulty"].Value.."\nFriendsOnly: "..tostring(V["Friends Only"].Value).."\nHardcore: "..tostring(V["Hard core"].Value),
                            SubContent = "Starting in 5 seconds.",
                            Duration = 5
                        })

                        task.wait(5)
                        re:FireServer("RemovePlayerFromParty")
                        rf:InvokeServer("CreateRoom",{
                            ["Difficulty"] = V["Current Difficulty"].Value,
                            ["FriendsOnly"] = V["Friends Only"].Value,
                            ["MapName"] = V["Current Dimension"].Value,
                            ["Hardcore"] = V["Hard core"].Value
                        })
                        rf:InvokeServer("TeleportPlayers")
                        break
                    end
                end
            end
            task.wait()
        end
    end)

    task.spawn(function ()
        while true do
            if (pid ~= 7338881230 and pid ~= 6938803436 and pid ~= 7274690025) or Gui.Unloaded then break end
            pcall(function ()
                if V["Auto Buy"].Value then
                    if tonumber(lpg.MainGui.CenterUIFrame.BossRushFrame.BossRushEntryPassCount.Text) < V["Limit Ticket"].Value then
                        if V["Boss Rush Type"].Value == "Gem" and C:GS(C:CUR("Gem")) >= "250" then
                            rf:InvokeServer("BuyBossRushShopItem", "Boss Rush Ticket (Gem)")
                        elseif V["Boss Rush Type"].Value == "Raid" and C:GS(C:CUR("RaidToken")) >= "150" then
                            rf:InvokeServer("BuyBossRushShopItem", "Boss Rush Ticket (Raid)")
                        end
                    end
                end
            end)
            task.wait()
        end
    end)
