repeat wait() until game:IsLoaded()
repeat wait()until game:GetService("Players").LocalPlayer ~= nil
if not game:GetService("Players").LocalPlayer.Character then game:GetService("Players").LocalPlayer.CharacterAdded:Wait()wait()end
game.Players.LocalPlayer:WaitForChild("PlayerGui")
repeat wait() until game:FindFirstChild("CoreGui"):FindFirstChild("PlayerList")
if game.CoreGui:FindFirstChild("CrazyDay") == nil then
    repeat 
        if game.CoreGui:FindFirstChild("CrazyDay") == nil then
coroutine.resume(coroutine.create(function()
    pcall(function ()
local Username = game.Players.LocalPlayer.Name
local UserId 

pcall(function() 
   UserId = game.Players:GetUserIdFromNameAsync(Username)
end)

if not isfolder("CrazyDay") then 
    repeat
        makefolder("CrazyDay")
        task.wait()
    until isfolder("CrazyDay")
    warn("Finished")
    end
    if isfolder("CrazyDay") and not isfolder("CrazyDay/Anime Dimension") then
            repeat
            makefolder("CrazyDay/Anime Dimension")
            task.wait()
        until isfolder("CrazyDay/Anime Dimension")
        warn("Finished")
    end

for i,v in next, game.CoreGui.PlayerList.PlayerListMaster.OffsetFrame.PlayerScrollList.SizeOffsetFrame.ScrollingFrameContainer.ScrollingFrameClippingFrame.ScollingFrame.OffsetUndoFrame:GetChildren() do
    if v.Name == "p_"..UserId then
    for _,k in next,v:GetDescendants() do
    if k.Name == "PlayerName" and k.ClassName == "TextLabel" then
    k.Text = "Protech_By_CrazyDay"
    end
    end
end
end
end)
end))


function ADDKUY()
    for i,v in pairs(game.Workspace.Folders.Monsters:GetDescendants()) do
        if v.Name == "HumanoidRootPart" then
            local a = v:Clone()
            a.CFrame = v.CFrame * CFrame.new(0,11.5,0)
            a.Size = Vector3.new(15,15,15)
            a.Anchored = true
            a.Transparency = 1
            a.CanCollide = false
            a.Name = "Head_Kuy"
            a.Parent = game.Workspace
        end
    end
end

function UnequipCard()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetDescendants()) do
        if v.Name == "CardImage" then
        if tostring(v.BackgroundColor3) == tostring("1, 0.87451, 0.654902") then
            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("UnequipCard",v.Parent.Name)
            getgenv().CanCountFornow = true
            end
        end
    end       
end  


function EquipBestCard()
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
        if v:IsA("ImageButton") and v.LayoutOrder <= 3 then
            task.wait()
            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("EquipCard",v.Name)
        end
    end     
end

local function getClosestMob()
    local dist, thing = math.huge
        for i, v in next, Workspace.Folders.Monsters:GetChildren() do
            if v:FindFirstChildOfClass("BillboardGui") then
                local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                if mag < dist then
                    dist = mag 
                    thing = v
                end
            end
        end
    return thing
end

local function getClosestBoss()
    local dist, thing = math.huge
        for i, v in next, Workspace.Folders.Monsters:GetChildren() do
            if v:FindFirstChildOfClass("BillboardGui") and v.EnemyHealthBarGui.Enabled == false then
                local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                if mag < dist then
                    dist = mag 
                    thing = v
                end
            end
        end
    return thing
end

game:WaitForChild('Workspace'):WaitForChild('GameMap')
for i,v in next,game.Workspace.GameMap:GetDescendants() do
    if v.Name:match('Barrie') then
        v:Destroy()
    end
end


    if not isfolder('CrazyDay') then
        repeat wait()
        makefolder('CrazyDay')
        until isfolder('CrazyDay')
    end
    if isfolder('CrazyDay') then
        if not isfolder('CrazyDay/'..game.Players.LocalPlayer.Name.."_Anime_Dimension") then
            repeat wait()
            makefolder('/CrazyDay/'..game.Players.LocalPlayer.Name.."_Anime_Dimension")
            until isfolder('/CrazyDay/'..game.Players.LocalPlayer.Name.."_Anime_Dimension")
        end
    end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()


local Window = Fluent:CreateWindow({
    Title = "Anime Dimensions Simulator",
    SubTitle = "Last Update May/05/2024 [CrazyDay:edek#1004]",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.RightShift 
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    Skill = Window:AddTab({ Title = "Skill", Icon = "" }),
    Webhook = Window:AddTab({ Title = "Webhook", Icon = "" }),
    Other = Window:AddTab({ Title = "Other", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "" })
}

local Options = Fluent.Options
local method
local item_name = {"None"}

do

    
    Tabs.Main:AddDropdown("SelectDimension", {
        Title = "SELECT DIMENSIONS",
        Values = {"Titan Dimension","Demon Dimension","Curse Dimension","Villain Dimension","Sword Dimension",
        "Ghoul Dimension","Fate Dimension","Slime Dimension","Devil Dimension","Pirate Dimension",
        "Alien Dimension","Level Dimension"},
        Multi = false,
        Default = 1,
    })

    Tabs.Main:AddDropdown("SelectDifficulty", {
        Title = "SELECT DIFFICULTY",
        Values = {"Easy","Hard","Nightmare"},
        Multi = false,
        Default = 1,
    })

    local PlayChang = Tabs.Main:AddDropdown("PlayMode", {
        Title = "SELECT MODE",
        Values = {"Normal Mode","Safe Mode","Bring Mode"},
        Multi = false,
        Default = 1,
    })

    Tabs.Main:AddDropdown("METHOD_FARM", {
        Title = "SELECT METHOD",
        Values = {"Behind","Over","Front"},
        Multi = false,
        Default = 2,
    })

    Tabs.Main:AddSlider("DistanceForMon", 
    {
        Title = "DISTANCE",
        Description = nil,
        Default = 6.45,
        Min = 0,
        Max = 10,
        Rounding = 1,
        })
    
function DestroyKuy()
    for i,v in next,game.Workspace:GetChildren() do
        if v.Name == "Head_Kuy" then
            v:Destroy()
        end
       end 
    end

    PlayChang:OnChanged(function(Value)
        if Value == "Bring Mode" then
            ADDKUY()
        elseif Value ~= "Bring Mode" then
            DestroyKuy()
        elseif Value ~= "Safe Mode" then
            getgenv().SAFE_MODE = false
        end
    end)


    game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame:GetPropertyChangedSignal("Visible"):Connect(function ()
        if game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible == true then
            wait(.5)
        DestroyKuy()
        end
    end)

    Tabs.Main:AddSlider("Health", 
    {
        Title = "HEALTH % (Only Safe Mode) ",
        Description = "Calculated as the max percentage of health",
        Default = 60,
        Min = 10,
        Max = 100,
        Rounding = 0,
        })

    Tabs.Main:AddToggle("Auto_Set_Distance", {Title = "AUTO SET DISTANCE", Default = false })
    Tabs.Main:AddToggle("AUTO_LEVEL_SELECT", {Title = "AUTO LEVEL MAP SELECT", Default = false })
    Tabs.Main:AddToggle("AutoFarmAndStart", {Title = "AUTO START // FARM", Default = false })
    Tabs.Main:AddToggle("Dodge_Skill", {Title = "DODGE SKILL", Default = false })
    Tabs.Main:AddToggle("FriendOnly", {Title = "FRIENDS ONLY", Default = false })
    Tabs.Main:AddToggle("HardCore", {Title = "HARD CORE", Default = false })
    Tabs.Main:AddToggle("AutoRetry", {Title = "AUTO RETRY", Default = false })



    coroutine.resume(coroutine.create(function()
        while task.wait() do pcall(function ()  
        if Options.AUTO_LEVEL_SELECT.Value then
                        Lvl = game.Players.LocalPlayer.leaderstats.Level.Value
                        if Lvl > 0 and Lvl < 6 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Titan Dimension"
                        elseif Lvl > 5 and Lvl < 11 then
                            Options.SelectDifficulty.Value = "Hard"
                            Options.SelectDimension.Value = "Titan Dimension"
                        elseif Lvl > 10 and Lvl < 16 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Titan Dimension"
                        elseif Lvl > 15 and Lvl < 21 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Demon Dimension"
                        elseif Lvl > 20 and Lvl < 26 then
                            Options.SelectDifficulty.Value = "Hard"
                            Options.SelectDimension.Value = "Demon Dimension"
                        elseif Lvl > 25 and Lvl < 31 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Demon Dimension"
                        elseif Lvl > 30 and Lvl < 36 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Curse Dimension"
                        elseif Lvl > 35 and Lvl < 41 then
                            Options.SelectDifficulty.Value = "Hard"
                            Options.SelectDimension.Value = "Curse Dimension"
                        elseif Lvl > 40 and Lvl < 46 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Curse Dimension"
                        elseif Lvl > 45 and Lvl < 51 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Villain Dimension"
                        elseif Lvl > 50 and Lvl < 56 then
                            Options.SelectDifficulty.Value = "Hard"
                            Options.SelectDimension.Value = "Villain Dimension"
                        elseif Lvl > 55 and Lvl < 61 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Villain Dimension"
                        elseif Lvl > 60 and Lvl < 68 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Sword Dimension"
                        elseif Lvl > 67 and Lvl < 76 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Sword Dimension"
                        elseif Lvl > 75 and Lvl < 83 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Ghoul Dimension"
                        elseif Lvl > 82 and Lvl < 91 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Ghoul Dimension"
                        elseif Lvl > 90 and Lvl < 98 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Fate Dimension"
                        elseif Lvl > 97 and Lvl < 106 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Fate Dimension"
                        elseif Lvl > 105 and Lvl < 113 then
                            Options.SelectDifficulty.Value = "Easy"
                            Options.SelectDimension.Value = "Slime Dimension"
                        elseif Lvl > 112 and Lvl < 121 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Slime Dimension"
                        elseif Lvl > 120 and Lvl < 131 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Devil Dimension"
                        elseif Lvl > 130 and Lvl < 141 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Pirate Dimension"
                        elseif Lvl > 140 and Lvl < 151 then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Alien Dimension"
                        elseif Lvl > 150  then
                            Options.SelectDifficulty.Value = "Nightmare"
                            Options.SelectDimension.Value = "Level Dimension"
                        end
                    end
                end)
                if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
                    break
                   end
            end
        end))

    Tabs.Main:AddSection("Raid")

    Tabs.Main:AddDropdown("SelectRaid", {
        Title = "SELECT RAID",
        Values = {"Blue Devil Raid","Psycho Student Raid","Buff Boy Raid","Warlord Raid","Gear 5 Fluffy Raid","Tengoku Raid","Hirito Raid","Titan Raid"},
        Multi = false,
        Default = 1,
    })
    Tabs.Main:AddDropdown("Select_Action_Raid", {
        Title = "SELECT ACTION",
        Values = {"STOP RETRY","LEAVE"},
        Multi = false,
        Default = 1,
    })

    Tabs.Main:AddToggle("AutoRaid", {Title = "AUTO RAID", Default = false })

    Tabs.Main:AddToggle("AutoLeaveIfRaid", {Title = "AUTO STOP RETRY // LEAVE IF RAID OPENED", Default = false })

    Tabs.Misc:AddToggle("Auto_FreeBossRush", {Title = "AUTO FREE BOSS RUSH", Default = false })
    Tabs.Misc:AddToggle("Auto_RaidChallange", {Title = "AUTO RAID CHALLENGE", Default = false })
    Tabs.Misc:AddToggle("Auto_SpeedRaid", {Title = "AUTO SPEED RAID", Default = false })

    local CharacterConfig = {}
    local CharacterSSSS = {}


    Tabs.Misc:AddToggle("Auto_EquipCharacter", {Title = "AUTO EQUIP CHARACTER", Default = false })

    Tabs.Misc:AddButton({
        Title = "SAVE CHARACTER",
        Description = nil,
        Callback = function()
            CharacterConfig["Character1"] = game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value
            CharacterConfig["Character2"] = game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName1.Value
            CharacterConfig["Character3"] = game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName2.Value
            Fluent:Notify({Title = "Save Success",Content = "Character ",SubContent = tostring(game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value.."\n"..game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName1.Value.."\n"
            ..game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName2.Value), Duration = 5.5})
            writefile("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name).."/Character.lua", game:GetService("HttpService"):JSONEncode(CharacterConfig))
        end
    })

    coroutine.resume(coroutine.create(function()
                pcall(function()
                    repeat wait() until Options.Auto_EquipCharacter.Value
                    if Options.Auto_EquipCharacter.Value and game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
                        repeat wait()
                            local File = readfile("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name).."/Character.lua")
                            getgenv().Character = game:GetService("HttpService"):JSONDecode(File)
                            local char = game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"]
                                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("EquipCharacter",tostring(getgenv().Character['Character1']))
                                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("EquipCharacterAssist",tostring(getgenv().Character['Character2']),1)
                                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("EquipCharacterAssist",tostring(getgenv().Character['Character3']),2)
                            until char.CharacterName.Value == getgenv().Character['Character1'] and char.AssistCharacterName1.Value == getgenv().Character['Character2'] 
                            and char.AssistCharacterName2.Value == getgenv().Character['Character3'] or not Options.Auto_EquipCharacter.Value
                            Fluent:Notify({Title = "Character Equip Success",Content = tostring(game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value.."\n"..game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName1.Value.."\n"
                            ..game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName2.Value),SubContent = nil, Duration = 5.5})
            end
        end)
    end))

    Tabs.Misc:AddSection("Card")

    local CardSelect = Tabs.Misc:AddDropdown("Card", {
        Title = "SELECT RARITY",
        Values = {"Common","Uncommon","Rare","Epic","Legendary","Mythic"},
        Multi = true,
        Default = {nil},
    })

    Tabs.Misc:AddDropdown("Select_Action_MaxCard", {
        Title = "SELECT ACTION",
        Values = {"STOP RETRY","LEAVE"},
        Multi = false,
        Default = 1,
    })
    local SELL = Tabs.Misc:AddToggle("Auto_SellCard", {Title = "SELL SELECT CARDS", Default = false })   
    Tabs.Misc:AddToggle("STOP_LEAVE_MAXCARD", {Title = "STOP RETRY // LEAVE IF MAX CARDS", Default = false }) 
    local CardCheckOwner = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame
    coroutine.resume(coroutine.create(function()
        while wait() do pcall(function ()  
            if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 and Options.STOP_LEAVE_MAXCARD.Value then
                if tonumber(CardCheckOwner.CardsOwned.Text) >= tonumber(CardCheckOwner.MaxCardsOwned.Text) and Options.Select_Action_MaxCard.Value == "STOP RETRY" then
                    getgenv().StopReplay = true
                elseif tonumber(CardCheckOwner.CardsOwned.Text) >= tonumber(CardCheckOwner.MaxCardsOwned.Text) and Options.Select_Action_MaxCard.Value == "LEAVE" then
                    game:GetService("TeleportService"):Teleport(6938803436)
                end
            end
        end)
    end
end))



    function SellCard()
        if Options.Auto_SellCard.Value then
        local J = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory
        local K = J.Frame.CardInventoryFrame.CardInventoryScrollingFrame
        for M, N in pairs(K:GetChildren()) do
            if N:IsA("ImageButton") then
                for O, P in next, getconnections(N.CardClick.MouseButton1Down) do
                    P:Fire()
                    local Q = J.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text
                        if getgenv().Common and Q == "Common" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        if getgenv().Uncommon and Q == "Uncommon" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        if getgenv().Rare and Q == "Rare" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        if getgenv().Epic and Q == "Epic" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        if getgenv().Legendary and Q == "Legendary" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        if getgenv().Mythic and Q == "Mythic" then
                            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",N.Name)
                        end
                        end
                end
            end
        end 
    end


    SELL:OnChanged(function ()
        if Options.Auto_SellCard.Value and game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
            SellCard()
        end
    end)

    CardSelect:OnChanged(function(Value)
        local Values = {}
        for Value, State in next, Value do
            table.insert(Values, Value)
        end
        if table.find(Values,"Common") and not getgenv().Common then
            getgenv().Common = true
            SellCard()
        end
        if table.find(Values,"Uncommon") and not getgenv().Uncommon then
            getgenv().Uncommon = true
            SellCard()
        end
        if table.find(Values,"Rare") and not getgenv().Rare then
            getgenv().Rare = true
            SellCard()
        end
        if table.find(Values,"Epic") and not getgenv().Epic then
            getgenv().Epic = true
            SellCard()
        end
        if table.find(Values,"Legendary") and not getgenv().Legendary then
            getgenv().Legendary = true
            SellCard()
        end
        if table.find(Values,"Mythic") and not getgenv().Mythic then
            getgenv().Mythic = true
            SellCard()
        end

        if not table.find(Values,"Common") and getgenv().Common then
            getgenv().Common = false
        end
        if not table.find(Values,"Uncommon") and getgenv().Uncommon then
            getgenv().Uncommon = false
        end
        if not table.find(Values,"Rare") and getgenv().Rare then
            getgenv().Rare = false
        end
        if not table.find(Values,"Epic") and getgenv().Epic then
            getgenv().Epic = false
        end
        if not table.find(Values,"Legendary") and getgenv().Legendary then
            getgenv().Legendary = false
        end
        if not table.find(Values,"Mythic") and getgenv().Mythic then
            getgenv().Mythic = false
        end

    end)

    local firesignal = function(signal, arg2)
        if getconnections(signal) then
            firesignal(signal, arg2)
        end
    end
    function CloseCard()
        for i,v in next,game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay:GetChildren() do
            if v:IsA("ImageButton") and v.Name == "CardInventoryOverlayClose" then
                return v
          end
       end
    end
    function UpgradeEquipCard()
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetDescendants()) do
            if v.Name == "CardImage" then 
                if tostring(v.BackgroundColor3) == tostring("1, 0.87451, 0.654902")then
         game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("UpgradeCard",v.Parent.Name)
            end
        end
        end     
    end

    function Slot1() for i,v in next,game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay:GetChildren() do if v.Name == "Slot1" and tostring(v.ItemImage.Image) == "" then return true  end end end
    function Slot2() for i,v in next,game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay:GetChildren() do if v.Name == "Slot2" and tostring(v.ItemImage.Image) == "" then return true  end end end
    function Slot3() for i,v in next,game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay:GetChildren() do if v.Name == "Slot3" and tostring(v.ItemImage.Image) == "" then return true  end end end
    

    local CardEqip = Tabs.Misc:AddToggle("Auto_EquipBestCard", {Title = "AUTO EQUIP BEST CARDS", Default = false })
    local CardUpgard = Tabs.Misc:AddToggle("Auto_Upgard", {Title = "AUTO UPGARD EQUIP CARDS", Default = false })

local LOL = {}
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
    if not v.Name:lower():match("cardinventory") and v.ClassName == "ImageButton" then
        table.insert(LOL,v.Name)
    end
end

    CardEqip:OnChanged(function()
        if Options.Auto_EquipBestCard.Value and game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
        getgenv().WorkingForDoing = true
        UnequipCard()
        repeat task.wait()
        EquipBestCard()
        if #LOL >= 3 and getgenv().CanCountFornow and not Slot1() and not Slot2() and not Slot3() then
            getgenv().WorkingForDoing = false
        elseif #LOL < 3 and getgenv().CanCountFornow and not Slot1() or not Slot2() or not Slot3() then
            getgenv().WorkingForDoing = false
        end
        until not Options.Auto_EquipBestCard.Value
    end
end)

CardUpgard:OnChanged(function()
    if Options.Auto_Upgard.Value and game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
    repeat task.wait()
        firesignal(CloseCard().MouseButton1Click,game.Players.LocalPlayer)
        UpgradeEquipCard()
    until not Options.Auto_Upgard.Value
end
end)

    local AssistSelect = Tabs.Skill:AddDropdown("SelectAssist", {
        Title = "SELECT ASSIST",
        Values = {"Assist 1","Assist 2","Fruit 1","Fruit 2"},
        Multi = true,
        Default = {nil},
    })

    AssistSelect:OnChanged(function(Value)
        local Values = {}
        for Value, State in next, Value do
            table.insert(Values, Value)
        end
        if table.find(Values,"Assist 1") and not getgenv().Assist_1 then
            getgenv().Assist_1 = true
        end
        if table.find(Values,"Assist 2") and not getgenv().Assist_2 then
            getgenv().Assist_2 = true
        end
        if table.find(Values,"Fruit 1") and not getgenv().Fruit_1 then
            getgenv().Fruit_1 = true
        end
        if table.find(Values,"Fruit 2") and not getgenv().Fruit_2 then
            getgenv().Fruit_2 = true
        end

        if not table.find(Values,"Assist 1") and getgenv().Assist_1 then
            getgenv().Assist_1 = false
        end
        if not table.find(Values,"Assist 2") and getgenv().Assist_2 then
            getgenv().Assist_2 = false
        end
        if not table.find(Values,"Fruit 1") and getgenv().Fruit_1 then
            getgenv().Fruit_1 = false
        end
        if not table.find(Values,"Fruit 1") and getgenv().Fruit_2 then
            getgenv().Fruit_2 = false
        end

    end)

    
    Tabs.Skill:AddDropdown("Attack_Method", {
        Title = "SELECT ATTACK METHOD",
        Values = {'Remote','Click'},
        Multi = false,
        Default = 1,
    })


    Tabs.Skill:AddDropdown("First_Skill", {
        Title = "SKILL FIRST",
        Values = {"1","2","3","4","5"},
        Multi = false,
        Default = 1,
    })

    Tabs.Skill:AddDropdown("Second_Skill", {
        Title = "SKILL SECOND",
        Values = {"1","2","3","4","5"},
        Multi = false,
        Default = 2,
    })

    Tabs.Skill:AddDropdown("Third_Skill", {
        Title = "SKILL THIRD",
        Values = {"1","2","3","4","5"},
        Multi = false,
        Default = 3,
    })

    Tabs.Skill:AddDropdown("Fourth_Skill", {
        Title = "SKILL FOURTH",
        Values = {"1","2","3","4","5"},
        Multi = false,
        Default = 4,
    })

    Tabs.Skill:AddDropdown("Fifth_Skill", {
        Title = "SKILL FIFTH",
        Values = {"1","2","3","4","5"},
        Multi = false,
        Default = 5,
    })

    Tabs.Skill:AddSlider("DistanceToSkill", 
    {
        Title = "DISTANCE TO SKILL",
        Description = "",
        Default = 30,
        Min = 10,
        Max = 100,
        Rounding = 0,
        })

    Tabs.Skill:AddToggle("Auto_Skill_Assist", {Title = "AUTO SKILL // ASSIST", Default = false })

    


    Tabs.Webhook:AddInput("Webhook", {
        Title = "WEBHOOK",
        Description = "Link.",
        Default = nil,
        Placeholder = "",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
    })

    Tabs.Webhook:AddToggle("AutoWebhook_Dungeon", {Title = "DUNGEON REWARD", Default = false })
    Tabs.Webhook:AddToggle("AutoWebhook_Raid", {Title = "RAID REWARD (ONLY RAID / RAID CHALLENGE)", Default = false })
    local Dash = Tabs.Other:AddToggle("DashNoCd", {Title = "DASH NO CD", Default = false })
    Dash:OnChanged(function()
        if Options.DashNoCd.Value then
            game.ReplicatedStorage[game.Players.LocalPlayer.Name .. "StatDisplay"].No_DashCooldown.Value = true
        else
            game.ReplicatedStorage[game.Players.LocalPlayer.Name .. "StatDisplay"].No_DashCooldown.Value = false
        end
    end)


    local white = Tabs.Other:AddToggle("WhiteScreen", {Title = "AUTO WHITE SCREEN", Default = false })
    Tabs.Other:AddToggle("AutoRejoinIfError", {Title = "AUTO REJOIN IF ERROR", Default = false })
    Tabs.Other:AddToggle("AutoCloseAfterExecute", {Title = "CLOSE GUI AFTER EXECUTE", Default = false })
    local excute = Tabs.Other:AddToggle("AutoExecuteScript", {Title = "AUTO EXECUTE SCRIPT", Default = false })

    excute:OnChanged(function ()
        if Options.AutoExecuteScript.Value then
            getgenv().AUTOEXCUTE = true
            warn("TRUE")
        else
            getgenv().AUTOEXCUTE = false
            warn("FALSE")
        end
    end)

    Tabs.Other:AddButton({
        Title = "TELEPORT LOBBY",
        Description = nil,
        Callback = function()
            game:GetService("TeleportService"):Teleport(6938803436)
        end
    })

    local UpdateLog = Tabs.Other:AddSection("Update Log")

    UpdateLog:AddParagraph({
        Title = "Last Update May/05/2024",
        Content = "[*] Fixed Auto Excuter now working\n[*] Fixed webhook not working"
    })

    white:OnChanged(function()
        if Options.WhiteScreen.Value then
            game:GetService("RunService"):Set3dRenderingEnabled(false)
        else
            game:GetService("RunService"):Set3dRenderingEnabled(true)
        end
    end)


SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name))
SaveManager:SetFolder("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name))
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()
end -- End of Do


coroutine.resume(coroutine.create(function()
    pcall(function ()
        if game.CoreGui:FindFirstChild("Close/Open") == nil and game:GetService("UserInputService").TouchEnabled then
local CloseOpen = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")
CloseOpen.Name = "Close/Open"
CloseOpen.Parent = game:WaitForChild("CoreGui")
CloseOpen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
TextButton.Parent = CloseOpen
TextButton.BackgroundColor3 = Color3.fromRGB(140, 140, 140)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0174563117, 0, 0.286864668, 0)
TextButton.Size = UDim2.new(0.100000001, 0, 0.0633569732, 0)
TextButton.Font = Enum.Font.ArialBold
TextButton.Text = "Close/Open"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
        end
end)
end))

function unload_ui()
    while wait() do
        if Fluent.Unloaded then 
        game.CoreGui:FindFirstChild("Close/Open"):Destroy()
            break 
         end
    end
end
coroutine.resume(coroutine.create(unload_ui))


coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
     if game.CoreGui:FindFirstChild("CrazyDay") == nil then
     for i,v in pairs(game.CoreGui:GetChildren()) do
        if v.Name == "ScreenGui" then
        for _,k in next, v:GetDescendants() do
              if k.Name == "TextLabel" and string.find(k.Text,"Anime Dimensions") then
                k.Parent.Parent.Parent.Parent.Name = "CrazyDay"
                   warn("Found Ui. . .")  
                   end
                 end
              end
          end
       end
   end)
         if game.CoreGui:FindFirstChild("CrazyDay") ~= nil then
           warn("break")
       break
      end
    end
end))

coroutine.resume(coroutine.create(function()
    local Button = game.CoreGui:FindFirstChild("Close/Open"):FindFirstChild("TextButton")
    Button.InputBegan:Connect(function(input)
        if  (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
    for i,v in pairs(game.CoreGui.CrazyDay:GetChildren()) do
            if v.Name == "Frame" and i == 2 then
                v.Visible = not v.Visible
                        end
                    end
                end
           end)
    end))

coroutine.resume(coroutine.create(function()
    pcall(function()
        Workspace.Folders.Monsters.ChildAdded:Connect(function(v)
            pcall(function()
                if v.ClassName == "Model" and Options.PlayMode.Value == "Bring Mode" and game.Players.LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible == false then
                    ADDKUY()
                end
            end)
        end)
    end)
end))

local function NameT1()
    for i,v in pairs(game.Workspace.Folders.Monsters:GetChildren()) do
        if v:FindFirstChildOfClass("BillboardGui") then
            return v.HumanoidRootPart
        end
    end
end

 local function getClosestKuy()
    local dist, thing = math.huge
        for i, v in next, game.Workspace:GetChildren() do
            if v.Name == "Head_Kuy" then
                local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
                if mag < dist then
                    dist = mag 
                    thing = v
                end
            end
        end
    return thing
end


function TweenKUY(P)
    game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new((getClosestKuy().Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude/100,Enum.EasingStyle.Linear),{CFrame = P}):Play()
end


coroutine.resume(coroutine.create(function()
    while task.wait() do
    pcall(function()
                if tonumber(os.date("!*t").min) <= 9 and Options.AutoRaid.Value then
                    getgenv().RaidOpened = true
                else
                    getgenv().RaidOpened = false
            end
        end)
    end
end))


coroutine.resume(coroutine.create(function()
    while wait(1) do
    pcall(function()
        if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 and Options.AutoLeaveIfRaid.Value then
if getgenv().RaidOpened and not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible and Options.Select_Action_Raid.Value == "LEAVE" then
    game:GetService("TeleportService"):Teleport(6938803436)
elseif getgenv().RaidOpened and not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible and Options.Select_Action_Raid.Value == "STOP RETRY" then
    getgenv().StopReplay = true
    getgenv().RaidOpened = true
end
end
end)
end
end))


coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        if getgenv().WorkingForDoing or getgenv().RaidOpened or game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible then 
        else
        if Options.Auto_SpeedRaid.Value and game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.PlayButtonsFrame.Frame.SpeedRaidBanner.SpeedRaidBannerOpenText.Text == "Ready to enter" and not getgenv().RaidOpened
        and not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible and not getgenv().CurrentBossRush and not getgenv().WorkingForDoing then
            for i,v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.SpeedRaidCharacterSelector.Shade.SpeedRaidCharacterInventoryScrollingFrame:GetChildren()) do
                if v.ClassName == "ImageButton" and v.CharacterImage.ImageTransparency == 0 and
                v.Name ~= game.ReplicatedStorage[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName1.Value and 
                v.Name ~= game.ReplicatedStorage[game.Players.LocalPlayer.Name.."StatDisplay"].AssistCharacterName2.Value then
                    getgenv().CurrentSpeedRaid = true
                    game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("TeleportToShadowRaid",v.Name)
                       end
                   end
            end
        end
    end)
    if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
        break
    end
end
end))


coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        if Options.Auto_EquipCharacter.Value and 
        game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 
        and isfile("/CrazyDay/"..game.Players.LocalPlayer.Name.."_Anime_Dimension/Character.lua") then
        Config = game:GetService("HttpService"):JSONDecode(readfile("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name).."/Character.lua"))
        getgenv().DuringForCharacter = true
for i,v in next,Config do 
    if tostring(i) == "Character1" and game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value == v then
        getgenv().DuringForCharacter = false
                  end
               end
           end
        end)
        if not getgenv().DuringForCharacter then
            repeat wait() until not getgenv().DuringForCharacter
            getgenv().DuringForCharacter = false
            warn("break character")
            break
         end
     end
end))


local BossRuhsTicketCheck = {}
coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        if not getgenv().CurrentBossRush then
        local Free = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.BossRushFrame.BossRushFreeEntry.Text
        BossRuhsTicketCheck['Free'] = Free
        writefile("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name).."/BossRush.lua", game:GetService("HttpService"):JSONEncode(BossRuhsTicketCheck))
           end
    end)
    if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 or getgenv().CurrentBossRush then
        break
    end
   end
end))


coroutine.resume(coroutine.create(function()
    while wait(0.35) do pcall(function ()
        if getgenv().WorkingForDoing or getgenv().RaidOpened or getgenv().DuringForCharacter or game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible then 
        else
            if Options.Auto_RaidChallange.Value and game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.DailyRaidChallengeFrame.RaidChallengeRewardAvailable.Text == 'Reward Available' 
            and not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible and not getgenv().DuringForCharacter then
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("TeleportToRaidChallenge")
            end
            if Options.Auto_FreeBossRush.Value and game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.BossRushFrame.BossRushFreeEntry.Text == "1 Free Entry Left" and not getgenv().RaidOpened 
            and not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible and not getgenv().WorkingForDoing and not getgenv().DuringForCharacter then
                getgenv().CurrentBossRush = true
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("TeleportToBossRush")
            end
        end
    end)
    if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
        break
    end
end
end))

coroutine.resume(coroutine.create(function()
    task.wait(2)
    while wait(0.5) do pcall(function ()
        if  getgenv().WorkingForDoing or getgenv().DuringForCharacter or game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible then
        else
        if Options.AutoRaid.Value and 
        not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible and getgenv().RaidOpened and Options.AutoRaid.Value 
        and not getgenv().WorkingForDoing and not getgenv().DuringForCharacter and
        game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
            task.wait(0.125)
        local args = {
                [1] = "CreateRoom",
                [2] = {
                    ["Difficulty"] = "Easy",
                    ["FriendsOnly"] = Options.FriendOnly.Value,
                    ["MapName"] = Options.SelectRaid.Value,
                    ["Hardcore"] = false
                }
            }
            
            game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
        end
    end
        if Options.AutoFarmAndStart.Value or Options.AUTO_LEVEL_SELECT.Value then
        if not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible and not getgenv().CurrentSpeedRaid 
        and not getgenv().RaidOpened and not  getgenv().DuringForCharacter and not getgenv().WorkingForDoing and not getgenv().CurrentBossRush then
                local args = {
                    [1] = "CreateRoom",
                    [2] = {
                        ["Difficulty"] = Options.SelectDifficulty.Value,
                        ["FriendsOnly"] = Options.FriendOnly.Value,
                        ["MapName"] = Options.SelectDimension.Value,
                        ["Hardcore"] = Options.HardCore.Value
                    }
                }
                
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer(unpack(args))
            end
        end
            if not game.Players.LocalPlayer.PlayerGui.UniversalGui.TeleportingUI.Visible
            and game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 and not getgenv().WorkingForDoing 
            and not  getgenv().DuringForCharacter then
                game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("TeleportPlayers")
            end
       end)
       if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
        break
       end
     end
end))



        
function TweenPart(part,goal)
    game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart,TweenInfo.new((part - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude/100,Enum.EasingStyle.Linear),{CFrame = goal}):Play()
end


coroutine.resume(coroutine.create(function()
    pcall(function ()
    repeat wait() until Options.PlayMode.Value == "Bring Mode"
    wait(2.5)
    getgenv().ReadyToBring = true
end)
end))


local tween_s = game:service"TweenService"
local tweenMon
local tweenBOSS

function CharacterNameSSS()
    if game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value then
    return game:GetService("ReplicatedStorage")[game.Players.LocalPlayer.Name.."StatDisplay"].CharacterName.Value
    end
end


coroutine.resume(coroutine.create(function()
    while wait(1) do pcall(function ()
        if game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
        if Options.Auto_Set_Distance.Value then
            if game.Players.LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible then
                if Options.METHOD_FARM.Value == "Behind" or Options.METHOD_FARM.Value == "Front" then
                method = CFrame.new(0,0,0)
                elseif Options.METHOD_FARM.Value == "Over" then
                method = CFrame.new(0,1.5,0) * CFrame.Angles(math.rad(-90),0,0)
                end
            else
            if Options.METHOD_FARM.Value == "Behind"  then
                method = CFrame.new(0,0,getClosestMob().HumanoidRootPart.Size.Z+5)
            elseif Options.METHOD_FARM.Value == "Over" then
                method = CFrame.new(0,getClosestMob().HumanoidRootPart.Size.Y+5.65,0) * CFrame.Angles(math.rad(-90),0,0)
            elseif Options.METHOD_FARM.Value == "Front" then
                method = CFrame.new(0,0,-getClosestMob().HumanoidRootPart.Size.Z-5) * CFrame.Angles(math.rad(0),1800,0)
                end
            end
        elseif not Options.Auto_Set_Distance.Value then
            if Options.METHOD_FARM.Value == "Behind"  then
                method = CFrame.new(0,0,Options.DistanceForMon.Value)
            elseif Options.METHOD_FARM.Value == "Over"  then
                method = CFrame.new(0,Options.DistanceForMon.Value,0) * CFrame.Angles(math.rad(-90),0,0)
            elseif Options.METHOD_FARM.Value == "Front"   then
                method = CFrame.new(0,0,-Options.DistanceForMon.Value) * CFrame.Angles(math.rad(0),1800,0)
                end
            end
         end
      end)
    end
end))


coroutine.resume(coroutine.create(function()
    while task.wait() do pcall(function ()
if getgenv().STOP_Farm or getgenv().Break_Farm or getgenv().SAFE_MODE then 
else
if Options.AutoFarmAndStart.Value or Options.AutoRaid.Value or Options.Auto_FreeBossRush.Value or Options.Auto_SpeedRaid.Value or Options.AUTO_LEVEL_SELECT.Value or Options.Auto_RaidChallange.Value then
if game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible and not getgenv().STOP_Farm and not getgenv().Break_Farm 
and not getgenv().SAFE_MODE and CharacterNameSSS() ~= "Naruto" and CharacterNameSSS() ~= "Sasuke" then
    repeat task.wait()
tweenBOSS = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], TweenInfo.new((getClosestBoss().HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/100, Enum.EasingStyle.Linear), {CFrame = getClosestBoss().HumanoidRootPart.CFrame * method })
tweenBOSS:Play()
until getClosestBoss().EnemyHealthBarGui.HealthText.Text <= 0 or not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
or getgenv().STOP_Farm or getgenv().Break_Farm or getgenv().SAFE_MODE or CharacterNameSSS() == "Naruto" or CharacterNameSSS() == "Sasuke" 

tweenBOSS:Cancel()

elseif game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible and not getgenv().STOP_Farm and not getgenv().Break_Farm 
and not getgenv().SAFE_MODE and CharacterNameSSS() == "Naruto" or CharacterNameSSS() == "Sasuke" then
    repeat task.wait()
tweenBOSS = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], TweenInfo.new((getClosestBoss().HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/100, Enum.EasingStyle.Linear), {CFrame = getClosestBoss().HumanoidRootPart.CFrame * CFrame.new(0,0,-1.25) * CFrame.Angles(math.rad(0),1800,0) })
tweenBOSS:Play()
until CharacterNameSSS() ~= "Naruto" and CharacterNameSSS() ~= "Sasuke" and getClosestBoss().EnemyHealthBarGui.HealthText.Text <= 0
or not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible or getgenv().STOP_Farm or getgenv().Break_Farm or getgenv().SAFE_MODE


tweenBOSS:Cancel()

elseif Options.PlayMode.Value ~= "Bring Mode" and not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
and not getgenv().STOP_Farm and not getgenv().Break_Farm and not getgenv().SAFE_MODE then
repeat task.wait()
tweenMon = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], TweenInfo.new((getClosestMob().HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/100, Enum.EasingStyle.Linear), {CFrame = getClosestMob().HumanoidRootPart.CFrame * method })
tweenMon:Play()
until getClosestMob().EnemyHealthBarGui.HealthText.Text <= 0 or game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
or getgenv().STOP_Farm or getgenv().Break_Farm or getgenv().SAFE_MODE or Options.PlayMode.Value == "Bring Mode"


tweenMon:Cancel()


elseif  Options.PlayMode.Value == "Bring Mode" and 
game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible == false and not getgenv().STOP_Farm and not getgenv().Break_Farm  then
    if game.Workspace:FindFirstChild("Head_Kuy") and not getgenv().Break_Farm and getgenv().ReadyToBring then
        TweenKUY(getClosestKuy().CFrame)
    end
end
end
end
end)
if game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230 then
    break
end
end
end))

coroutine.resume(coroutine.create(function()
    while task.wait() do pcall(function ()
        if getgenv().STOP_Farm or getgenv().Break_Farm or getgenv().SAFE_MODE then 
        else
        if Options.AutoFarmAndStart.Value or Options.AUTO_LEVEL_SELECT then
            if Options.PlayMode.Value == "Bring Mode" and game.Workspace:FindFirstChild("Head_Kuy") == nil and
            not game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
            and not getgenv().STOP_Farm and not getgenv().Break_Farm  then
                        repeat task.wait()
                        tweenMon = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], TweenInfo.new((NameT1().Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/100, Enum.EasingStyle.Linear), {CFrame = NameT1().CFrame * method })
                        tweenMon:Play()
                        until
                        game.Workspace:FindFirstChild("Head_Kuy") or Options.PlayMode.Value ~= "Bring Mode" or getgenv().STOP_Farm or getgenv().Break_Farm
                        or game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
                        
                        tweenMon:Cancel()
                    end
            end
            
        end
      end)
    end
end))
    

coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        local Boss = game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame
        if Boss.Visible and not getgenv().Touch and Boss.BossName.Text == "King of Curses" or Boss.BossName.Text == "King" 
        and not getgenv().SAFE_MODE then
            getgenv().Break_Farm = true
        elseif getgenv().Touch and getgenv().Break_Farm and not getgenv().SAFE_MODE then
            getgenv().Break_Farm = false
        end
      end)
    end
end))

coroutine.resume(coroutine.create(function()
    pcall(function()
        Workspace.Folders.Monsters.ChildAdded:Connect(function(v)
            if v.Name == "Onihime" then
                repeat wait() until not v.Parent
                repeat wait() until not getgenv().SAFE_MODE
                getgenv().Break_Farm = true
            end
        end)
    end)
end))


coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        if game.Workspace.GameMap:FindFirstChild("Curse Dimension") or game.Workspace.GameMap:FindFirstChild("Fate Dimension") or game.Workspace.GameMap:FindFirstChild("Pirate Dimension") then
        if not game.Workspace:FindFirstChild("Teleport_Part_Boss") 
        and game.Workspace.GameMap:FindFirstChild("Curse Dimension") then
            local PART = Instance.new("Part",game.Workspace)
            PART.Name = "Teleport_Part_Boss"
            PART.CanCollide = false
            PART.Anchored = true
            PART.Transparency = 1
            PART.Size = Vector3.new(5,5,5)
            PART.CFrame = CFrame.new(204.747787, 4.38378477, -275.407867, 0.0972495899, 4.15591543e-08, 0.99526, -3.80400529e-08, 1, -3.80400849e-08, -0.99526, -3.41603581e-08, 0.0972495899)
        elseif not game.Workspace:FindFirstChild("Teleport_Part_Boss") 
        and game.Workspace.GameMap:FindFirstChild("Fate Dimension") then
            local PART = Instance.new("Part",game.Workspace)
            PART.Name = "Teleport_Part_Boss"
            PART.CanCollide = false
            PART.Anchored = true
            PART.Transparency = 1
            PART.Size = Vector3.new(5,5,5)
            PART.CFrame = CFrame.new(267.234406, 45.1668282, -1174.48718, 0.422591954, 1.84010762e-08, 0.906320035, 3.80401346e-08, 1, -3.8040131e-08, -0.906320035, 5.05519893e-08, 0.422591954)
        elseif not game.Workspace:FindFirstChild("Teleport_Part_Boss") 
        and game.Workspace.GameMap:FindFirstChild("Pirate Dimension") then
            local PART = Instance.new("Part",game.Workspace)
            PART.Name = "Teleport_Part_Boss"
            PART.CanCollide = false
            PART.Anchored = true
            PART.Transparency = 1
            PART.Size = Vector3.new(5,53,5)
            PART.CFrame = CFrame.new(-1441.08545, 14.8336296, 256.363922, 0.198312044, -4.48285427e-08, -0.980138958, 3.80402305e-08, 1, -3.8040227e-08, 0.980138958, -2.97408747e-08, 0.198312044)

        else
            if game.Workspace:FindFirstChild("Teleport_Part_Boss") and not getgenv().Touch and getgenv().Break_Farm and not getgenv().SAFE_MODE then
            repeat wait()
                TweenPart(game.Workspace:FindFirstChild("Teleport_Part_Boss").Position,game.Workspace:FindFirstChild("Teleport_Part_Boss").CFrame)
                until getgenv().Touch or getgenv().SAFE_MODE
                  end
              end
           end
       end)
       if not game.Workspace.GameMap:FindFirstChild("Curse Dimension") and not game.Workspace.GameMap:FindFirstChild("Fate Dimension") and not game.Workspace.GameMap:FindFirstChild("Pirate Dimension") then
        warn('Break Function MAP Detech')
        break
       end
   end
end))

function Cancolllll(value)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = value
        end
    end
end

task.spawn(function()
    repeat wait()
        Cancolllll(false)
    until Options.Dodge_Skill.Value or getgenv().STOP_Farm
end)

local function CheckTouch()
    game.Players.LocalPlayer.Character.HumanoidRootPart.Touched:Connect(function(part)
        if part.Name == "DodgePart" then
            getgenv().STOP_Farm = true
            Cancolllll(true)
            repeat task.wait() until not part.Parent
            task.wait(0.5)
            getgenv().STOP_Farm = false
            Cancolllll(false)
        end
    end)
end

local function TocuhEnd()
    game.Players.LocalPlayer.Character.HumanoidRootPart.Touched:Connect(function(part)
        if part.Name == "Teleport_Part_Boss" and getgenv().Break_Farm then
            repeat wait() until not getgenv().SAFE_MODE
            task.wait(2.75)
            getgenv().Touch = true
            getgenv().Break_Farm = false
        end
    end)
end


local function TouchKuy()
game.Players.LocalPlayer.Character.HumanoidRootPart.Touched:Connect(function(part)
    if part.Name == "Head_Kuy" then
        part:Destroy()
      end
   end)
end

local function CheckAnchored()
    game.Players.LocalPlayer.Character.HumanoidRootPart:GetPropertyChangedSignal("Anchored"):Connect(function()
        pcall(function()
        if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored then
            getgenv().IFrame_MODE = true
            warn("STOP SKILL")
            repeat task.wait() until not game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored
            task.wait(.1)
            getgenv().IFrame_MODE = false
            warn("START SKILL")
        end
       end)
    end)
end

local DisconnectTo
local function onCharacterAdded(character)
    local player = game:GetService("Players").LocalPlayer
    local humanoid = character:WaitForChild("Humanoid", 5)
    if not humanoid then
        return
    end
    humanoid.Died:Connect(function()
        getgenv().STOP_Farm = true
        getgenv().IFrame_MODE = false
        DisconnectTo =  game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
                wait(0.45)
                game.Players.LocalPlayer.Character.Head.PlayerHealthBarGui.PlayerName.Text = "Protech_By_CrazyDay"
                getgenv().STOP_Farm = false
                getgenv().IFrame_MODE = false
                TouchKuy()
                CheckAnchored()
                TocuhEnd()
                CheckTouch()
                if game.Players.LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible == true then
                wait(0.25)
                DestroyKuy()
                end
                DisconnectTo:Disconnect()
        end)
    end)
end

coroutine.resume(coroutine.create(function()
game.Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
do
    local PlayerCheck = game.Players.LocalPlayer.Character 
    if PlayerCheck then
        getgenv().IFrame_MODE = false
        getgenv().STOP_Farm = false
        PlayerCheck:WaitForChild("HumanoidRootPart")
        onCharacterAdded(PlayerCheck)
        game.Players.LocalPlayer.Character.Head.PlayerHealthBarGui.PlayerName.Text = "Protech_By_CrazyDay"
        TouchKuy()
        CheckAnchored()
        TocuhEnd()
        CheckTouch()
        if game.Players.LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.BossHealthFrame.Visible == true then
        wait(0.25)
        DestroyKuy()
        end
       end
    end
end))

local bv = Instance.new("BodyVelocity")
local velocity = Instance.new("BodyVelocity")
velocity.MaxForce = Vector3.new(100000, 0, 100000)
local gyros = Instance.new("BodyGyro")
gyros.MaxTorque = Vector3.new(100000, 0, 100000)

local function getTorso(LocalPlayer)
    if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        if game.Players.LocalPlayer.Character:FindFirstChild('UpperTorso') then
            return game.Players.LocalPlayer.Character.UpperTorso
        else
            return game.Players.LocalPlayer.Character.Torso
        end
    end
end

coroutine.resume(coroutine.create(function()
    while wait() do
        pcall(function()
if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
    if Options.AutoFarmAndStart.Value or Options.AutoRaid.Value or Options.Auto_FreeBossRush.Value or Options.Auto_SpeedRaid.Value or Options.AUTO_LEVEL_SELECT.Value  or Options.Auto_RaidChallange.Value
    then

        game.Players.LocalPlayer.Character.Humanoid.PlatformStand=true
        bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        bv.MaxForce = Vector3.new(100000,100000,100000)
        bv.Velocity = Vector3.new(0,0,0)
        velocity.Parent = getTorso(game.Players.LocalPlayer)
        gyros.Parent = getTorso(game.Players.LocalPlayer)

        velocity.Velocity = (game.Players.LocalPlayer.Character.Humanoid.MoveDirection) * game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
        gyros.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        if game:GetService("Players").LocalPlayer.DevCameraOcclusionMode ~= "Invisicam" then
            game:GetService("Players").LocalPlayer.DevCameraOcclusionMode = "Invisicam"
        end
        local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
        for _, v in ipairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v.IsA(v, "BasePart") then
                v.Velocity, v.RotVelocity = V3, V3
                 end
              end
            elseif not Options.AutoFarmAndStart.Value and not Options.AutoRaid.Value and not Options.Auto_FreeBossRush.Value
             and not Options.Auto_SpeedRaid.Value and not Options.AUTO_LEVEL_SELECT.Value  and not Options.Auto_RaidChallange.Value then
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                gyros.Parent = nil
                bv.Parent = nil
                velocity.Parent = nil
            end
         end
      end)
      if game.PlaceId == 6938803436 or game.PlaceId == 7274690025 or game.PlaceId == 7338881230  then
        break
      end
    end
end))

local function GetDist()
    local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - getClosestMob().HumanoidRootPart.Position).magnitude
    return dist
end

function Skill_First()
    pcall(function ()

        if game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.First_Skill.Value].Visible and
        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.First_Skill.Value].SkillName.Text) == nil
        and GetDist() <= tonumber(Options.DistanceToSkill.Value) and not getgenv().IFrame_MODE then
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options.First_Skill.Value))
        end 
end)
end

function Skill_Second()
    pcall(function ()
        if game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Second_Skill.Value].Visible and
        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.First_Skill.Value].SkillName.Text) ~= nil and

        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Second_Skill.Value].SkillName.Text) == nil
        and GetDist() <= tonumber(Options.DistanceToSkill.Value) and not getgenv().IFrame_MODE then
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options.Second_Skill.Value))
        end 

end)
end



function Skill_Third()
    pcall(function ()
        if game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Third_Skill.Value].Visible and
        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Second_Skill.Value].SkillName.Text) ~= nil and

        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Third_Skill.Value].SkillName.Text)  == nil
        and GetDist() <= tonumber(Options.DistanceToSkill.Value) and not getgenv().IFrame_MODE then
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options.Third_Skill.Value))
        end 
end)
end


function Skill_Fourth()
    pcall(function ()
        if game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Fourth_Skill.Value].Visible and
        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Third_Skill.Value].SkillName.Text) ~= nil and
        
        tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Fourth_Skill.Value].SkillName.Text)  == nil
        and GetDist() <= tonumber(Options.DistanceToSkill.Value) and not getgenv().IFrame_MODE then
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options.Fourth_Skill.Value))
        end 
end)
end


function Skill_Fifth()
    pcall(function ()
            if game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Fifth_Skill.Value].Visible and
            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Fourth_Skill.Value].SkillName.Text) ~= nil and

            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder["Skill"..Options.Fifth_Skill.Value].SkillName.Text)  == nil
            and GetDist() <= tonumber(Options.DistanceToSkill.Value) and not getgenv().IFrame_MODE then
                wait(.1)
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options.Fifth_Skill.Value))
        end 
end)
end


function Melee()
    pcall(function ()
        if getgenv().SAFE_MODE or game.Workspace:FindFirstChild("Head_Kuy") then
        else
        if GetDist() <= tonumber(Options.DistanceToSkill.Value) and Options.Attack_Method.Value == 'Remote' then
            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position),["attackNumber"] = 4},"BasicAttack")
        elseif GetDist() <= tonumber(Options.DistanceToSkill.Value) and Options.Attack_Method.Value == 'Click' then
            game:GetService'VirtualUser':CaptureController()
            game:GetService'VirtualUser':Button1Down(Vector2.new(1200,672))
        end 
    end
end)
end

coroutine.resume(coroutine.create(function()
        while task.wait(0.115) do
            pcall(function()
                if Options.Auto_Skill_Assist.Value and not getgenv().SAFE_MODE and game.Workspace:FindFirstChild("Head_Kuy") == nil then
                    Skill_First()
                    Skill_Second()
                    Skill_Third()
                    Skill_Fourth()
                    Skill_Fifth()
                end
            end)
        end
end))

coroutine.resume(coroutine.create(function()
    while wait(0.7775) do
        pcall(function()
            Melee()
        end)
    end
end))


coroutine.resume(coroutine.create(function()
    while wait(.1) do pcall(function ()
        if Options.Auto_Skill_Assist.Value and game.Workspace:FindFirstChild("Head_Kuy") == nil then
        for i, v in next, Workspace.Folders.Monsters:GetChildren() do
            if v:FindFirstChildOfClass("BillboardGui") then
                pcall(function ()
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if getgenv().Assist_1 and mag <= tonumber(Options.DistanceToSkill.Value) 
            and game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist1.Visible and
            tostring(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist1.SkillName.Text) == "Dash" or 
            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist1.SkillName.Text) == 0  then
                pcall(function ()
                game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseAssistSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},1)
                end)
            end  
            if getgenv().Assist_2 and mag <= tonumber(Options.DistanceToSkill.Value)
                and game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist2.Visible and
                tostring(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist2.SkillName.Text) == "Dash" or 
                tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillAssist2.SkillName.Text) == 0  then
                    pcall(function ()
                game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseAssistSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},2)
            end)
        end   
            if getgenv().Fruit_1 and mag <= tonumber(Options.DistanceToSkill.Value)
            and game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit1.Visible and 
            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit1.SkillName.Text) == nil or
            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit1.SkillName.Text) == 0  then
                pcall(function ()
                game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseFruitSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},1)
            end)
        end  
            if getgenv().Fruit_2 and mag <= tonumber(Options.DistanceToSkill.Value)
            and game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit2.Visible and not 
            tostring(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit2.SkillName.Text) == nil or 
            tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder.SkillFruit2.SkillName.Text) == 0  then
                pcall(function ()
                game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseFruitSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},2)
            end)
        end  
            end)
            end  
        end
    end
end)
end
end))

coroutine.resume(coroutine.create(function()
    pcall(function()
        Workspace.Folders.Debris.ChildAdded:Connect(function(v)
            pcall(function()
                if table.find({"telegraph"},v.Name:lower()) and v.Material ~= Enum.Material.Neon and Options.Dodge_Skill.Value then
                    if Options.Dodge_Skill.Value and not getgenv().SAFE_MODE and game.Workspace:FindFirstChild("Head_Kuy") == nil then
                    local op = v.Material
                    local a = v:Clone()
                    local side = math.clamp(2.85,0,10)
                    local Sizeto = v.Size + Vector3.new(side,100,side)
                    a.Size = Vector3.new(0,0,v.Size.Z)
                    if v.ClassName == "MeshPart" then
                        a.Size = Vector3.new(0,0,100)
                        Sizeto = v.Size + Vector3.new(side,side,100)
                    end
                    game:GetService("TweenService"):Create(a,TweenInfo.new(0.125),{Size = Sizeto}):Play()
                    a.CFrame = v.CFrame + Vector3.new(0,0,0)
                    a.Anchored = true
                    a.Transparency = 1
                    a.CanCollide = true
                    a.Name = "DodgePart"
                    a.Parent = v.Parent
                    repeat wait() until not v.Parent
                    a:Destroy()
                end
                end
            end)
        end)
    end)
end))

coroutine.resume(coroutine.create(function()
        while wait(1) do
            pcall(function()
                if Options.AutoRetry.Value then
                    local File = readfile("CrazyDay/Anime Dimension/"..game.Players:GetUserIdFromNameAsync(game.Players.LocalPlayer.Name).."/BossRush.lua")
                    getgenv().BossRead = game:GetService("HttpService"):JSONDecode(File)
                    if getgenv().BossRead['Free'] == '1 Free Entry Left' then
                    else
                    if game:GetService("Players").LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI.Visible == true then
                        wait(1)
                        if getgenv().RaidOpened and getgenv().StopReplay then
                        elseif game:GetService("Players").LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI.RetryDungeonButton.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.WaveClearClearText.Text ~= "1" then
                        elseif game:GetService("Players").LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI.RetryDungeonButton.Visible == true and game:GetService("Players").LocalPlayer.PlayerGui.BattleGui.CenterUIFrame.WaveClearClearText.Text == "1" then
                            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("RetryDungeon")
                            end
                        end
                    end
                end
            end)
        end
end))


coroutine.resume(coroutine.create(function()
    pcall(function ()
        repeat wait() until game:IsLoaded()
        game.CoreGui:WaitForChild("CrazyDay")
        repeat wait() until game.CoreGui:FindFirstChild("CrazyDay") ~= nil
        repeat wait() until Options.AutoCloseAfterExecute.Value
        for i,v in pairs(game.CoreGui.CrazyDay:GetChildren()) do
            if v.Name == "Frame" and i == 2 then
                v.Visible = false
            end
        end
    end)
end))

coroutine.resume(coroutine.create(function()
    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(Kick)
        if ((Kick.Name == "ErrorPrompt") and Kick:FindFirstChild("MessageArea") and Kick.MessageArea:FindFirstChild("ErrorFrame")) then
            if Options.AutoRejoinIfError.Value then
                game:GetService("TeleportService"):Teleport(6938803436)
            end
        end
    end)
end))


local OtherItem = {}
local Other_Num = {"None"}
game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("UniversalGui"):WaitForChild("UniversalCenterUIFrame"):WaitForChild("ResultUI"):WaitForChild("Frame"):WaitForChild("RewardFrame"):WaitForChild("RewardGridFrame").ChildAdded:Connect(function(v)
    if not v:IsA("UIGridLayout") then
        if tonumber(v.LevelReq.Text) then
            if not OtherItem[v.Name] then
                OtherItem[v.Name] = {}
                table.remove(Other_Num,table.find(Other_Num,'None'))
            end
            table.insert(OtherItem[v.Name] , tonumber(v.LevelReq.Text))
        end
    end
end)

game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("UniversalGui"):WaitForChild("UniversalCenterUIFrame"):WaitForChild("ResultUI"):WaitForChild("Frame"):WaitForChild("RewardFrame"):WaitForChild("RewardGridFrame").ChildAdded:Connect(function(v)
    pcall(function ()
    if v.Name ~= 'TraitToken' and v.Name ~= 'RaidCurrency' and v.Name ~= "BossRushEntryPass" and v.Name ~= 'Gem' and v.Name ~= 'BossRushCurrency' then
        repeat wait()
            if table.find(item_name,'None') then
            table.remove(item_name,table.find(item_name,'None'))
            end
        until not table.find(item_name,'None')
    if not v:FindFirstChild("Gradient") then 
        table.insert(item_name,v.Name.." [Common]")
    elseif tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
            table.insert(item_name,v.Name.." [Uncommon]")
    elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
            table.insert(item_name,v.Name.." [Rare]")
    elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
            table.insert(item_name,v.Name.." [Epic]")
    elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
        table.insert(item_name,v.Name.." [Legendary]")
    else
        table.insert(item_name,v.Name.." [Mythic]")
        end    
    end
end)
end)


function Check_Raid_GUI()
    for i,v in pairs(game.Players.LocalPlayer.PlayerGui:WaitForChild("UniversalGui"):WaitForChild("UniversalCenterUIFrame"):WaitForChild("RaidResultUI"):WaitForChild("Frame"):GetDescendants()) do
        if v.Name == "RaidRewardGridFrame" and v.Parent.Name == 'Shadow' then
            return v
        end
    end
end

Check_Raid_GUI().ChildAdded:Connect(function(v)
    if not v:IsA("UIGridLayout") then
        if tonumber(v.LevelReq.Text) then
            if not OtherItem[v.Name] then
                OtherItem[v.Name] = {}
                table.remove(Other_Num,table.find(Other_Num,'None'))
            end
            table.insert(OtherItem[v.Name] , tonumber(v.LevelReq.Text))
        end
    end
end)

Check_Raid_GUI().ChildAdded:Connect(function(v)
    if v.Name ~= 'TraitToken' and v.Name ~= 'RaidCurrency' and v.Name ~= "BossRushEntryPass" and v.Name ~= 'Gem' and v.Name ~= 'BossRushCurrency' then
        repeat wait()
            if table.find(item_name,'None') then
            table.remove(item_name,table.find(item_name,'None'))
            end
        until not table.find(item_name,'None')
    if not v:FindFirstChild("Gradient") then 
        table.insert(item_name,v.Name.." [Common]")
    elseif tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
            table.insert(item_name,v.Name.." [Uncommon]")
    elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
            table.insert(item_name,v.Name.." [Rare]")
    elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
            table.insert(item_name,v.Name.." [Epic]")
    elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
        table.insert(item_name,v.Name.." [Legendary]")
    else
        table.insert(item_name,v.Name.." [Mythic]")
        end
    end
end)


function Gem() for i,v in next,game.Players.LocalPlayer.PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetChildren() do if v.Name == "CoinBlack" and i == 14 then
    return v.Gem.Text end end end
function Coin() for i,v in next,game.Players.LocalPlayer.PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetChildren() do if v.Name == "CoinBlack" and i == 13 then
    return v.Gold.Text end end end

game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.RaidResultUI:GetPropertyChangedSignal("Visible"):Connect(function()
    pcall(function()
    if Options.AutoWebhook_Raid.Value then
        wait(1.25)
            for i,v in pairs(OtherItem) do
                if #v ~= 0 then
                local num = v
                local sum = 0
                for i = 1,#num do
                    sum = sum + num[i]
                end
                name_count = tostring(i)..': x'..tonumber(sum)
                table.insert(Other_Num,name_count)
                end
            end
local timeInfo = os.date("*t")
local ExpPer = tostring(game.Players.LocalPlayer.PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text):split("%")
BBody = game:GetService("HttpService"):JSONEncode({
      content = nil,
      embeds = {{
          ["author"] = {
              ["name"] = "Crazy Day ",
              ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s108-c-k-c0x00ffffff-no-rj"
          },
          ["title"] = "Anime Dimension Simulator", 
          ["icon_url"] = "https://tr.rbxcdn.com/41ece3967a06d47a84f4859d6262ea46/150/150/Image/Png",
          ["footer"] = {
              ["text"] = "Anime Dimension Simulator : " .. timeInfo.hour .. ":" .. timeInfo.min,
              ["icon_url"] = "https://tr.rbxcdn.com/41ece3967a06d47a84f4859d6262ea46/150/150/Image/Png"
         
          },
          ["color"] = tonumber(0xFFD700),
          ["url"] = "https://www.roblox.com/games/6938803436/MUSCLE-Anime-Dimensions-Simulator",
          ["fields"] = {
          
                {
                ["name"] = "Items Reward",
                ["value"] = "\n[+] "..table.concat( item_name,"\n[+] "),
                ["inline"] = false
                  
              },
              {
                ["name"] = "Other Reward",
                ["value"] = "[+] "..table.concat(Other_Num,"\n[+] "),
                ["inline"] = false
                  
              },
              {
                ["name"] = "Card",
                ["value"] = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardsOwned.Text.."/"..game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.MaxCardsOwned.Text,
                ["inline"] = false
                  
              },
              {
                ["name"] = "Username",
                ["value"] = "||**"..game.Players.LocalPlayer.Name.."**||",
                ["inline"] = true
                  
              },
              {
                ["name"] = "Level",
                ["value"] = game.Players.LocalPlayer.leaderstats.Level.Value.." : "..ExpPer[1].."/100%",
                ["inline"] = true
                  
              },
              {
                ["name"] = "Other",
                ["value"] = "Gem : "..Gem().."\n".."Coin : "..Coin(),
                ["inline"] = true
                  
              },
            
          }
          }}
      })
  local response = http_request or request or HttpPost or syn.request
  response({
  Url = Options.Webhook.Value,
  Method = "POST",
  Headers = {
      ["Content-Type"] = "application/json"
  },
  Body = BBody
})
end
end)
end)

game.Players.LocalPlayer.PlayerGui.UniversalGui.UniversalCenterUIFrame.ResultUI:GetPropertyChangedSignal("Visible"):Connect(function()
    pcall(function()
    if Options.AutoWebhook_Dungeon.Value then
        wait(1.25)
        for i,v in pairs(OtherItem) do
            if #v ~= 0 then
            local num = v
            local sum = 0
            for i = 1,#num do
                sum = sum + num[i]
            end
            name_count = tostring(i)..': x'..tonumber(sum)
            table.insert(Other_Num,name_count)
        end
    end
local timeInfo = os.date("*t")
local ExpPer = tostring(game.Players.LocalPlayer.PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text):split("%")
BBody = game:GetService("HttpService"):JSONEncode({
      content = nil,
      embeds = {{
          ["author"] = {
              ["name"] = "Crazy Day ",
              ["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s108-c-k-c0x00ffffff-no-rj"
          },
          ["title"] = "Anime Dimension Simulator", 
          ["icon_url"] = "https://tr.rbxcdn.com/41ece3967a06d47a84f4859d6262ea46/150/150/Image/Png",
          ["footer"] = {
              ["text"] = "Anime Dimension Simulator : " .. timeInfo.hour .. ":" .. timeInfo.min,
              ["icon_url"] = "https://tr.rbxcdn.com/41ece3967a06d47a84f4859d6262ea46/150/150/Image/Png"
         
          },
          ["color"] = tonumber(0xFFD700),
          ["url"] = "https://www.roblox.com/games/6938803436/MUSCLE-Anime-Dimensions-Simulator",
          ["fields"] = {
          
                {
                ["name"] = "Items Reward",
                ["value"] = "\n[+] "..table.concat( item_name,"\n[+] "),
                ["inline"] = false
                  
              },
              {
                ["name"] = "Other Reward",
                ["value"] = "[+] "..table.concat(Other_Num,"\n[+] "),
                ["inline"] = false
                  
              },
              {
                ["name"] = "Card",
                ["value"] = game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.CardsOwned.Text.."/"..game.Players.LocalPlayer.PlayerGui.MainGui.CenterUIFrame.Inventory.Frame.MaxCardsOwned.Text,
                ["inline"] = false
                  
              },
              {
                ["name"] = "Username",
                ["value"] = "||**"..game.Players.LocalPlayer.Name.."**||",
                ["inline"] = true
                  
              },
              {
                ["name"] = "Level",
                ["value"] = game.Players.LocalPlayer.leaderstats.Level.Value.." : "..ExpPer[1].."/100%",
                ["inline"] = true
                  
              },
              {
                ["name"] = "Other",
                ["value"] = "Gem : "..Gem().."\n".."Coin : "..Coin(),
                ["inline"] = true
                  
              },
            
          }
          }}
      })
  local response = http_request or request or HttpPost or syn.request
  response({
  Url = Options.Webhook.Value,
  Method = "POST",
  Headers = {
      ["Content-Type"] = "application/json"
  },
  Body = BBody
})  
end
end)
end)



coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()  
   if not game.Workspace:FindFirstChild("SAFE_PART") then
    local NO_CLIP_PART = Instance.new("Part",Workspace)
    NO_CLIP_PART.Name = "SAFE_PART"
    NO_CLIP_PART.CanCollide = false
    NO_CLIP_PART.Anchored = true
    NO_CLIP_PART.Transparency = 1
    NO_CLIP_PART.Size = Vector3.new(7.5,2,7.5)
   elseif game.Workspace:FindFirstChild("SAFE_PART") and not getgenv().SAFE_MODE and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 and game.PlaceId ~= 7338881230 then
    repeat wait() 
    game.Workspace:FindFirstChild("SAFE_PART").CFrame = getClosestMob().HumanoidRootPart.CFrame * CFrame.new(0,100,0)
    until getgenv().SAFE_MODE or not game.Workspace:FindFirstChild("SAFE_PART")
   end
end)
end
end))


coroutine.resume(coroutine.create(function()
    while wait() do pcall(function ()
        if Options.PlayMode.Value == "Safe Mode" then 
        if Options.Auto_SpeedRaid.Value or Options.Auto_FreeBossRush.Value or Options.AUTO_LEVEL_SELECT.Value
        or Options.AutoRaid.Value or Options.AutoFarmAndStart.Value then
local Health = game.Players.LocalPlayer.Character.Head.PlayerHealthBarGui.HealthText.Text
local HpSplit = string.split(Health, "/")
local HealthPercent = Options.Health.Value * (HpSplit[2] / 100)
if tonumber(game.Players.LocalPlayer.PlayerGui.UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) <= tonumber(HealthPercent) then
    getgenv().SAFE_MODE = true
    TweenPart(game.Workspace:FindFirstChild("SAFE_PART").Position,game.Workspace:FindFirstChild("SAFE_PART").CFrame)
else
    getgenv().SAFE_MODE = false
        end
    end
        if Options.PlayMode.Value ~= "Safe Mode" and getgenv().SAFE_MODE then
            getgenv().SAFE_MODE = false
        end
        end
    end)
end
end))


game.Players.LocalPlayer.OnTeleport:Connect(function(state)
    local QueueOnTeleport = queue_on_teleport or queueonteleport or (syn and syn.queue_on_teleport)
    if state == Enum.TeleportState.InProgress and getgenv().AUTOEXCUTE then
    QueueOnTeleport(
        "loadstring(game:HttpGet('https://raw.githubusercontent.com/Mangadexwannatest/CanislupusXHUB/main/Anime_Dimension_Simulator'))()"
    )
    end
end)



end
wait(0.75)
until game.CoreGui:FindFirstChild("CrazyDay")
end -- End Of If
