repeat task.wait() until game:IsLoaded()
if not string.find(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,"Anime Dimension") then return end

--// Auto Execute
do
    local execute_count
    if not execute_count then
        execute_count = "isaw2k"
        game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(state)
            local QueueOnTeleport = queue_on_teleport or queueonteleport or (syn and syn.queue_on_teleport)
            if getgenv()["Auto Execute"] and state == Enum.TeleportState.InProgress then
                QueueOnTeleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/Mangadexwannatest/CanislupusXHUB/main/ADS%20(Rework)'))()")
            end
        end)
    end
end
--// Loadscript
if not game:GetService("Players").LocalPlayer.Character then game:GetService("Players").LocalPlayer.CharacterAdded:Wait()wait()end
if game:WaitForChild("CoreGui"):FindFirstChild("CrazyDay") then return end
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local plr = game:GetService("Players").LocalPlayer
local plr_gui = plr.PlayerGui
local connet_immage
local firesignal = function(signal, arg2) if getconnections(signal) then firesignal(signal, arg2) end end
repeat
    if CoreGui:FindFirstChild("CrazyDay") or getgenv()["Executeing"] then return end getgenv()["Executeing"] = true
    --// Local normal
	local tween_s = game:GetService("TweenService")
	local tween_info
    local PlayerId,Game,Update = game:GetService("Players"):GetUserIdFromNameAsync(plr.Name) , "Anime Dimensions Simulator (Rework)" , " 1.0.0"
	local method_stage = 0
	local Tabs = {}
    local character = {}
	local item_rewards = {"`None      `"}
	local currency_rewards = {"`None     `"}
	local blacklist_characters = {"Naruto","Sasuke"}
	local blacklist_items = {"Gold","TraitToken","RaidCurrency","BossRushCurrency","Gem"}
	local Ignore_webhook = {}
	local card_Table = {}
    local dimension = {
        ["Current Dimension"] = {},
        ["Info"] = {},
		["main"] = {
			"Titan Dimension",
			"Demon Dimension",
			"Curse Dimension",
			"Villain Dimension",
			"Sword Dimension",
			"Ghoul Dimension",
			"Fate Dimension",
			"Slime Dimension",
			"Devil Dimension",
			"Pirate Dimension",
			"Alien Dimension",
			"Level Dimension"
		}
    }
    local raid = {
        ["Current Raid"] = {},
        ["Info"] = {},
		["main"] = {
			"Blue Devil Raid",
			"Titan Raid",
			"Tengoku Raid",
			"Hirito Raid",
			"Psycho Student Raid",
			"Buff Boy Raid",
			"Gear 5 Fluffy Raid"
		}
    }
	local current_speedraid
    local current_gui
	local gui_stage = 0

    local Instance_ScreenGui = Instance.new("ScreenGui")
    local Instance_ImageButton = Instance.new("ImageButton")
    local Instance_UICorner = Instance.new("UICorner")
    local Instance_UIStroke = Instance.new("UIStroke")
    local Instance_Frame = Instance.new("Frame")

    --// Make Folder
    if not isfolder("CrazyDay") then
		repeat makefolder("CrazyDay") task.wait() until isfolder("CrazyDay") makefolder("CrazyDay/"..Game)
    elseif isfolder("CrazyDay") and not isfolder("CrazyDay/"..Game) then
        makefolder("CrazyDay/"..Game)
    end
    --// Local function \ some script
    if game.PlaceId == 6938803436 or game.PlaceId == 7274690025 then
        --// Dimension Lobby
        for i,v in pairs(plr_gui.MainGui.CenterUIFrame.PlayFrame.Frame.PlayRoomFrame.MapSelectionScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") and v.Name ~= "MapSelectionTemplate" and v.Name ~= "Infinite Mode" then
                table.insert(dimension["Current Dimension"],{["x"] = {
                    ["Name"] = tostring(v.Name),
                    ["Lvl"] = tonumber(v:WaitForChild("LevelReq").Text:split(" ")[2])
                }
            })
        end
        table.sort(dimension["Current Dimension"],function (a,b)
            return a["x"]["Lvl"] < b["x"]["Lvl"]
        end)
    end
    for i = 1,#dimension["Current Dimension"] do
        for i,v in pairs(dimension["Current Dimension"][i]) do
            table.insert(dimension["Info"],v.Name)
        end
        writefile("CrazyDay/"..Game.."/Dimension.json",HttpService:JSONEncode(dimension["Info"]))
    end
    --// Raid Lobby
    elseif game.PlaceId == 7338881230 then
        for i,v in pairs(plr_gui.MainGui.CenterUIFrame.PlayFrame.Frame.PlayRoomFrame.MapSelectionScrollingFrame:GetChildren()) do
            if v:IsA("ImageButton") and v.Name ~= "MapSelectionTemplate" then
                table.insert(raid["Current Raid"],v.Name)
                writefile("CrazyDay/"..Game.."/Raids.json",HttpService:JSONEncode(raid["Info"]))
            end
        end
    end
	--// Get dimension \ raid from file
	if not dimension["xxx"] and not isfile("CrazyDay/"..Game.."/".."/Dimension.json") then
		dimension["xxx"] = dimension["main"]
	elseif not dimension["xxx"] and isfile("CrazyDay/"..Game.."/".."/Dimension.json") then
		if not string.find(readfile("CrazyDay/"..Game.."/".."/Dimension.json"),"Dimension") then
			dimension["xxx"] = dimension["main"]
		else
			dimension["xxx"] = {}
			for i,v in pairs(HttpService:JSONDecode(readfile("CrazyDay/"..Game.."/Dimension.json"))) do
				table.insert(dimension["xxx"],v)
			end
		end
	end
	if not raid["xxx"] and not isfile("CrazyDay/"..Game.."/".."/Raids.json") then
		raid["xxx"] = raid["main"]
	elseif not raid["xxx"] and isfile("CrazyDay/"..Game.."/".."/Raids.json") then
		if not string.find(readfile("CrazyDay/"..Game.."/".."/Raids.json"),"Raid") then
			raid["xxx"] = raid["main"]
		else
			raid["xxx"] = {}
			for i,v in pairs(HttpService:JSONDecode(readfile("CrazyDay/"..Game.."/Raids.json"))) do
				table.insert(raid["xxx"],v)
			end
		end
	end
	repeat task.wait() until dimension["xxx"] and raid["xxx"]
	local function toInteger(color)
		return math.floor(color.r*255)*256^2+math.floor(color.g*255)*256+math.floor(color.b*255)
	end
	local function toHex(color)
		local int = toInteger(color)

		local current = int
		local final = ""

		local hexChar = {
			"a", "b", "c", "d", "e", "f"
		}

		repeat local remainder = current % 16
			local char = tostring(remainder)

			if remainder >= 10 then
				char = hexChar[1 + remainder - 10]
			end

			current = math.floor(current/16)
			final = final..char
		until current <= 0

		return "0x"..string.reverse(final)
	end
    local function gui()
        if CoreGui:FindFirstChild("CrazyDay") then
            for i,v in pairs(CoreGui:FindFirstChild("CrazyDay"):GetChildren()) do
                if v.Name == "Frame" and i == 2 then
                    return v
                end
            end
        end
    end
    local function uiinfo(sectionI,sectionV)
        if gui() then
            current_gui = nil
            for i,v in pairs(gui().CanvasGroup:GetChildren()) do
                if v:IsA("ScrollingFrame") and i == sectionI then
                    for g,k in pairs(v:GetChildren()) do
                        if k.Name == "Frame" and k:FindFirstChild("TextLabel") and k.TextLabel.Text == sectionV then
                            current_gui = k:FindFirstChild("Frame")
                        end
                    end
                end
            end
        end
    end
    local function SetParagraphValue(sectionI,sectionV,sectionA,values)
        if gui() then
			uiinfo(sectionI,sectionV)
            for i,v in pairs(current_gui:GetDescendants()) do
                if v:IsA("TextLabel") and (v.Text == sectionA or string.find(v.Text,sectionA)) then
                    for g,k in pairs(v.Parent:GetChildren()) do
                        if g == 4 and k:IsA("TextLabel") then
                            k.Text = values
                        end
                    end
                end
            end
        end
    end
    local function BlackScreen_Gui()
        if CoreGui:FindFirstChild("CrazyDay") then
            for i,v in next,CoreGui:FindFirstChild("CrazyDay"):GetChildren() do
                if v.Name == "Black Screen" then
                    return v
                end
            end
        end
    end
	local function stringofnum(values)
		local tablead = {"K","M","B"}
		local num = 1
			for i,v in pairs(tablead) do
				values = string.gsub(values, v ,function ()
				num = num * (10 ^ (i * 3))
				return ''
			end)
		end
		return num * values
	end
	local function roundNumber(numberHere,Notation)
		local DigitsInNumber = math.max(math.ceil(math.log10(numberHere+1)),1)
		local FormattedNumber
		local NotationToUse
		if Notation == 1 then
			FormattedNumber = string.sub(tostring(numberHere/10^(DigitsInNumber-1)),1,3)
			NotationToUse = FormattedNumber.."e"..DigitsInNumber-1
		elseif (Notation and Notation == 2) or not Notation then
			local TableOfLetters = {
				"",
				"K",
				"M",
				"B",
				"T",
				"Qa",
				"Qi",
				"Sx",
				"Sp",
				"Oc",
				"No",
				"Dc",
				"Ud",
				"Dd"
			}
			local NumberOfDigitsToShow = 1.5*(DigitsInNumber%3)^2 - 3.5*(DigitsInNumber%3) + 5
			FormattedNumber = string.sub(tostring(numberHere/10^(DigitsInNumber-1)),1,NumberOfDigitsToShow) 
			local FinalNumber = string.sub(FormattedNumber*(10^((DigitsInNumber-1)%3)),1,NumberOfDigitsToShow) 
			if DigitsInNumber == 3 then 
				FinalNumber = tostring(math.ceil(tonumber(FinalNumber)))
			end
			NotationToUse = FinalNumber..TableOfLetters[math.ceil(DigitsInNumber/3)]
		end
		return NotationToUse
	end
	local function update_card()
		if getgenv()["Auto Equip"] then
			local wdiwaji2 = plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.EquippedOverlay
			if ReplicatedStorage:WaitForChild(plr.Name.."StatDisplay").CardsOwned.Value >= 3 then
				if (wdiwaji2.Slot1.ItemImage.Image == "" or wdiwaji2.Slot2.ItemImage.Image == "" or wdiwaji2.Slot3.ItemImage.Image == "") then
					return true
				else
					return false
				end
			elseif ReplicatedStorage:WaitForChild(plr.Name.."StatDisplay").CardsOwned.Value == 2 then
				if (wdiwaji2.Slot1.ItemImage.Image == "" or wdiwaji2.Slot2.ItemImage.Image == "") then
					return true
				else
					return false
				end
			elseif ReplicatedStorage:WaitForChild(plr.Name.."StatDisplay").CardsOwned.Value == 1 then
				if (wdiwaji2.Slot1.ItemImage.Image == "") then
					return true
				else
					return false
				end
			end
		else
			return false
		end
	end
	local function current_amout()
		local XAdda2 = {}
		for i,v in pairs(card_Table) do
			if v == getgenv()["Max Upgrade"] then
				table.insert(XAdda2,i)
			end
		end
		return #XAdda2
	end
	local function Max_current_amout()
		local XAdda2 = {}
		for i,v in pairs(card_Table) do
			table.insert(XAdda2,i)
		end
		return #XAdda2
	end
	local function wait_for_a_second()
		if getgenv()["Auto Equip"] and update_card() then
			return true
		elseif getgenv()["Auto Upgrade"] and current_amout() ~= Max_current_amout() then
			return true
		else
			return false
		end
	end
	local function sell_card(tableMe)
		if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then
			for i,v in ipairs(plr_gui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
				if v:IsA("ImageButton") and v.Name ~= "CardInventorySlot" then
					repeat task.wait() until not wait_for_a_second()
					firesignal(v.MouseButton1Down,plr)
					task.wait(0.015)
					for Rarity,_ in next,tableMe do
						if plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay.Rarity.Text == Rarity then
							game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("SellCard",v.Name)
						end
					end
				end
			end
		end
	end
	local function unequip_cards()
		if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then return end
		for i,v in ipairs(ReplicatedStorage:WaitForChild(plr.Name.."StatDisplay"):GetChildren()) do
			if string.find(v.Name,"Slot") and v.Value ~= "" then
				game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("UnequipCard",v.Value)
			end
		end
	end
    local function getClosestMob()
        local dist, thing = math.huge
            for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                    local mag = (plr.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            end
        return thing
    end
    local function getClosestBoss()
        local dist, thing = math.huge
            for i, v in next,Workspace.Folders.Monsters:GetChildren() do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v.EnemyHealthBarGui.Enabled == false then
                    local mag = (plr.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            end
        return thing
    end
    local function getClosestobJect()
        local dist, thing = math.huge
            for i, v in next,Workspace.Folders.Monsters:GetChildren() do
                if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 and v:FindFirstChild("Head") and v.Head.Transparency ~= 10 then
                    local mag = (plr.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
                    if mag < dist then
                        dist = mag
                        thing = v
                    end
                end
            end
        return thing
    end
    local  function getNormalEnemy()
        for i,v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
            if v:FindFirstChildOfClass("BillboardGui") and tonumber(v.EnemyHealthBarGui.HealthText.Text) > 0 then
                return v
            end
        end
    end
	local function setCollide(value)
		for i,v in ipairs(plr.Character:GetChildren()) do
			if v:IsA("BasePart") and v.CanCollide ~= value then
				v.CanCollide = value
			end
		end
	end
	local function color_Rarity(Rar)
		if Rar == "Common" then
			return "⚪"
		elseif Rar == "Uncommon" then
			return "🟢"
		elseif Rar == "Rare" then
			return "🔵"
		elseif Rar == "Epic" then
			return "🟣"
		elseif Rar == "Legendary" then
			return "🟠"
		elseif Rar == "Mythic" then
			return "🔴"
		end
	end
	local function boss_bar()
		return plr_gui.BattleGui.CenterUIFrame.BossHealthFrame.Visible
	end
	local function dist_enemy(part)
		return (plr.Character.HumanoidRootPart.Position - part.Position).magnitude
	end
	local function current_map()
		return Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name
	end
	local function map_split()
		if string.find(Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name,"Dimension") then
			return Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name:split("Dimension")[1]
		elseif string.find(Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name,"Raid") then
			return Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name:split("Raid")[1]
		else
			return Workspace:WaitForChild("GameMap"):FindFirstChildOfClass("Model").Name
		end
	end
	local function current_stage()
		return plr.RespawnLocation.Name:split("SpawnLocation")[2]
	end
	local function tween_function(partX,cframeX,speedX)
		tween_info = tween_s:Create(plr.Character.HumanoidRootPart,TweenInfo.new((partX.Position - plr.Character.HumanoidRootPart.Position).Magnitude/speedX,Enum.EasingStyle.Linear),{CFrame = partX.CFrame * cframeX})
	end
	local function currnet_character_set()
		repeat task.wait() until CoreGui:FindFirstChild("CrazyDay")
		if not isfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json") then return end
		if not string.find(readfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json"),"Character") then return end
		local aoDkaw = HttpService:JSONDecode(readfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json"))
		SetParagraphValue(2,"Character","Current Character",aoDkaw["Character1"].."\n"..aoDkaw["Character2"].."\n"..aoDkaw["Character3"])
	end
    --// create gui function running
    if CoreGui:FindFirstChild("function running") == nil then
        getgenv()["Script Loaded"] = true
        --// ScreenGui Instance
        Instance_ScreenGui.Name = "function running"
        Instance_ScreenGui.Parent = CoreGui
        Instance_ScreenGui.Enabled = false
        Instance_ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    end
	--// Load Fluent Gui
	local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
	local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
	--// local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))() Not in use
	local function Notify(Title,Content,SubTitle,Duration)
		Fluent:Notify({Title = Title, Content = (Content or [[]]), SubContent = (SubTitle or nil), Duration = (Duration or 5)})
	end
	local Options = Fluent.Options
	local Window = Fluent:CreateWindow({
		Title = Game..Update, SubTitle = " [YT : @crazyday3693]",
		TabWidth = 160, Size = UDim2.fromOffset(580, 460),
		Acrylic = false,
		Theme = "Amethyst",
		MinimizeKey = nil
	})
	Tabs = {
		General = Window:AddTab({ Title = "General", Icon = "rbxassetid://17630008922"}),
		Game = Window:AddTab({ Title = "Game", Icon = "rbxassetid://17629899973"}),
		Skill = Window:AddTab({ Title = "Skill", Icon = "rbxassetid://17789519521"}),
		Webhook = Window:AddTab({ Title = "Webhook", Icon = "rbxassetid://17789550683"}),
		Settings = Window:AddTab({ Title = "Settings", Icon = "rbxassetid://17630002584"})
	}

	local Dimensions_Section = Tabs.General:AddSection("Dimension")
	local Raid_Section = Tabs.General:AddSection("Raid")
	local Misc_Section = Tabs.General:AddSection("Misc")
	local Farm_Section = Tabs.Game:AddSection("Farm")
	local Character_Section = Tabs.Game:AddSection("Character")
	local Card_Section = Tabs.Game:AddSection("Card")
	local MiscGame_Section = Tabs.Game:AddSection("Misc")
	local Skill_Section = Tabs.Skill:AddSection("Skill")
	local Webhook_Section = Tabs.Webhook:AddSection("Webhook")
	local Interfaces_Section = Tabs.Settings:AddSection("Interfaces")
	local Settings_Section = Tabs.Settings:AddSection("Settings")
	--// Get Gui
	for i,v in pairs(CoreGui:GetChildren()) do
		if v.Name == "ScreenGui" or v.Name == "CrazyDay" then
			for k,g in next,v:GetDescendants() do
				if g.Name == "TextLabel" and (g.Text == Game..Update or string.find(g.Text,Game)) then
					for _,imageidof in pairs(g.Parent.Parent:GetChildren()) do
						if imageidof.Name == "TextButton" and imageidof:FindFirstChild("Icon") and imageidof.Icon.Image == "rbxassetid://9886659276" then
							imageidof.Visible = false
						end
					end
				end
			end
		end
	end
	while task.wait() do
		if CoreGui:FindFirstChild("CrazyDay") == nil then
			for i,v in next,CoreGui:GetChildren() do
				if v.Name == "ScreenGui" then
					for k,g in next,v:GetDescendants() do
						if g.Name == "TextLabel" and (g.Text == Game..Update or string.find(g.Text,Game)) then
							g.Parent.Parent.Parent.Parent.Name = "CrazyDay"
						end
					end
				end
			end
		end
		if game:GetService("CoreGui"):FindFirstChild("CrazyDay") then
			Notify("Successfully loaded","Time : "..tostring(Workspace.DistributedGameTime))
			break
		end
	end
	do
		getgenv()["Loading Configs"] = true
	end
	--// Settings Tab
	Settings_Section:AddToggle("Auto Save", {
		Title = "Auto Save",
		Description = "Automatically saves all configuration settings.",
		Default = true,
		Callback = function (value)
			if not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Interfaces_Section:AddDropdown("Them", {
		Title = "Them",
		Description = "Changes the interface theme.",
		Values = {"Dark", "Darker", "Light", "Aqua", "Amethyst", "Rose"},
		Multi = false,
		Default = 5,
		Callback = function (value)
			Fluent:SetTheme(value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Interfaces_Section:AddToggle("Acrylic", {
		Title = "Acrylic",
		Description = "The blurred background requires graphic quallity 8 +.",
		Default = false,
		Callback = function (value)
			Fluent:ToggleAcrylic(value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Interfaces_Section:AddToggle("Transparency", {
		Title = "Transparency",
		Description = "Makes the interface transparent.",
		Default = false,
		Callback = function (value)
			Fluent:ToggleTransparency(value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	--// General Tabs
	Dimensions_Section:AddDropdown("Current Dimension", {
		Title = "Select Dimension",
		Description = nil,
		Values = dimension["xxx"],
		Multi = false,
		Default = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if Options["Current Difficulty"] then
				if (value == "Sword Dimension" or "Ghoul Dimension" or "Fate Dimension" or "Slime Dimension") and Options["Current Difficulty"].Value == "Hard" then
					Options["Current Difficulty"]:SetValue("Easy")
				elseif (value == "Devil Dimension" or value == "Pirate Dimension" or value == "Alien Dimension" or value == "Level Dimension") and Options["Current Difficulty"].Value ~= "Nightmare" then
					Options["Current Difficulty"]:SetValue("Nightmare")
				end
			end
		end
	})
	Dimensions_Section:AddDropdown("Current Difficulty", {
		Title = "Select Difficulty",
		Description = nil,
		Values = {"Easy", "Hard", "Nightmare"},
		Multi = false,
		Default = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if Options["Current Dimension"] then
				if (Options["Current Dimension"].Value == "Sword Dimension" or Options["Current Dimension"].Value == "Ghoul Dimension" or Options["Current Dimension"].Value == "Fate Dimension" or Options["Current Dimension"].Value == "Slime Dimension") and value == "Hard" then
					Options["Current Difficulty"]:SetValue("Easy")
				elseif (Options["Current Dimension"].Value == "Devil Dimension" or Options["Current Dimension"].Value == "Pirate Dimension" or Options["Current Dimension"].Value == "Alien Dimension" or Options["Current Dimension"].Value == "Level Dimension") and value ~= "Nightmare" then
					Options["Current Difficulty"]:SetValue("Nightmare")
				end
			end
		end
	})
	Dimensions_Section:AddToggle("Hard core", {
		Title = "Hard core",
		Description = nil,
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Dimensions_Section:AddToggle("Friends Only", {
		Title = "Friends Only",
		Description = nil,
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Dimensions_Section:AddToggle("Auto Retry", {
		Title = "Auto Retry",
		Description = "Automatically replay the game if the game ends.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Dimensions_Section:AddToggle("Auto Join (Current Dimension)", {
		Title = "Auto Join (Current Dimension)",
		Description = "Automatically creates and starts the selected dimension.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Dimensions_Section:AddToggle("Auto Join (Highnest)", {
		Title = "Auto Join (Highnest)",
		Description = "Automatically create and start the highest dimension.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if value and (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then
				local Lvl = plr.leaderstats.Level.Value
				if Lvl > 0 and Lvl < 6 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Titan Dimension"
				elseif Lvl > 5 and Lvl < 11 then
					Options["Current Difficulty"].Value = "Hard"
					Options["Current Dimension"].Value = "Titan Dimension"
				elseif Lvl > 10 and Lvl < 16 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Titan Dimension"
				elseif Lvl > 15 and Lvl < 21 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Demon Dimension"
				elseif Lvl > 20 and Lvl < 26 then
					Options["Current Difficulty"].Value = "Hard"
					Options["Current Dimension"].Value = "Demon Dimension"
				elseif Lvl > 25 and Lvl < 31 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Demon Dimension"
				elseif Lvl > 30 and Lvl < 36 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Curse Dimension"
				elseif Lvl > 35 and Lvl < 41 then
					Options["Current Difficulty"].Value = "Hard"
					Options["Current Dimension"].Value = "Curse Dimension"
				elseif Lvl > 40 and Lvl < 46 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Curse Dimension"
				elseif Lvl > 45 and Lvl < 51 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Villain Dimension"
				elseif Lvl > 50 and Lvl < 56 then
					Options["Current Difficulty"].Value = "Hard"
					Options["Current Dimension"].Value = "Villain Dimension"
				elseif Lvl > 55 and Lvl < 61 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Villain Dimension"
				elseif Lvl > 60 and Lvl < 68 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Sword Dimension"
				elseif Lvl > 67 and Lvl < 76 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Sword Dimension"
				elseif Lvl > 75 and Lvl < 83 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Ghoul Dimension"
				elseif Lvl > 82 and Lvl < 91 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Ghoul Dimension"
				elseif Lvl > 90 and Lvl < 98 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Fate Dimension"
				elseif Lvl > 97 and Lvl < 106 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Fate Dimension"
				elseif Lvl > 105 and Lvl < 113 then
					Options["Current Difficulty"].Value = "Easy"
					Options["Current Dimension"].Value = "Slime Dimension"
				elseif Lvl > 112 and Lvl < 121 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Slime Dimension"
				elseif Lvl > 120 and Lvl < 131 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Devil Dimension"
				elseif Lvl > 130 and Lvl < 141 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Pirate Dimension"
				elseif Lvl > 140 and Lvl < 151 then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Alien Dimension"
				elseif Lvl > 150  then
					Options["Current Difficulty"].Value = "Nightmare"
					Options["Current Dimension"].Value = "Level Dimension"
				end
			end
		end
	})
	Raid_Section:AddDropdown("Current Raid", {
		Title = "Select Raid",
		Description = nil,
		Values = raid["xxx"],
		Multi = false,
		Default = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Raid_Section:AddToggle("Auto Join (Raid)", {
		Title = "Auto Join (Raid)",
		Description = "Automatically creates and starts the selected raid",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Raid_Section:AddToggle("Auto Join (Raid Challenge)", {
		Title = "Auto Join (Raid Challenge)",
		Description = "Automatically join the raid challenge if reward available.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Raid_Section:AddToggle("Auto Join (Speed Raid)", {
		Title = "Auto Join (Speed Raid)",
		Description = "Automatically join the speed raid if not cooldown.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Misc_Section:AddToggle("Auto Join (Boss Rush)", {
		Title = "Auto Join (Boss Rush)",
		Description = "Automatically join the boss rush if have free ticket.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Misc_Section:AddToggle("Auto Join (Infinite Mode)", {
		Title = "Auto Join (Infinite Mode)",
		Description = "Automatically join the infinite mode if reward available.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Misc_Section:AddButton({
		Title = "Return to Lobby",
		Description = "Press the button to return to the lobby.",
		Callback = function()
			Window:Dialog({
				Title = "Notify",
				Content = "Do you want to teleport to the lobby?",
				Buttons = {
					{
						Title = "Yes",
						Callback = function()
							game:GetService("TeleportService"):Teleport(6938803436)
						end
					},
					{
						Title = "No",
						Callback = function()

						end
					}
				}
			})
		end
	})
	--// Game Tabs
	Farm_Section:AddDropdown("Current Farm Mode", {
		Title = "Select Mode",
		Description = nil,
		Values = {"Normal Mode","Bring Mode"},
		Multi = false,
		Default = 2,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["On Bringing"] = false
			if tween_info then
				tween_info:Cancel()
			end
			method_stage = 0
		end
	})
	Farm_Section:AddDropdown("Current Method", {
		Title = "Select Method",
		Description = nil,
		Values = {"Behind","Front","Over","Under"},
		Multi = false,
		Default = 3,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Farm_Section:AddSlider("Current Distance",{
		Title = "Current Distance",
		Description = nil,
		Default = 6.55,
		Min = 0,
		Max = 10,
		Rounding = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Farm_Section:AddSlider("Health to Safe",{
		Title = "Health",
		Description = "Choose the health \nif player below x % HP",
		Default = 50,
		Min = 10,
		Max = 100,
		Rounding = 0,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Farm_Section:AddToggle("Auto Set Distance", {
		Title = "Auto Set Distance",
		Description = "Automatically set the distance calculated from the size of the enemy.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Farm_Section:AddToggle("Dodge Skill", {
		Title = "Dodge Skill",
		Description = "Dodge all enemy skills.",
		Default = true,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Farm_Section:AddToggle("Auto Safe", {
		Title = "Auto Safe",
		Description = "Stop all farm if player below x % HP.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if not value then
				getgenv()["On Safe Mode"] = false
			end
		end
	})
	Character_Section:AddParagraph({Title = "Current Character", Content = "nil\nnil\nnil"})
	coroutine.resume(coroutine.create(currnet_character_set))
	Character_Section:AddToggle("Auto Equip Character", {
		Title = "Auto Equip Character",
		Description = "Automatically equips characters.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Character_Section:AddButton({
		Title = "Save Character",
		Description = "Press the button to save your characters.",
		Callback = function()
			character["Character1"] = ReplicatedStorage[plr.Name.."StatDisplay"].CharacterName.Value
			character["Character2"] = ReplicatedStorage[plr.Name.."StatDisplay"].AssistCharacterName1.Value
			character["Character3"] = ReplicatedStorage[plr.Name.."StatDisplay"].AssistCharacterName2.Value
			Notify("Successfully saved",character["Character1"].."\n"..character["Character2"].."\n"..character["Character3"])
			writefile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json",HttpService:JSONEncode(character))
			SetParagraphValue(2,"Character","Current Character",character["Character1"].."\n"..character["Character2"].."\n"..character["Character3"])
		end
	})
	Card_Section:AddDropdown("Current Rarity", {
		Title = "Select Rarity",
		Description = nil,
		Values = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic"},
		Multi = true,
		Default = {"Common", "Uncommon"},
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Rarity Insert"] = true
			if Options["Auto Sell"] and Options["Auto Sell"].Value then
				sell_card(value)
			end
		end
	})
	Card_Section:AddSlider("Max Upgrade",{
		Title = "Current Max Upgrade",
		Description = "Select the value you want for upgrade your card.",
		Default = 5,
		Min = 1,
		Max = 25,
		Rounding = 0,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Max Upgrade"] = value
		end
	})
	Card_Section:AddToggle("Auto Sell", {
		Title = "Auto Sell",
		Description = "Automatically sell all of the selected cards (rarity).",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if value then
				sell_card(Options["Current Rarity"].Value)
			end
		end
	})
	Card_Section:AddToggle("Auto Equip", {
		Title = "Auto Equip",
		Description = "Automatically equip your best card.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Auto Equip"] = value
			if value then
				unequip_cards()
			end
		end
	})
	Card_Section:AddToggle("Auto Upgrade", {
		Title = "Auto Upgrade",
		Description = "Automatically upgrade all your equipped cards.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Auto Upgrade"] = value
		end
	})
	MiscGame_Section:AddToggle("Auto Claim (Quest)", {
		Title = "Auto Claim (Quest)",
		Description = "Automatically claim all of the daily // weekly quests.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	MiscGame_Section:AddToggle("Auto Claim (Speed Raid)", {
		Title = "Auto Claim (Speed Raid)",
		Description = "Automatically claim all of the speed raid reward.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	MiscGame_Section:AddToggle("Dash no cooldown", {
		Title = "Dash no cooldown",
		Description = "Makes your dash have no cooldown.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			ReplicatedStorage:WaitForChild(plr.Name .. "StatDisplay"):WaitForChild("No_DashCooldown").Value = value
		end
	})
	MiscGame_Section:AddButton({
		Title = "Redeem All Code",
		Description = "Press the button to redeem all code.",
		Callback = function()
			if game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025 then return end
			Code = {}
			for i,v in pairs(Workspace.Leaderboards.MilestoneBoard.Center.Surface.ScrollingFrame:GetChildren()) do
				if v.ClassName == "Frame" and v.MilestoneCode.Text ~= "LOCKED" then
					game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("RedeemPromoCode",v.MilestoneCode.Text)
					table.insert(Code,v.MilestoneCode.Text)
				end
			end
			Notify("Successfully redeem code",table.concat(Code,"\n"))
		end
	})
	--// Skill Tabs
	Skill_Section:AddDropdown("Current Assists", {
		Title = "Select Skill (Assists / Fruits)",
		Description = nil,
		Values = {"Assist1", "Assist2", "Fruit1", "Fruit2"},
		Multi = true,
		Default = {"Assist1", "Assist2", "Fruit1", "Fruit2"},
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Assist Insert"] = true
		end
	})
	Skill_Section:AddDropdown("Current Attack Method", {
		Title = "Current Attack Method",
		Description = nil,
		Values = {"Remote", "Click"},
		Multi = false,
		Default = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddDropdown("Skill One", {
		Title = "Skill One",
		Values = {"1","2","3","4","5"},
		Multi = false,
		Default = 1,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddDropdown("Skill Two", {
		Title = "Skill Two",
		Values = {"1","2","3","4","5"},
		Multi = false,
		Default = 2,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddDropdown("Skill Third", {
		Title = "Skill Third",
		Values = {"1","2","3","4","5"},
		Multi = false,
		Default = 3,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddDropdown("Skill Fourth", {
		Title = "Skill Fourth",
		Values = {"1","2","3","4","5"},
		Multi = false,
		Default = 4,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddDropdown("Skill Fifth", {
		Title = "Skill Fifth",
		Values = {"1","2","3","4","5"},
		Multi = false,
		Default = 5,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddSlider("Current Skill Distance",{
		Title = "Current Skill Distance",
		Description = "Choose the distance to attack and skill the enemy.",
		Default = 35,
		Min = 15,
		Max = 150,
		Rounding = 0,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Skill_Section:AddToggle("Auto Skill", {
		Title = "Auto Skill",
		Description = "Automatically attacks and skills on enemies.",
		Default = true,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	--// Webhook Tabs
	Webhook_Section:AddInput("Webhook URL", {
		Title = "Webhook URL.",
		Description = nil,
		Default = nil,
		Placeholder = "Url.",
		Numeric = false,
		Finished = false,
		Callback = function(value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Webhook_Section:AddColorpicker("Webhook Color", {
		Title = "Webhook Color",
		Description = "Choose the color of the webhook.",
		Default = Color3.fromRGB(125, 125, 125),
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
		end
	})
	Webhook_Section:AddDropdown("Current Ignore Action", {
		Title = "Select Ignore",
		Description = "Select the action about webhook that you want to ignore.",
		Values = {"Match Result", "Upgrade Card"},
		Multi = true,
		Default = {nil},
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			Ignore_webhook = {}
			for i,v in pairs(value) do
				table.insert(Ignore_webhook,i)
			end
		end
	})
	Webhook_Section:AddToggle("Send Webhook", {
		Title = "Send Webhook",
		Description = "Send a notifaction to your discord.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if value and Options["Webhook URL"] then
				if not string.find(Options["Webhook URL"].Value,"https://discord.com/api/webhooks") then 
					Notify("Send Webhook (Error)","URL does not match the database.") 
					Options["Send Webhook"]:SetValue(false)
				end
			end
		end
	})
	Webhook_Section:AddButton({
		Title = "Check Webhook",
		Description = "Press the button see if the webhook working.",
		Callback = function()
			if not string.find(Options["Webhook URL"].Value,"https://discord.com/api/webhooks") then return Notify("Send Webhook (Error)","URL does not match the database.") end
			local Data = game:GetService("HttpService"):JSONEncode({
				["username"] = "Anime Dimensions Simulator : Notification",
				["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
				content = nil,
				embeds = {{
				  ["title"] = nil,
				  ["color"] = tonumber(toHex(Options["Webhook Color"].Value)) or 0x7d7d7d,
				  ["description"] = nil,
				  ["footer"] = {
					["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
					["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
				  },
				  ["thumbnail"] = {
					["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
				  },
				  ["fields"] = {
					{
						["name"] = "__**Status**__",
						["value"] = "__**||Username : "..tostring(plr.Name).."||**__\n`The webhook is working.`",
						["inline"] = false
					}
				},
			}}
			})
			local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
			response({Url = Options["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"} ,Body = Data})
		end
	})
	--// Settings Tabs
	Settings_Section:AddToggle("Auto Execute", {
		Title = "Auto Execute",
		Description = "Automatically execute the script while teleporting.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			getgenv()["Auto Execute"] = value
		end
	})
	Settings_Section:AddToggle("Auto Hide Gui", {
		Title = "Auto Hide Gui",
		Description = "Automatically hide your gui after execute the script.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if value and gui() and gui_stage == 0 and CoreGui:WaitForChild("CrazyDay"):FindFirstChild("ToggleClose") then
				gui_stage += 1
				gui().Visible = false
				CoreGui:WaitForChild("CrazyDay"):FindFirstChild("ToggleClose").Image = "rbxassetid://17789926070"
			end
		end
	})
	Settings_Section:AddToggle("Black Screen", {
		Title = "Black Screen",
		Description = "Disable 3DRendering for best performance.",
		Default = false,
		Callback = function (value)
			if Options["Auto Save"].Value and not getgenv()["Loading Configs"] then
				SaveManager:Save("Configs")
			end
			if BlackScreen_Gui() then
				BlackScreen_Gui().Visible = value
				RunService:Set3dRenderingEnabled(not value)
			end
		end
	})
	Settings_Section:AddButton({
		Title = "Reset all configs",
		Description = "Press the button to reset all configuration settings.",
		Callback = function()
			Window:Dialog({
				Title = "Notify",
				Content = "Do you want to reset all configuration?",
				Buttons = {
					{
						Title = "Yes",
						Callback = function()
							writefile("CrazyDay/"..Game.."/"..PlayerId.."/settings/Configs.json",[[
							{"objects":[{"idx":"Current Dimension","type":"Dropdown","mutli":false,"value":"Titan Dimension"},{"idx":"Current Farm Mode","type":"Dropdown","mutli":false,"value":"Bring Mode"},{"idx":"Auto Save","type":"Toggle","value":true},{"idx":"Auto Claim (Quest)","type":"Toggle","value":false},{"idx":"Them","type":"Dropdown","mutli":false,"value":"Amethyst"},{"idx":"Auto Equip","type":"Toggle","value":false},{"idx":"Current Difficulty","type":"Dropdown","mutli":false,"value":"Easy"},{"idx":"Health to Safe","type":"Slider","value":"50"},{"idx":"Auto Join (Raid)","type":"Toggle","value":false},{"idx":"Current Distance","type":"Slider","value":"6.5"},{"idx":"Show information","type":"Toggle","value":false},{"idx":"Transparency","type":"Toggle","value":false},{"idx":"Skill Two","type":"Dropdown","mutli":false,"value":"2"},{"idx":"Auto Set Distance","type":"Toggle","value":false},{"idx":"Current Assists","type":"Dropdown","mutli":true,"value":{"Assist2":true,"Fruit1":true,"Fruit2":true,"Assist1":true}},{"idx":"Hard core","type":"Toggle","value":false},{"idx":"Auto Join (Speed Raid)","type":"Toggle","value":false},{"idx":"Acrylic","type":"Toggle","value":false},{"idx":"Auto Hide Gui","type":"Toggle","value":false},{"idx":"Auto Equip Character","type":"Toggle","value":false},{"idx":"Auto Execute","type":"Toggle","value":true},{"idx":"Skill Third","type":"Dropdown","mutli":false,"value":"3"},{"idx":"Current Skill Distance","type":"Slider","value":"35"},{"idx":"Auto Skill","type":"Toggle","value":true},{"idx":"Auto Sell","type":"Toggle","value":false},{"idx":"Auto Join (Current Dimension)","type":"Toggle","value":false},{"idx":"Webhook URL","type":"Input","text":""},{"idx":"Auto Join (Infinite Mode)","type":"Toggle","value":false},{"idx":"Current Ignore Action","type":"Dropdown","mutli":true,"value":[]},{"idx":"Send Webhook","type":"Toggle","value":false},{"idx":"Current Attack Method","type":"Dropdown","mutli":false,"value":"Remote"},{"idx":"Skill One","type":"Dropdown","mutli":false,"value":"1"},{"idx":"Skill Fifth","type":"Dropdown","mutli":false,"value":"5"},{"idx":"Auto Retry","type":"Toggle","value":false},{"idx":"Dodge Skill","type":"Toggle","value":true},{"idx":"Black Screen","type":"Toggle","value":false},{"idx":"Dash no cooldown","type":"Toggle","value":false},{"idx":"Current Raid","type":"Dropdown","mutli":false,"value":"Blue Devil Raid"},{"idx":"Auto Claim (Speed Raid)","type":"Toggle","value":false},{"idx":"Auto Safe","type":"Toggle","value":false},{"idx":"Current Rarity","type":"Dropdown","mutli":true,"value":{"Uncommon":true,"Common":true}},{"idx":"Max Upgrade","type":"Slider","value":"5"},{"idx":"Auto Join (Highnest)","type":"Toggle","value":false},{"idx":"Auto Upgrade","type":"Toggle","value":false},{"idx":"Webhook Color","type":"Colorpicker","transparency":0,"value":"7d7d7d"},{"idx":"Current Method","type":"Dropdown","mutli":false,"value":"Over"},{"idx":"Auto Join (Raid Challenge)","type":"Toggle","value":false},{"idx":"Auto Join (Boss Rush)","type":"Toggle","value":false},{"idx":"Skill Fourth","type":"Dropdown","mutli":false,"value":"4"},{"idx":"Friends Only","type":"Toggle","value":false}]}
						    ]])
							Notify("Successfully reseted configs")
							task.wait(0.35)
							do
								SaveManager:Load("Configs")
							end
							Notify("Successfully loaded configs")
						end
					},
					{
						Title = "No",
						Callback = function()
							-- /// setclipboard(tostring(readfile("CrazyDay/"..Game.."/"..PlayerId.."/settings/Configs.json")))
						end
					}
				}
			})
		end
	})
	--//load configs
	do
		SaveManager:SetLibrary(Fluent)
		SaveManager:SetFolder("CrazyDay/"..Game.."/"..PlayerId)
		SaveManager:IgnoreThemeSettings()
		Window:SelectTab(1)
		getgenv()["Successfully loaded"] = true
		if isfile("CrazyDay/"..Game.."/"..PlayerId.."/settings/Configs.json") then
			SaveManager:Load("Configs")
		end
		getgenv()["Loading Configs"] = false
	end
	--// Set Multiple Dropdown
	if not getgenv()["Assist Insert"] then
		if #Options["Current Assists"].Value == 1 then
			Options["Current Assists"]:SetValue({
				[Options["Current Assists"].Value[1]] = true
			})
		elseif #Options["Current Assists"].Value == 2 then
			Options["Current Assists"]:SetValue({
				[Options["Current Assists"].Value[1]] = true,
				[Options["Current Assists"].Value[2]] = true
			})
		elseif #Options["Current Assists"].Value == 3 then
			Options["Current Assists"]:SetValue({
				[Options["Current Assists"].Value[1]] = true,
				[Options["Current Assists"].Value[2]] = true,
				[Options["Current Assists"].Value[3]] = true
			})
		elseif #Options["Current Assists"].Value == 4 then
			Options["Current Assists"]:SetValue({
				[Options["Current Assists"].Value[1]] = true,
				[Options["Current Assists"].Value[2]] = true,
				[Options["Current Assists"].Value[3]] = true,
				[Options["Current Assists"].Value[4]] = true
			})
		end
	end
	if not getgenv()["Rarity Insert"] then
		if #Options["Current Rarity"].Value == 1 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true
			})
		elseif #Options["Current Rarity"].Value == 2 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true,
				[Options["Current Rarity"].Value[2]] = true
			})
		elseif #Options["Current Rarity"].Value == 3 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true,
				[Options["Current Rarity"].Value[2]] = true,
				[Options["Current Rarity"].Value[3]] = true
			})
		elseif #Options["Current Rarity"].Value == 4 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true,
				[Options["Current Rarity"].Value[2]] = true,
				[Options["Current Rarity"].Value[3]] = true,
				[Options["Current Rarity"].Value[4]] = true
			})
		elseif #Options["Current Rarity"].Value == 5 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true,
				[Options["Current Rarity"].Value[2]] = true,
				[Options["Current Rarity"].Value[3]] = true,
				[Options["Current Rarity"].Value[4]] = true,
				[Options["Current Rarity"].Value[5]] = true
			})
		elseif #Options["Current Rarity"].Value == 6 then
			Options["Current Rarity"]:SetValue({
				[Options["Current Rarity"].Value[1]] = true,
				[Options["Current Rarity"].Value[2]] = true,
				[Options["Current Rarity"].Value[3]] = true,
				[Options["Current Rarity"].Value[4]] = true,
				[Options["Current Rarity"].Value[5]] = true,
				[Options["Current Rarity"].Value[6]] = true
			})
		end
	end
		repeat task.wait() until gui()
		for i,v in pairs(CoreGui:FindFirstChild("CrazyDay"):GetChildren()) do
			if v:IsA("Frame") then
				v.ZIndex = 999
			end
		end
		--// Instance Black Screen
		Instance_Frame.Name = "Black Screen"
		Instance_Frame.Parent = CoreGui:FindFirstChild("CrazyDay")
		Instance_Frame.AnchorPoint = Vector2.new(1, 1)
		Instance_Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Instance_Frame.BorderSizePixel = 0
		Instance_Frame.ZIndex = 1
		Instance_Frame.Position = UDim2.new(1.00222063, 0, 1.01891279, 0)
		Instance_Frame.Size = UDim2.new(10, 0, 10, 0)
		Instance_Frame.Visible = Options["Black Screen"].Value or false
		RunService:Set3dRenderingEnabled(not Options["Black Screen"].Value or true)
		--// ImageButton Instance
		Instance_ImageButton.Name = "ToggleClose"
		Instance_ImageButton.Parent = CoreGui:FindFirstChild("CrazyDay")
		Instance_ImageButton.AnchorPoint = Vector2.new(0.5, 0.5)
		Instance_ImageButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		Instance_ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Instance_ImageButton.BorderSizePixel = 0
		Instance_ImageButton.ZIndex = 9999
		Instance_ImageButton.Position = UDim2.new(0, 41, 0, 523)
		Instance_ImageButton.Size = UDim2.new(0, 65, 0, 65)
		Instance_ImageButton.Image = "rbxassetid://17789924997"

		if Options["Auto Hide Gui"].Value and gui_stage == 0 then
			gui_stage += 1
			gui().Visible = false
			CoreGui:FindFirstChild("CrazyDay"):FindFirstChild("ToggleClose").Image = "rbxassetid://17789926070"
		end
		connet_immage = Instance_ImageButton.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and gui() then
				gui().Visible = not gui().Visible
				if not gui().Visible then
					Instance_ImageButton.Image = "rbxassetid://17789926070"
				else
					Instance_ImageButton.Image = "rbxassetid://17789924997"
				end
			end
		end)
		--// UICorner Instance
		Instance_UICorner.Parent = Instance_ImageButton
		Instance_UICorner.CornerRadius = UDim.new(1, 1)
		--// UiStroke Instance
		Instance_UIStroke.Parent = Instance_ImageButton
		Instance_UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		Instance_UIStroke.LineJoinMode = Enum.LineJoinMode.Round
		Instance_UIStroke.Thickness = 1
		Instance_UIStroke.Color = Color3.fromRGB(120, 120, 120)

		local function unload_ui()
			while wait() do
				if Fluent.Unloaded then
					connet_immage:Disconnect()
					connet_immage = nil
					RunService:Set3dRenderingEnabled(true)
					CoreGui:FindFirstChild("function running").Enabled = false
					getgenv()["Script Loaded"] = false
					break
				end
			end
		end
		coroutine.resume(coroutine.create(unload_ui))
		repeat task.wait() until CoreGui:FindFirstChild("CrazyDay") and getgenv()["Successfully loaded"] and getgenv()["Script Loaded"] ~= nil
		--// Script running function
		if getgenv()["Script Loaded"] == true then
			if current_map() == "CharacterTest" then CoreGui:FindFirstChild("function running").Enabled = true getgenv()["Executeing"] = false return Notify("Failed to load function (Error)","This map is not supported.") end
			local UniversalGui = plr_gui:WaitForChild("UniversalGui")
			local main_remote_event = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("MainRemoteEvent")
			local main_remote_function = ReplicatedStorage:WaitForChild("RemoteFunctions"):WaitForChild("MainRemoteFunction")
			local bv = Instance.new("BodyVelocity")
			local player_disply = ReplicatedStorage:WaitForChild(plr.Name.."StatDisplay")
			local current_method
			local All_GoldSpent = 0
			local shade_current
			local The_CardTables = {}
			local clear_table = {
				player_disply:WaitForChild("StageClear").Value,
				player_disply:WaitForChild("BossRushClears").Value,
				player_disply:WaitForChild("RaidClears").Value,
				player_disply:WaitForChild("WeeklyShadowRaidsCleared").Value,
			}
			local RaidBeat = {}
			for i,v in next,player_disply:GetChildren() do
				if string.find(v.Name,"RaidBeat") then
					if not RaidBeat[v.Name] then
						RaidBeat[v.Name] = {}
					end
					table.insert(RaidBeat[v.Name],v.Value)
				end
			end
			local function auto_farm()
				if (not Options["Auto Join (Current Dimension)"].Value and not Options["Auto Join (Highnest)"].Value and not Options["Auto Join (Raid)"].Value and not Options["Auto Join (Raid Challenge)"].Value and not Options["Auto Join (Speed Raid)"].Value and not Options["Auto Join (Boss Rush)"].Value and not Options["Auto Join (Infinite Mode)"].Value) then
					return false
				elseif (Options["Auto Join (Current Dimension)"].Value or Options["Auto Join (Highnest)"].Value or Options["Auto Join (Raid)"].Value or Options["Auto Join (Raid Challenge)"].Value or Options["Auto Join (Speed Raid)"].Value or Options["Auto Join (Boss Rush)"].Value or Options["Auto Join (Infinite Mode)"].Value) then
					return true
				end
			end
			local function get_currency_gem_gold(name)
				for i,v in pairs(UniversalGui.LeftUIFrame.OwnHealthBarFrame:GetDescendants()) do
					if v.Name == name and v:IsA("TextLabel") then --[[ Gold / Gem]]
						return v.Text
					end
				end
			end
			local function current_level_upgrade()
				return plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay.UpgradeFrame.CardLevel.Text:split(". ")[2]:split(" / ")[1]
			end
			local function current_gold_upgrade()
				return plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay.UpgradeFrame.GoldCost.Text
			end
			local function raid_resultUI()
				for i,v in next,UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame:GetDescendants() do
					if v.Name == "RaidRewardGridFrame" and v.Parent.Name == 'Shadow' then
						return v
					end
				end
			end
			local function get_cardlvl(id)
				for i,v in ipairs(plr_gui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
					if v:IsA("ImageButton") and v.Name ~= "CardInventorySlot" then
						if v.Name == id then
							return v.LevelReq.Text:split(". ")[2]
						end
					end
				end
			end
			--// Misc function
			plr:GetPropertyChangedSignal("RespawnLocation"):Connect(function ()
				pcall(function()
					method_stage = 0
					getgenv()["enemy spawning"] = true
					task.wait(0.35)
					getgenv()["enemy spawning"] = false
				end)
			end)
			hookfunction(warn, newcclosure(function (value)
				return nil
			end))
			coroutine.resume(coroutine.create(function () --// Game
				local function ontounching_ignore()
					pcall(function() --// ใส่กัน มันหา humanoidrootpart ไม่เจอ
						plr.Character.HumanoidRootPart.Touched:Connect(function(part)
							if part.Name == "Ignore" then
								getgenv()["On Dodgeing"] = true
								repeat task.wait() until not part.Parent
								getgenv()["On Dodgeing"] = false
							end
						end)
					end)
				end
				--[[local function humanoid_invicible()
					pcall(function ()
						plr.Character.HumanoidRootPart.ChildAdded:Connect(function(v)
							if v.Name == "IFrameText" then
								getgenv()["On invincible"] = true
								print("Using a invincible skill : true")
								repeat task.wait() until not v.Parent
								getgenv()["On invincible"] = false
								print("Using a invincible skill : false")
							end
						end)
					end)
				end]]
				local is_connect_value
				local function onCharacterAdded(char)
					local humanoid = char:WaitForChild("Humanoid", 5)
					if not humanoid then
						return
					end
					humanoid.Died:Connect(function()
						getgenv()["On Dodgeing"] = false
						getgenv()["On Safe Mode"] = false
						getgenv()["On Bringing"] = false
						getgenv()["humanoid Died"] = true
						method_stage = 0
						is_connect_value =  plr.CharacterAdded:Connect(function()
							task.wait(1.15)
							method_stage = 0
							getgenv()["humanoid Died"] = false
							ontounching_ignore()
							for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
								if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") then
									v.Head.Transparency = 1
								end
							end
							if is_connect_value then
								is_connect_value:Disconnect()
								is_connect_value = nil
							end
						end)
					end)
				end
				plr.CharacterAdded:Connect(onCharacterAdded)
				do
					repeat task.wait() until tonumber(UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) > 0
					local plr_on_character = plr.Character or plr.CharacterAdded:Wait()
					if plr_on_character then
						ontounching_ignore()
						onCharacterAdded(plr_on_character)
					end
				end
				Workspace:WaitForChild("Folders"):WaitForChild("Debris").ChildAdded:Connect(function (v)
					pcall(function ()
						if (table.find({"telegraph"},v.Name:lower()) or v.Name == "FlameTrail") and v.ClassName ~= "Model" and Options["Dodge Skill"].Value and not getgenv()["On Safe Mode"] and not getgenv()["On Bringing"] then
							if v.Name == "FlameTrail" then
								task.wait(0.065)
								if v:FindFirstChild("P1") == nil then return
								elseif v:FindFirstChild("P1") and v.P1.Texture ~= "rbxassetid://6169516856" then return
								end
							end
							local a = v:Clone()
							local side = math.clamp(3.175,0,10)
							local Sizeto = v.Size + Vector3.new(side,100,side)
							a.Size = Vector3.new(0,0,v.Size.Z)
							if v.ClassName == "MeshPart" then
								a.Size = Vector3.new(0,0,100)
								Sizeto = v.Size + Vector3.new(side,side,100)
							end
							game:GetService("TweenService"):Create(a,TweenInfo.new(0.1),{Size = Sizeto}):Play()
							a.CFrame = v.CFrame + Vector3.new(0,0,0)
							a.Anchored = true
							a.Transparency = 1
							a.CanCollide = true
							a.Name = "Ignore"
							a.Parent = v.Parent
							repeat task.wait() until not v.Parent or not Options["Dodge Skill"].Value or getgenv()["On Safe Mode"] or getgenv()["On Bringing"]
							a:Destroy()
						end
					end)
				end)
			end))
			--// Main function
			coroutine.resume(coroutine.create(function ()--// Safe Mode
				while task.wait() do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then break end
					pcall(function ()
						-- // Check to Safe
						if Options["Auto Safe"].Value and auto_farm() and tonumber(UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) <= tonumber(Options["Health to Safe"].Value * (plr.Character.Head.PlayerHealthBarGui.HealthText.Text:split("/")[2] / 100)) and not getgenv()["humanoid Died"] then
							getgenv()["On Safe Mode"] = true
						elseif Options["Auto Safe"].Value and auto_farm() and tonumber(UniversalGui.LeftUIFrame.OwnHealthBarFrame.HealthAmount.Text) >= tonumber(Options["Health to Safe"].Value * (plr.Character.Head.PlayerHealthBarGui.HealthText.Text:split("/")[2] / 100)) and not getgenv()["humanoid Died"] then
							getgenv()["On Safe Mode"] = false
						end
						--// Safe Mode Playing
						if getgenv()["On Safe Mode"] and not getgenv()["humanoid Died"] then
							for i,v in pairs(Workspace.Folders.SpawnPoints:GetChildren()) do
								if v.Name == plr.RespawnLocation.Name then
									tween_function(v,CFrame.new(0, 75, 0),150)
									tween_info:Play()
									tween_info.Completed:Wait()
									tween_info:Cancel()
								end
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function ()--// Misc Farm 1
				while wait() do
					--// Auto Join (Raid) #check
					if Options["Auto Join (Raid)"].Value and plr.leaderstats.Level.Value >= 15 and tonumber(os.date("!*t").min) <= 8 then
						getgenv()["Auto Join (Raid)"] = true
					elseif Options["Auto Join (Raid)"].Value and plr.leaderstats.Level.Value >= 15 and tonumber(os.date("!*t").min) > 8 then
						getgenv()["Auto Join (Raid)"] = false
					elseif not Options["Auto Join (Raid)"].Value and plr.leaderstats.Level.Value >= 15 and getgenv()["Auto Join (Raid)"] then
						getgenv()["Auto Join (Raid)"] = false
					end
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) and getgenv()["Auto Join (Raid)"] and not string.find(current_map(),"Raid") then
						Notify("Auto Join (Raid)","The raid has opened.","Teleporting in 5 second")
						task.wait(5)
						game:GetService("TeleportService"):Teleport(7338881230)
						break
					end
					if Options["Auto Retry"].Value and UniversalGui.UniversalCenterUIFrame.ResultUI.Visible and UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.RetryDungeonButton.Visible and tonumber(current_stage()) ~= 1 then
						if not getgenv()["Auto Join (Raid)"] then
							firesignal(UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.RetryDungeonButton.MouseButton1Down,plr)
						elseif getgenv()["Auto Join (Raid)"] then
							firesignal(UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.LeaveDungeonButton.MouseButton1Down,plr)
						end
					elseif not Options["Auto Retry"].Value and UniversalGui.UniversalCenterUIFrame.ResultUI.Visible and UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.LeaveDungeonButton.Visible and tonumber(current_stage()) ~= 1 then
						firesignal(UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.LeaveDungeonButton.MouseButton1Down,plr)
					end
				end
			end))
			coroutine.resume(coroutine.create(function ()
				while wait() do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then break end
					pcall(function ()
						local is_blacklist = table.find(blacklist_characters,player_disply.CharacterName.Value)
						--// Current Method
						if not is_blacklist then
							if Options["Auto Set Distance"].Value then
								if boss_bar() then
									if Options["Current Method"].Value == "Over" then
										current_method = CFrame.new(0 ,getClosestBoss().HumanoidRootPart.Size.Y - (getClosestBoss().HumanoidRootPart.Size.Y  - 3.5),0) * CFrame.Angles(math.rad(-90),0,0)
									elseif Options["Current Method"].Value == "Under" then
										current_method = CFrame.new(0 ,-getClosestBoss().HumanoidRootPart.Size.Y - (getClosestBoss().HumanoidRootPart.Size.Y - 3.5),0) * CFrame.Angles(math.rad(90),0,0)
									elseif Options["Current Method"].Value == "Front" then
										current_method = CFrame.new(0 ,0 ,-getClosestBoss().HumanoidRootPart.Size.Z + 4.5) * CFrame.Angles(math.rad(0),1800,0)
									elseif Options["Current Method"].Value == "Behind" then
										current_method = CFrame.new(0 ,0 ,getClosestBoss().HumanoidRootPart.Size.Z + 4.5)
									end
								elseif not boss_bar() then
									if Options["Current Method"].Value == "Over" then
										current_method = CFrame.new(0 ,getClosestMob().HumanoidRootPart.Size.Y + 4.35 ,0) * CFrame.Angles(math.rad(-90),0,0)
									elseif Options["Current Method"].Value == "Under" then
										current_method = CFrame.new(0 ,-getClosestMob().HumanoidRootPart.Size.Y - 4.35 ,0) * CFrame.Angles(math.rad(90),0,0)
									elseif Options["Current Method"].Value == "Front" then
										current_method = CFrame.new(0 ,0 ,-getClosestMob().HumanoidRootPart.Size.Z + 5.5) * CFrame.Angles(math.rad(0),1800,0)
									elseif Options["Current Method"].Value == "Behind" then
										current_method = CFrame.new(0 ,0 ,getClosestMob().HumanoidRootPart.Size.Z + 5.5)
									end
								end
							elseif not Options["Auto Set Distance"].Value then
								if Options["Current Method"].Value == "Over" then
									current_method = CFrame.new(0 , Options["Current Distance"].Value, 0) * CFrame.Angles(math.rad(-90),0,0)
								elseif Options["Current Method"].Value == "Under" then
									current_method = CFrame.new(0 , -Options["Current Distance"].Value, 0) * CFrame.Angles(math.rad(90),0,0)
								elseif Options["Current Method"].Value == "Front" then
									current_method = CFrame.new(0 ,0 ,-Options["Current Distance"].Value) * CFrame.Angles(math.rad(0),1800,0)
								elseif Options["Current Method"].Value == "Behind" then
									current_method = CFrame.new(0 ,0 ,Options["Current Distance"].Value)
								end
							end
						elseif is_blacklist then
							if Options["Current Method"].Value == "Over" then
								current_method = CFrame.new(0 ,1.5 ,0) * CFrame.Angles(math.rad(-90),0,0)
							elseif Options["Current Method"].Value == "Under" then
								current_method = CFrame.new(0 ,-1.5 ,0) * CFrame.Angles(math.rad(90),0,0)
							elseif Options["Current Method"].Value == "Front" then
								current_method = CFrame.new(0, 0, -1.5) * CFrame.Angles(math.rad(0),1800,0)
							elseif Options["Current Method"].Value == "Behind" then
								current_method = CFrame.new(0, 0, 1.5)
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function ()--// Misc Farm 2
				while task.wait() do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then break end
					pcall(function ()
						if auto_farm() then
							--// Noclip
							if not getgenv()["On Dodgeing"] then
								setCollide(false)
							elseif getgenv()["On Dodgeing"] then
								setCollide(true)
								if tween_info then
									tween_info:Cancel()
								end
							end
							local BeenASecond, V3 = false, Vector3.new(0, 0, 0)
							for _, v in ipairs(plr.Character:GetDescendants()) do
								if v.IsA(v, "BasePart") then
									v.Velocity, v.RotVelocity = V3, V3
								end
							end
							plr.Character.Humanoid.PlatformStand = true
							bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
							bv.MaxForce = Vector3.new(100000,100000,100000)
							bv.Velocity = Vector3.new(0,0,0)

							--// Bring Mode Misc
							if getgenv()["On Bringing"] and getClosestobJect() and dist_enemy(getClosestobJect().HumanoidRootPart) <= 17.5 then
								for i, v in ipairs(Workspace.Folders.Monsters:GetChildren()) do
									if v:FindFirstChildOfClass("BillboardGui") and v:FindFirstChild("Head") and v.Head.Transparency ~= 10 then
										if (plr.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude <= 37.5 then
											v.Head.Transparency = 10
										end
									end
								end
							end
						elseif not auto_farm() then
							bv.Parent = nil
							if plr.Character.Humanoid.PlatformStand == true then
								plr.Character.Humanoid.PlatformStand = false
							end
							if tween_info then
								tween_info:Cancel()
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function ()--// Main Farm Infinite Mode Playing
				if current_map() == "Infinite Mode" then
					plr_gui:WaitForChild("BattleGui"):WaitForChild("CenterUIFrame"):WaitForChild("WaveClearClearText"):GetPropertyChangedSignal("Text"):Connect(function ()
						local wave_value = plr_gui:WaitForChild("BattleGui"):WaitForChild("CenterUIFrame"):WaitForChild("WaveClearClearText").Text
						if string.len(wave_value) == 2 and string.find(wave_value,"0") then
							getgenv()["On Bringing (Infinite)"] = false
						else
							getgenv()["On Bringing (Infinite)"] = true
							task.wait(3)
							getgenv()["On Bringing (Infinite)"] = false
						end
					end)
				end
				while task.wat() do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or current_map() ~= "Infinite Mode" then break end
					pcall(function ()
						if getgenv()["On Bringing (Infinite)"] and not getgenv()["humanoid Died"] then
							tween_function(Workspace:WaitForChild("GameMap"):FindFirstChild("Infinite Mode").Base.Base["Hexagon Base"],CFrame.new(0,75,0) * CFrame.Angles(math.rad(-90),0,0),150)
							tween_info:Play()
							tween_info.Completed:Wait()
							tween_info:Cancel()
						elseif not getgenv()["On Bringing (Infinite)"] then
							if not boss_bar() and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] and not getgenv()["humanoid Died"] then
								tween_function(getClosestMob().HumanoidRootPart,current_method,125)
								tween_info:Play()
								if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
									tween_info:Cancel()
								end
							elseif boss_bar() and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] and not getgenv()["humanoid Died"] then
								tween_function(getClosestBoss().HumanoidRootPart,current_method,125)
								tween_info:Play()
								if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
									tween_info:Cancel()
								end
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function () --// Main Farm
				while task.wait() do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) or current_map() == "Infinite Mode" then break end
					pcall(function ()
						if auto_farm() then
							--// Normal Mode
							if Options["Current Farm Mode"].Value == "Normal Mode" and not getgenv()["humanoid Died"] then
								if not boss_bar() and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] then
									tween_function(getClosestMob().HumanoidRootPart,current_method,150)
									tween_info:Play()
									if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
										tween_info:Cancel()
									end
								elseif boss_bar() and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] then
									tween_function(getClosestBoss().HumanoidRootPart,current_method,150)
									tween_info:Play()
									if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
										tween_info:Cancel()
									end
								end
							--// Bring Mode
							elseif Options["Current Farm Mode"].Value == "Bring Mode" and not getgenv()["enemy spawning"] and not getgenv()["humanoid Died"] then
								if not boss_bar() and method_stage == 0 and getClosestobJect() and plr.Character.HumanoidRootPart.Anchored == false then
									repeat
										getgenv()["On Bringing"] = true
										tween_function(getClosestobJect().HumanoidRootPart,CFrame.new(0,13.5,0),150)
										tween_info:Play()
										task.wait(0.0875)
									until boss_bar() or method_stage ~= 0 or not getClosestobJect() or not auto_farm() or getgenv()["enemy spawning"] or getgenv()["humanoid Died"]
									method_stage = 1
								elseif not boss_bar() and method_stage == 1 and not getClosestobJect() and getNormalEnemy() and plr.Character.HumanoidRootPart.Anchored == false then
									getgenv()["On Bringing"] = true
									tween_function(getNormalEnemy().HumanoidRootPart,CFrame.new(0,50,0),150)
									tween_info:Play()
									tween_info.Completed:Wait()
									task.wait(2.675)
									method_stage = 2
								elseif not boss_bar() and method_stage == 2 and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] then
									getgenv()["On Bringing"] = false
									tween_function(getClosestMob().HumanoidRootPart,current_method,150)
									tween_info:Play()
									if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
										tween_info:Cancel()
									end
								elseif boss_bar() and not getgenv()["On Safe Mode"] and not getgenv()["On Dodgeing"] then
									getgenv()["On Bringing"] = false
									tween_function(getClosestBoss().HumanoidRootPart,current_method,150)
									tween_info:Play()
									if (getgenv()["On Safe Mode"] or getgenv()["On Dodgeing"] or getgenv()["humanoid Died"] or not auto_farm()) and tween_info then
										tween_info:Cancel()
									end
								end
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function () --// Skill
				while task.wait(0.115) do
					if (game.PlaceId == 7338881230 or game.PlaceId == 6938803436 or game.PlaceId == 7274690025) then break end
					pcall(function ()
						if Options["Auto Skill"].Value and auto_farm() and dist_enemy(getClosestMob().HumanoidRootPart) <= Options["Current Skill Distance"].Value and not getgenv()["On Safe Mode"] and not getgenv()["On Bringing"] and not getgenv()["On Bringing (Infinite)"] and plr.Character.HumanoidRootPart.Anchored == false then
							local skill = UniversalGui.UniversalCenterUIFrame.SlotsHolder
							--// Main
							if skill["Skill"..Options["Skill One"].Value].Visible and tonumber(skill["Skill"..Options["Skill One"].Value].SkillName.Text) == nil then
								main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options["Skill One"].Value))
							end
							if skill["Skill"..Options["Skill Two"].Value].Visible and tonumber(skill["Skill"..Options["Skill One"].Value].SkillName.Text) ~= nil and tonumber(skill["Skill"..Options["Skill Two"].Value].SkillName.Text) == nil then
								main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options["Skill Two"].Value))
							end
							if skill["Skill"..Options["Skill Third"].Value].Visible and tonumber(skill["Skill"..Options["Skill Two"].Value].SkillName.Text) ~= nil and tonumber(skill["Skill"..Options["Skill Third"].Value].SkillName.Text) == nil then
								main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options["Skill Third"].Value))
							end
							if skill["Skill"..Options["Skill Fourth"].Value].Visible and tonumber(skill["Skill"..Options["Skill Third"].Value].SkillName.Text) ~= nil and tonumber(skill["Skill"..Options["Skill Fourth"].Value].SkillName.Text) == nil then
								main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options["Skill Fourth"].Value))
							end
							if skill["Skill"..Options["Skill Fifth"].Value].Visible and tonumber(skill["Skill"..Options["Skill Fourth"].Value].SkillName.Text) ~= nil and tonumber(skill["Skill"..Options["Skill Fifth"].Value].SkillName.Text) == nil then
								main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},tonumber(Options["Skill Fifth"].Value))
							end
							--// Assist
							for i,v in pairs(Options["Current Assists"].Value) do
								if i and v == true then
									if skill["Skill"..i].Visible and (tostring(skill["Skill"..i].SkillName.Text) ~= "None" or tonumber(skill["Skill"..tostring(i)].SkillName.Text) == nil or 0) then
										if string.find(i,"1") then
											main_remote_event:FireServer("Use"..i:split("1")[1].."Skill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},1)
										elseif string.find(i,"2") then
											main_remote_event:FireServer("Use"..i:split("2")[1].."Skill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position)},2)
										end
									end
								end
							end
							--// Attack
							if tonumber(skill["Skill1"].SkillName.Text) and tonumber(skill["Skill2"].SkillName.Text) and tonumber(skill["Skill3"].SkillName.Text) and tonumber(skill["Skill4"].SkillName.Text) then
								if skill["Skill5"].Visible and tonumber(skill["Skill5"].SkillName.Text) then
									if Options["Current Attack Method"].Value == "Remote" then
										main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position),["attackNumber"] = 4},"BasicAttack")
									elseif Options["Current Attack Method"].Value == "Click" then
										game:GetService("VirtualUser"):CaptureController()
										game:GetService("VirtualUser"):Button1Down(Vector2.new(1200,672))
									end
								elseif not skill["Skill5"].Visible then
									if Options["Current Attack Method"].Value == "Remote" then
										main_remote_event:FireServer("UseSkill",{["hrpCFrame"] = CFrame.new(getClosestMob().HumanoidRootPart.Position),["attackNumber"] = 4},"BasicAttack")
									elseif Options["Current Attack Method"].Value == "Click" then
										game:GetService("VirtualUser"):CaptureController()
										game:GetService("VirtualUser"):Button1Down(Vector2.new(1200,672))
									end
								end
							end
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function () --// Webhook
				if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then
					repeat task.wait() until raid_resultUI()
					--// Insert Webhook
					UniversalGui.UniversalCenterUIFrame:WaitForChild("ResultUI"):WaitForChild("Frame"):WaitForChild("RewardFrame"):WaitForChild("RewardGridFrame").ChildAdded:Connect(function(v)
						if not table.find(blacklist_items,v.Name) then
							if table.find(item_rewards,"`None      `") then
								repeat
									table.remove(item_rewards,table.find(item_rewards,"`None      `"))
								task.wait()
								until not table.find(item_rewards,"`None      `")
							end
							if not v:FindFirstChild("Gradient") then
								table.insert(item_rewards,"`"..v.Name.." [Common]`")
							elseif v:FindFirstChild("Gradient") then
								if tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Uncommon]`")
								elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Rare]`")
								elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Epic]`")
								elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Legendary]`")
								else
									table.insert(item_rewards,"`"..v.Name.." [Mythic]`")
								end
							end
						elseif table.find(blacklist_items,v.Name) and v.Name ~= "BossRushEntryPass" then
							if table.find(currency_rewards,"`None     `") then
								repeat
									table.remove(currency_rewards,table.find(currency_rewards,"`None     `"))
								task.wait()
								until not table.find(currency_rewards,"`None     `")
							end
							if tonumber(v.LevelReq.Text) then
								if not currency_rewards[v.Name] then
									repeat
										currency_rewards[v.Name] = {}
										task.wait()
									until currency_rewards[v.Name]
								end
								table.insert(currency_rewards[v.Name] , tonumber(v.LevelReq.Text))
							end
						end
					end)
					raid_resultUI().ChildAdded:Connect(function (v)
						if not table.find(blacklist_items,v.Name) then
							if table.find(item_rewards,"`None      `") then
								repeat
									table.remove(item_rewards,table.find(item_rewards,"`None      `"))
								task.wait()
								until not table.find(item_rewards,"`None      `")
							end
							if not v:FindFirstChild("Gradient") then
								table.insert(item_rewards,"`"..v.Name.." [Common]`")
							elseif v:FindFirstChild("Gradient") then
								if tostring(v.Gradient.Color) == "0 0.352941 1 0.407843 0 1 0.513726 1 0.635294 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Uncommon]`")
								elseif tostring(v.Gradient.Color) == "0 0 0.666667 1 0 1 0.6 0.780392 1 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Rare]`")
								elseif tostring(v.Gradient.Color) == "0 0.666667 0.333333 1 0 1 0.352941 0.494118 1 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Epic]`")
								elseif tostring(v.Gradient.Color) == "0 1 0.380392 0.392157 0 1 1 0.639216 0.278431 0 " then
									table.insert(item_rewards,"`"..v.Name.." [Legendary]`")
								else
									table.insert(item_rewards,"`"..v.Name.." [Mythic]`")
								end
							end
						elseif table.find(blacklist_items,v.Name) and v.Name ~= "BossRushEntryPass" then
							if table.find(currency_rewards,"`None     `") then
								repeat
									table.remove(currency_rewards,table.find(currency_rewards,"`None     `"))
								task.wait()
								until not table.find(currency_rewards,"`None     `")
							end
							if tonumber(v.LevelReq.Text) then
								if not currency_rewards[v.Name] then
									repeat
										currency_rewards[v.Name] = {}
										task.wait()
									until currency_rewards[v.Name]
								end
								table.insert(currency_rewards[v.Name] , tonumber(v.LevelReq.Text))
							end
						end
					end)
					--// Send Webhook (Normal Webhook)
					UniversalGui.UniversalCenterUIFrame.ResultUI:GetPropertyChangedSignal("Visible"):Connect(function()
						if Options["Send Webhook"].Value and not table.find(Ignore_webhook,"Match Result") then
							if not string.find(Options["Webhook URL"].Value,"https://discord.com/api/webhooks") or Options["Webhook URL"].Value == nil then return Notify("Send Webhook (Error)","URL does not match the database.") end
							task.wait(1.5)
							local rank_res = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.ResultDiamond.ResultRank
							local current_rank_res = "Unknown"
							local currnet_status = " [End!]"
							local dimension_or_raid
							local how_much_clear
							local time_end
							if current_map() == "Infinite Mode" then
								time_end = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.TimeText.Text
								dimension_or_raid = "GameMap: "..current_map().."\nWave Reach: "..plr_gui.BattleGui.CenterUIFrame.WaveClearClearText.Text
								how_much_clear = "Max Record: "..player_disply.InfiniteRecord.Value
							else
								if player_disply.StageClear.Value ~= clear_table[1] then
									time_end = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.TimeText.Text
									dimension_or_raid = "Dimension: "..map_split().."\nStage Clear: "..tostring(current_stage())
									how_much_clear = "Dimension Clears: "..player_disply.StageClear.Value
								elseif player_disply.BossRushClears.Value ~= clear_table[2] then
									time_end = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.TimeText.Text.."\nBest Record: "..player_disply.BossRushRecordString.Value
									dimension_or_raid = "GameMap: "..map_split().."\nStage Clear: 3"
									how_much_clear = "BossRush Clears: "..player_disply.BossRushClears.Value
								elseif player_disply.WeeklyShadowRaidsCleared.Value ~= clear_table[4] then
									time_end = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.TimeText.Text
									dimension_or_raid = "Speed Raid: "..map_split().."\nStage Clear: "..tostring(current_stage())
									how_much_clear = "SpeedRaid Clears: "..player_disply.WeeklyShadowRaidsCleared.Value
								else
									dimension_or_raid = "Error: d970%&&&&x".."\nStage Clear: 0"
									how_much_clear = "Error: 087&650+2"
								end
							end
							if not table.find(currency_rewards,"`None     `") then
								local name_count
								local sum
								for i,v in pairs(currency_rewards) do
									if #v ~= 0 then
										sum = 0
										for i = 1,#v do
											sum = sum + v[i]
										end
									end
									name_count = "`"..i.." ["..sum.."]`"
									table.insert(currency_rewards,name_count)
								end
							end
							if rank_res.Image == "rbxassetid://7443889715" then
								current_rank_res = "Rank: S+"
							elseif rank_res.Image == "rbxassetid://6715353612" then
								current_rank_res = "Rank: S"
							elseif rank_res.Image == "rbxassetid://6891959728" then
								current_rank_res = "Rank: A"
							elseif rank_res.Image == "rbxassetid://6891959611" then
								current_rank_res = "Rank: B"
							elseif rank_res.Image == "rbxassetid://6891959460" then
								current_rank_res = "Rank: C"
							elseif rank_res.Image == "rbxassetid://6782568839" then
								current_rank_res = "Rank: F"
							else
								current_rank_res = "Rank: D"
							end
							if table.find(currency_rewards,"`None     `") and table.find(item_rewards,"`None      `") and current_rank_res == "Rank: F" then
								currnet_status = " [Defeat!]"
								dimension_or_raid = "Dimension: "..map_split().."\nStage Clear: "..tostring(current_stage())
								how_much_clear = "Dimension Clears: "..player_disply.StageClear.Value
								time_end = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.TimeText.Text
							else
								currnet_status = " [Victory!]"
							end
							local trait_token = plr_gui.MainGui.CenterUIFrame.CharacterTraitFrame.Frame.TraitGearChangeTrait.Text
							local raid_token = plr_gui.MainGui.CenterUIFrame.Shop.Frame.ShopRaidTokenCounter.ShopRaidTokenAmount.Text
							local speed_token = plr_gui.MainGui.CenterUIFrame.RaidShop.SpeedRaidShopUIHolder.SpeedRaidShopCurrencyCounter.SpeedRaidShopCurrencyAmount.Text
							local bossrush_token = plr_gui.MainGui.CenterUIFrame.BossRushShop.BossRushShopCurrencyCounter.BossRushShopCurrencyAmount.Text
							local damage_deal = UniversalGui.UniversalCenterUIFrame.ResultUI.Frame.DamageDealtText.Text
							local exp = UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text:split("%")[1].."/100%"
							local Data = game:GetService("HttpService"):JSONEncode({
								["username"] = "Anime Dimensions Simulator : Notification",
								["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
								content = nil,
								embeds = {{
								  ["title"] = nil,
								  ["color"] = tonumber(toHex(Options["Webhook Color"].Value)) or 0x7d7d7d,
								  ["description"] = nil,
								  ["footer"] = {
									["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
									["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
								  },
								  ["thumbnail"] = {
									["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
								  },
								  ["fields"] = {
									{
										["name"] = "**Item Rewards**",
										["value"] = "\n`[+]` "..table.concat(item_rewards,"\n`[+]` "),
										["inline"] = true
									},
									{
										["name"] = "**Currency Rewards**",
										["value"] = "\n`[+]` "..table.concat(currency_rewards,"\n`[+]` "),
										["inline"] = true
									},
									{
										["name"] = "**Match Information"..currnet_status.."**",
										["value"] = "```\n"..dimension_or_raid.."\n"..current_rank_res.."\n"..damage_deal.."\n"..time_end.."```",
										["inline"] = false
									},
									{
										["name"] = "**Player Information**".." __**|| ["..tostring(plr.Name).."] ||**__",
										["value"] = "```\nLevel: "..plr.leaderstats.Level.Value.." ["..exp.."]\nCardsOwned: "..player_disply.CardsOwned.Value.."/"..player_disply.MaxCardsOwned.Value.."\n"..how_much_clear.."\nCurrency:\n ∘ Gold: "..get_currency_gem_gold("Gold").."\n ∘ Gem: "..get_currency_gem_gold("Gem").."\n ∘ TraitToken: "..trait_token.."\n ∘ RaidToken: "..raid_token.."\n ∘ SpeedRaidToken: "..speed_token.."\n ∘ BossRushToken: "..bossrush_token.."```",
										["inline"] = false
									}
								},
							}}
							})
							local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
							response({Url = Options["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
						end
					end)
					--// Send Webhook (Raid Webhook)
					UniversalGui.UniversalCenterUIFrame.RaidResultUI:GetPropertyChangedSignal("Visible"):Connect(function()
						if Options["Send Webhook"].Value and not table.find(Ignore_webhook,"Match Result") then
							if not string.find(Options["Webhook URL"].Value,"https://discord.com/api/webhooks") or Options["Webhook URL"].Value == nil then return Notify("Send Webhook (Error)","URL does not match the database.") end
							task.wait(1.5)
							local current_rank_res = UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame.RankText.Text:split(":")[2]
							local damage_deal = UniversalGui.UniversalCenterUIFrame.RaidResultUI.Frame.DamageText.Text:split(":")[2]
							local dimension_or_raid = "Raid: "..map_split()
							local how_much_clear = "Raid Clears: Unknown"
							if player_disply.RaidClears.Value ~= clear_table[3] then
								for i,v in next,RaidBeat do
									if player_disply:FindFirstChild(i).Value ~= v[1] then
										dimension_or_raid = "Raid: "..map_split()
										how_much_clear = "Raid Clears: "..player_disply.RaidClears.Value.."\n"..i..": "..v[1]
									end
								end
							end
							if not table.find(currency_rewards,"`None     `") then
								local name_count
								local sum
								for i,v in pairs(currency_rewards) do
									if #v ~= 0 then
										sum = 0
										for i = 1,#v do
											sum = sum + v[i]
										end
									end
									name_count = "`"..i.." ["..sum.."]`"
									table.insert(currency_rewards,name_count)
								end
							end
							local trait_token = plr_gui.MainGui.CenterUIFrame.CharacterTraitFrame.Frame.TraitGearChangeTrait.Text
							local raid_token = plr_gui.MainGui.CenterUIFrame.Shop.Frame.ShopRaidTokenCounter.ShopRaidTokenAmount.Text
							local speed_token = plr_gui.MainGui.CenterUIFrame.RaidShop.SpeedRaidShopUIHolder.SpeedRaidShopCurrencyCounter.SpeedRaidShopCurrencyAmount.Text
							local bossrush_token = plr_gui.MainGui.CenterUIFrame.BossRushShop.BossRushShopCurrencyCounter.BossRushShopCurrencyAmount.Text
							local exp = UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text:split("%")[1].."/100%"
							local Data = game:GetService("HttpService"):JSONEncode({
								["username"] = "Anime Dimensions Simulator : Notification",
								["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
								content = nil,
								embeds = {{
								  ["title"] = nil,
								  ["color"] = tonumber(toHex(Options["Webhook Color"].Value)) or 0x7d7d7d,
								  ["description"] = nil,
								  ["footer"] = {
									["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
									["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
								  },
								  ["thumbnail"] = {
									["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
								  },
								  ["fields"] = {
									{
										["name"] = "**Item Rewards**",
										["value"] = "\n`[+]` "..table.concat(item_rewards,"\n`[+]` "),
										["inline"] = true
									},
									{
										["name"] = "**Currency Rewards**",
										["value"] = "\n`[+]` "..table.concat(currency_rewards,"\n`[+]` "),
										["inline"] = true
									},
									{
										["name"] = "**Match Information [End!]**",
										["value"] = "```\n"..dimension_or_raid.."\nStage Clear: 0\nRank:"..current_rank_res.."\nDamage:"..damage_deal.."\nTime: 08:00```",
										["inline"] = false
									},
									{
										["name"] = "**Player Information**".." __**|| ["..tostring(plr.Name).."] ||**__",
										["value"] = "```\nLevel: "..plr.leaderstats.Level.Value.." ["..exp.."]\nCardsOwned: "..player_disply.CardsOwned.Value.."/"..player_disply.MaxCardsOwned.Value.."\n"..how_much_clear.."\nCurrency:\n ∘ Gold: "..get_currency_gem_gold("Gold").."\n ∘ Gem: "..get_currency_gem_gold("Gem").."\n ∘ TraitToken: "..trait_token.."\n ∘ RaidToken: "..raid_token.."\n ∘ SpeedRaidToken: "..speed_token.."\n ∘ BossRushToken: "..bossrush_token.."```",
										["inline"] = false
									}
								},
							}}
							})
							local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
							response({Url = Options["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function ()--// Game \ Character
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) or getgenv()["Can't Equip Character"] then break end
					if Options["Auto Equip Character"].Value then
						if isfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json") and not string.find(readfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json"),"Character") then
							Notify("Auto Equip Character (Error)","Make sure the values in your file are correct")
							break
						else
							local lowjuwi = HttpService:JSONDecode(readfile("CrazyDay/"..Game.."/"..PlayerId.."/Character Save.json"))
							if (player_disply.CharacterName.Value ~= lowjuwi["Character1"]
							or player_disply.AssistCharacterName1.Value ~= lowjuwi["Character2"]
							or player_disply.AssistCharacterName2.Value ~= lowjuwi["Character3"]) and not getgenv()["Can't Equip Character"] then
								main_remote_function:InvokeServer("EquipCharacter",lowjuwi['Character1'])
								main_remote_function:InvokeServer("EquipCharacterAssist",lowjuwi['Character2'],1)
								main_remote_function:InvokeServer("EquipCharacterAssist",lowjuwi['Character3'],2)
								Notify("Successfully Equip Characters",player_disply.CharacterName.Value.."\n"..player_disply.AssistCharacterName1.Value.."\n"..player_disply.AssistCharacterName2.Value)
								break
							end
						end
					end
				end
			end))
			coroutine.resume(coroutine.create(function () --// Game \ Cards Equip
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then break end
					pcall(function ()
						if Options["Auto Equip"].Value then
							if update_card() then
								getgenv()["On Card Equiping"] = true
								unequip_cards()
								for i,v in ipairs(plr_gui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:GetChildren()) do
									if v:IsA("ImageButton") and v.LayoutOrder <= 3 then
										main_remote_function:InvokeServer("EquipCard",v.Name)
									end
								end
							elseif not update_card() and getgenv()["On Card Equiping"] then
								getgenv()["On Card Equiping"] = false
							end
						elseif not Options["Auto Equip"].Value and getgenv()["On Card Equiping"] then
							getgenv()["On Card Equiping"] = false
						end
					end)
				end
			end))
			coroutine.resume(coroutine.create(function () --// Game \ Cards Upgrade
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then break end
					if current_amout() ~= Max_current_amout() and getgenv()["Send Alrdy"] then
						repeat
							table.clear(The_CardTables)
							getgenv()["Send Alrdy"] = false
							task.wait()
						until not getgenv()["Send Alrdy"]
					end
					if Options["Auto Upgrade"].Value and not getgenv()["On Card Equiping"] then
						for i,v in ipairs(player_disply:GetChildren()) do
							if string.find(v.Name,"Slot") and v.Value ~= "" then
								if not card_Table[v.Value] then
									repeat
										table.clear(The_CardTables)
										getgenv()["Send Alrdy"] = false
										card_Table[v.Value] = "None"
										All_GoldSpent = 0
										task.wait()
									until card_Table[v.Value]
								end
							end
						end
					end
					if Options["Auto Upgrade"].Value then
						local card_inventory = plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay
						local Card_Name
						local Card_Rarity
						local Gold_spent = 0
						local To_SEND = {}
						local Check_ITS = false
						local MAIN_Health
						local MAIN_Attack
						for i,v in pairs(card_Table) do
							if v ~= Options["Max Upgrade"].Value then
								repeat
									firesignal(plr_gui.MainGui.CenterUIFrame.Inventory.Frame.CardInventoryFrame.CardInventoryScrollingFrame:FindFirstChild(i).MouseButton1Down,plr)
									if tonumber(Options["Max Upgrade"].Value) > tonumber(current_level_upgrade()) and tonumber(stringofnum(get_currency_gem_gold("Gold"))) > tonumber(current_gold_upgrade()) then
										main_remote_function:InvokeServer("UpgradeCard",i)
										Card_Name = card_inventory.ItemName.Text
										Card_Rarity = card_inventory.Rarity.Text
										MAIN_Health = card_inventory.CardDataFrame.CardScrollingFrame.Health.Stat.Text
										MAIN_Attack = card_inventory.CardDataFrame.CardScrollingFrame.Attack.Stat.Text
										Gold_spent += tonumber(current_gold_upgrade())
										All_GoldSpent += tonumber(current_gold_upgrade())
									end
									task.wait()
								until  tonumber(current_level_upgrade()) >= tonumber(Options["Max Upgrade"].Value) or tonumber(current_gold_upgrade()) > tonumber(stringofnum(get_currency_gem_gold("Gold")))
								Card_Name = card_inventory.ItemName.Text
								Card_Rarity = card_inventory.Rarity.Text
								MAIN_Health = card_inventory.CardDataFrame.CardScrollingFrame.Health.Stat.Text
								MAIN_Attack = card_inventory.CardDataFrame.CardScrollingFrame.Attack.Stat.Text
								for _,k in next,plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay.CardDataFrame.CardScrollingFrame:GetChildren() do
									if k.Name == "CardStatTemplate" then
										table.insert(To_SEND,k.Stat.Text)
										repeat
											Check_ITS = true
											task.wait()
										until Check_ITS == true
									end
								end
								for _,k in next,plr_gui.MainGui.CenterUIFrame.Inventory.Frame.InvOverlayOuterFrame.CardInventoryOverlay.CardDataFrame.CardScrollingFrame:GetChildren() do
									if Check_ITS == false and k:FindFirstChild("CardStatTemplate") == nil and k.Name == "UIGridLayout" then
										table.insert(To_SEND,"None")
									end
								end
								table.insert(The_CardTables,"▾ "..Card_Name.." ["..Card_Rarity.."]:\n   ∘ Card Id: "..i.."\n   ∘ Card Level: "..get_cardlvl(i).."\n   ∘ Gold Spent: "..Gold_spent.."\n   ∘ Upgrade: "..current_level_upgrade().."/25".."\n   ∘ Status Main:\n     - "..MAIN_Attack.."\n     - "..MAIN_Health.."\n   ∘ Status Sub:".."\n     - "..table.concat(To_SEND,"\n     - "))
								Gold_spent = 0
								To_SEND = {}
								Check_ITS = false
								card_Table[i] = Options["Max Upgrade"].Value
							end
						end
					end
				end
			end))
			coroutine.resume(coroutine.create(function () --// Send Webhook (card Upgrade)
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then break end
					if #The_CardTables > 0 and current_amout() == Max_current_amout() and not getgenv()["Send Alrdy"] and not getgenv()["On Card Equiping"] and not table.find(Ignore_webhook,"Upgrade Card") and Options["Send Webhook"].Value then
						local trait_token = plr_gui.MainGui.CenterUIFrame.CharacterTraitFrame.Frame.TraitGearChangeTrait.Text
						local raid_token = plr_gui.MainGui.CenterUIFrame.Shop.Frame.ShopRaidTokenCounter.ShopRaidTokenAmount.Text
						local speed_token = plr_gui.MainGui.CenterUIFrame.RaidShop.SpeedRaidShopUIHolder.SpeedRaidShopCurrencyCounter.SpeedRaidShopCurrencyAmount.Text
						local bossrush_token = plr_gui.MainGui.CenterUIFrame.BossRushShop.BossRushShopCurrencyCounter.BossRushShopCurrencyAmount.Text
						local exp = UniversalGui.LeftUIFrame.OwnHealthBarFrame.Exp.Text:split("%")[1].."/100%"
						local Data = game:GetService("HttpService"):JSONEncode({
							["username"] = "Anime Dimensions Simulator : Notification",
							["avatar_url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
							content = nil,
							embeds = {{
							  ["title"] = nil,
							  ["color"] = tonumber(toHex(Options["Webhook Color"].Value)) or 0x7d7d7d,
							  ["description"] = nil,
							  ["footer"] = {
								["text"] = "Time: "..os.date("%c").."\nCredit: YT » @crazyday3693",
								["icon_url"] = "https://yt3.ggpht.com/yti/ANjgQV_KI8R3VhsnEhzYD0M1EJXUU29p0YC5gzrrhv8nWzA7j6s=s88-c-k-c0x00ffffff-no-rj"
							  },
							  ["thumbnail"] = {
								["url"] = "https://tr.rbxcdn.com/1fb0c8f3fe70c5ec485cfab729d4ac44/150/150/Image/Webp",
							  },
							  ["fields"] = {
								{
									["name"] = "`                                                        `",
									["value"] = "                                                         ",
									["inline"] = false
								},
								{
									["name"] = "**Upgraded card**",
									["value"] = "```\n"..table.concat(The_CardTables,"\n").."\n▸ All Gold Spent: "..roundNumber(All_GoldSpent).."```",
									["inline"] = false
								},
								{
									["name"] = "**Player Information**".." __**|| ["..tostring(plr.Name).."] ||**__",
									["value"] = "```\nLevel: "..plr.leaderstats.Level.Value.." ["..exp.."]\nCardsOwned: "..player_disply.CardsOwned.Value.."/"..player_disply.MaxCardsOwned.Value.."\nCurrency:\n ∘ Gold: "..get_currency_gem_gold("Gold").."\n ∘ Gem: "..get_currency_gem_gold("Gem").."\n ∘ TraitToken: "..trait_token.."\n ∘ RaidToken: "..raid_token.."\n ∘ SpeedRaidToken: "..speed_token.."\n ∘ BossRushToken: "..bossrush_token.."```",
									["inline"] = false
								}
							},
						}}
						})
						local response = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or (request)
						response({Url = Options["Webhook URL"].Value, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = Data})
						getgenv()["Send Alrdy"] = true
					end
				end
			end))
			coroutine.resume(coroutine.create(function() --// Quests
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then break end
					if Options["Auto Claim (Speed Raid)"].Value then
						--// Speed Raid
						if shade_current == nil then
							for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.SpeedRaidFrame:GetChildren()) do
								if v.Name == "Shade" and i == 11 then
									shade_current = v
								end
							end
						else
							for i,v in pairs(shade_current:FindFirstChild("SpeedRaidScrollingFrame"):GetChildren()) do
								if v:IsA("ImageButton") then
									if v.RaidsButton.Cost.Text == "CLAIM" then
										local a_b = v.Name:split("SpeedRaidRewardTemplate")[2]
										game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("ClaimWeeklySpeedRaidReward",tonumber(a_b))
										v.RaidsButton.Cost.Text = "CLAIMED"
									end
								end
							end
						end
					end
					if Options["Auto Claim (Quest)"].Value then
						--// Daily Quest
						for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.QuestFrame.QuestFrames.DailyQuestFrame.DailyQuestScrollingFrame:GetChildren()) do
							if v:IsA("ImageLabel") then
								if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
									game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("CompleteDailyQuest",v.Name)
									v.Complete.Visible = true
								end
							end
						end
						--// Weekly Quest
						for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CenterUIFrame.QuestFrame.QuestFrames.WeeklyQuestFrame.WeeklyQuestScrollingFrame:GetChildren()) do
							if v:IsA("ImageLabel") then
								if v.QuestCounter.Text:split(" / ")[1] >= v.QuestCounter.Text:split(" / ")[2] and v.Complete.Visible == false then
									game:GetService("ReplicatedStorage").RemoteFunctions.MainRemoteFunction:InvokeServer("CompleteDailyQuest",v.Name)
									v.Complete.Visible = true
								end
							end
						end
					end
				end
			end))
			coroutine.resume(coroutine.create(function () --// Create \ Start Room
				while task.wait() do
					if (game.PlaceId ~= 7338881230 and game.PlaceId ~= 6938803436 and game.PlaceId ~= 7274690025) then break end
					if auto_farm() and not wait_for_a_second() then
						task.wait(0.55)
						--// Auto Join (Raid)
						if getgenv()["Auto Join (Raid)"] then
							main_remote_function:InvokeServer("CreateRoom",{
								["Difficulty"] = "Easy",
								["FriendsOnly"] = Options["Friends Only"].Value,
								["MapName"] = Options["Current Raid"].Value,
								["Hardcore"] = false
							})
							Notify("Successfully room created","MapName : "..Options["Current Raid"].Value.."\nDifficulty : Easy\nFriendsOnly : "..tostring(Options["Friends Only"].Value).."\nHardcore : false","Starting in 5 second")
							task.wait(5)
							main_remote_function:InvokeServer("TeleportPlayers")
							break
						else
							--// Auto Join (Speed Raid)
							if Options["Auto Join (Speed Raid)"].Value and plr.leaderstats.Level.Value >= 25 and plr_gui.MainGui.CenterUIFrame.PlayButtonsFrame.Frame.SpeedRaidBanner.SpeedRaidBannerOpenText.Text == "Ready to enter" then
								for i,v in pairs(plr_gui.MainGui.CenterUIFrame.SpeedRaidCharacterSelector.Shade.SpeedRaidCharacterInventoryScrollingFrame:GetChildren()) do
									if v:IsA("ImageButton") and v.CharacterImage.ImageTransparency == 0 then
										current_speedraid = v.Name
									end
								end
								getgenv()["Can't Equip Character"] = true
								Notify("Successfully room created","MapName : ShadowRaid".."\nCharacter : "..current_speedraid,"Starting in 5 second")
								task.wait(5)
								main_remote_function:InvokeServer("TeleportToShadowRaid",current_speedraid)
								break
							end
							--// Auto Join (Raid Challenge)
							if Options["Auto Join (Raid Challenge)"].Value and plr.leaderstats.Level.Value >= 30 and plr_gui.MainGui.CenterUIFrame.DailyRaidChallengeFrame.RaidChallengeRewardAvailable.Text == "Reward Available" then
								Notify("Successfully room created","MapName : RaidChallenge".."\nAward Status : Reward Available","Starting in 5 second")
								task.wait(5)
								main_remote_function:InvokeServer("TeleportToRaidChallenge")
								break
							end
							--// Auto Join (Boss Rush)
							if Options["Auto Join (Boss Rush)"].Value and plr.leaderstats.Level.Value >= 15 and plr_gui.MainGui.CenterUIFrame.BossRushFrame.BossRushFreeEntry.Text ~= "0 Free Entry Left" then
								Notify("Successfully room created","MapName : BossRush".."\nFree Entry Left : "..plr_gui.MainGui.CenterUIFrame.BossRushFrame.BossRushFreeEntry.Text:split(" Free")[1],"Starting in 5 second")
								task.wait(5)
								main_remote_function:InvokeServer("TeleportToBossRush")
								break
							end
							--// Auto Join (Infinite Mode)
							if Options["Auto Join (Infinite Mode)"].Value and plr.leaderstats.Level.Value >= 20 and plr_gui.MainGui.CenterUIFrame.PlayFrame.Frame.PlayRoomFrame.MapSelectionScrollingFrame["Infinite Mode"].PlayerReq.Text == "Trait Tokens Available" then
								main_remote_function:InvokeServer("CreateRoom",{
									["Difficulty"] = "Infinite",
									["FriendsOnly"] = Options["Friends Only"].Value,
									["MapName"] = "Infinite Mode",
									["Hardcore"] = false
								})
								Notify("Successfully room created","MapName : Infinite Mode\nDifficulty : Infinite\nFriendsOnly : "..tostring(Options["Friends Only"].Value).."\nHardcore : false","Starting in 5 second")
								task.wait(5)
								main_remote_function:InvokeServer("TeleportPlayers")
								break
							end
							--// Auto Join (Dimension)
							if (Options["Auto Join (Current Dimension)"].Value or Options["Auto Join (Highnest)"].Value) then
								main_remote_function:InvokeServer("CreateRoom",{
									["Difficulty"] = Options["Current Difficulty"].Value,
									["FriendsOnly"] = Options["Friends Only"].Value,
									["MapName"] = Options["Current Dimension"].Value,
									["Hardcore"] = Options["Hard core"].Value
								})
								Notify("Successfully room created","MapName : "..Options["Current Dimension"].Value.."\nDifficulty : "..Options["Current Difficulty"].Value.."\nFriendsOnly : "..tostring(Options["Friends Only"].Value).."\nHardcore : "..tostring(Options["Hard core"].Value),"Starting in 5 second")
								task.wait(5)
								main_remote_function:InvokeServer("TeleportPlayers")
								break
							end
						end
					end
				end
			end))

		end


    task.wait(0.75)
until CoreGui:FindFirstChild("CrazyDay") ~= nil or CoreGui:FindFirstChild("CrazyDay")
getgenv()["Executeing"] = false
if CoreGui:FindFirstChild("function running") and CoreGui:FindFirstChild("function running"):FindFirstChildOfClass("ImageButton") then
	if CoreGui:FindFirstChild("function running").Enabled == false then
		CoreGui:FindFirstChild("function running").Enabled = true
	end
end
